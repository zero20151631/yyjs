(function() {
	var R, B, E, J;
	function D(b, f) {
		if (!f) return b;
		for (var d in f) Da.call(f, d) && (b[d] = f[d]);
		return b
	}
	function Ea(b) {
		if (!b) return "";
		var b = b.toString(),
		f,
		d,
		c,
		h,
		e,
		g = [ - 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1];
		h = b.length;
		c = 0;
		for (e = ""; c < h;) {
			do f = g[b.charCodeAt(c++) & 255];
			while (c < h && -1 == f);
			if ( - 1 == f) break;
			do d = g[b.charCodeAt(c++) & 255];
			while (c < h && -1 == d);
			if ( - 1 == d) break;
			e += String.fromCharCode(f << 2 | (d & 48) >> 4);
			do {
				f = b.charCodeAt(c++) & 255;
				if (61 == f) return e;
				f = g[f]
			} while ( c < h && - 1 == f );
			if ( - 1 == f) break;
			e += String.fromCharCode((d & 15) << 4 | (f & 60) >> 2);
			do {
				d = b.charCodeAt(c++) & 255;
				if (61 == d) return e;
				d = g[d]
			} while ( c < h && - 1 == d );
			if ( - 1 == d) break;
			e += String.fromCharCode((f & 3) << 6 | d)
		}
		return e
	}
	function N(b, f) {
		for (var d = [], c = 0, h, e = "", g = 0; 256 > g; g++) d[g] = g;
		for (g = 0; 256 > g; g++) c = (c + d[g] + b.charCodeAt(g % b.length)) % 256,
		h = d[g],
		d[g] = d[c],
		d[c] = h;
		for (var l = c = g = 0; l < f.length; l++) g = (g + 1) % 256,
		c = (c + d[g]) % 256,
		h = d[g],
		d[g] = d[c],
		d[c] = h,
		e += String.fromCharCode(f.charCodeAt(l) ^ d[(d[g] + d[c]) % 256]);
		return e
	}
	function O(b, f) {
		for (var d = [], c = 0; c < b.length; c++) {
			for (var h = 0,
			h = "a" <= b[c] && "z" >= b[c] ? b[c].charCodeAt(0) - 97 : b[c] - 0 + 26, e = 0; 36 > e; e++) if (f[e] == h) {
				h = e;
				break
			}
			d[c] = 25 < h ? h - 26 : String.fromCharCode(h + 97)
		}
		return d.join("")
	}
	function Y(b) {
		for (var b = parseInt(b) || 3, b = isNaN(b) ? 3 : b, f = Z.length, d = ""; 0 <= b;) d += Z[Math.floor(Math.random() * f)],
		b--;
		return d
	}
	function Fa(b) {
		function f(b, f) {
			return b << f | b >>> 32 - f
		}
		function d(b) {
			var f = "",
			c, m;
			for (c = 7; 0 <= c; c--) m = b >>> 4 * c & 15,
			f += m.toString(16);
			return f
		}
		var c, h, e = Array(80),
		g = 1732584193,
		l = 4023233417,
		q = 2562383102,
		j = 271733878,
		n = 3285377520,
		p,
		x,
		v,
		t,
		r,
		b = function(b) {
			for (var b = b.replace(/\r\n/g, "\n"), f = "", d = 0; d < b.length; d++) {
				var c = b.charCodeAt(d);
				128 > c ? f += String.fromCharCode(c) : (127 < c && 2048 > c ? f += String.fromCharCode(c >> 6 | 192) : (f += String.fromCharCode(c >> 12 | 224), f += String.fromCharCode(c >> 6 & 63 | 128)), f += String.fromCharCode(c & 63 | 128))
			}
			return f
		} (b);
		p = b.length;
		var u = [];
		for (c = 0; c < p - 3; c += 4) h = b.charCodeAt(c) << 24 | b.charCodeAt(c + 1) << 16 | b.charCodeAt(c + 2) << 8 | b.charCodeAt(c + 3),
		u.push(h);
		switch (p % 4) {
		case 0:
			c = 2147483648;
			break;
		case 1:
			c = b.charCodeAt(p - 1) << 24 | 8388608;
			break;
		case 2:
			c = b.charCodeAt(p - 2) << 24 | b.charCodeAt(p - 1) << 16 | 32768;
			break;
		case 3:
			c = b.charCodeAt(p - 3) << 24 | b.charCodeAt(p - 2) << 16 | b.charCodeAt(p - 1) << 8 | 128
		}
		for (u.push(c); 14 != u.length % 16;) u.push(0);
		u.push(p >>> 29);
		u.push(p << 3 & 4294967295);
		for (b = 0; b < u.length; b += 16) {
			for (c = 0; 16 > c; c++) e[c] = u[b + c];
			for (c = 16; 79 >= c; c++) e[c] = f(e[c - 3] ^ e[c - 8] ^ e[c - 14] ^ e[c - 16], 1);
			h = g;
			p = l;
			x = q;
			v = j;
			t = n;
			for (c = 0; 19 >= c; c++) r = f(h, 5) + (p & x | ~p & v) + t + e[c] + 1518500249 & 4294967295,
			t = v,
			v = x,
			x = f(p, 30),
			p = h,
			h = r;
			for (c = 20; 39 >= c; c++) r = f(h, 5) + (p ^ x ^ v) + t + e[c] + 1859775393 & 4294967295,
			t = v,
			v = x,
			x = f(p, 30),
			p = h,
			h = r;
			for (c = 40; 59 >= c; c++) r = f(h, 5) + (p & x | p & v | x & v) + t + e[c] + 2400959708 & 4294967295,
			t = v,
			v = x,
			x = f(p, 30),
			p = h,
			h = r;
			for (c = 60; 79 >= c; c++) r = f(h, 5) + (p ^ x ^ v) + t + e[c] + 3395469782 & 4294967295,
			t = v,
			v = x,
			x = f(p, 30),
			p = h,
			h = r;
			g = g + h & 4294967295;
			l = l + p & 4294967295;
			q = q + x & 4294967295;
			j = j + v & 4294967295;
			n = n + t & 4294967295
		}
		r = d(g) + d(l) + d(q) + d(j) + d(n);
		return r.toLowerCase()
	}
	function F(b, f) {
		if ("js" == f) {
			var d = document.createElement("script");
			d.setAttribute("type", "text/javascript");
			d.setAttribute("src", b)
		} else "css" == f && (d = document.createElement("link"), d.setAttribute("rel", "stylesheet"), d.setAttribute("type", "text/css"), d.setAttribute("href", b));
		"undefined" != typeof d && document.getElementsByTagName("head")[0].appendChild(d)
	}
	function $() {
		return e.isAndroid ? e.isAndroid4 ? "adr4": "adr": e.isIPHONE ? "iph": e.isIPAD ? "ipa": e.isIPOD ? "ipo": "oth"
	}
	function G(b) {
		return e.isIPAD && 0 <= window.location.href.indexOf("v.youku.com") ? "x-player": 200 >= b ? "x-player x-player-200": 300 >= b ? "x-player x-player-200-300": 660 >= b ? "x-player x-player-300-660": 800 >= b ? "x-player x-player-660-800": "x-player"
	}
	var c = "2016/04/1312:11:20",
	c = "2016/04/1614:45:00",
	c = "2016/04/1722:44:04",
	c = "2016/04/1722:51:55",
	c = "2016/04/1810:51:46",
	c = "2016/04/1810:59:40",
	c = "2016/04/1813:25:57",
	c = "2016/04/1813:36:51",
	c = "2016/04/1813:40:25",
	c = "2016/04/1814:04:32",
	c = "2016/04/1814:24:39",
	c = "2016/04/1814:28:16",
	c = "2016/04/1814:29:20",
	c = "2016/04/1814:30:12",
	c = "2016/04/1814:33:06",
	c = "2016/04/1815:17:41",
	c = "2016/04/1815:19:28",
	c = "2016/04/1815:41:29",
	c = "2016/04/1815:43:12",
	c = "2016/04/1815:48:47",
	c = "2016/04/1815:49:40",
	c = "2016/04/1815:51:42",
	c = "2016/04/1815:52:36",
	c = "2016/04/1815:58:04",
	c = "2016/04/1816:04:16",
	c = "2016/04/1816:05:09",
	c = "2016/04/1816:07:13",
	c = "2016/04/1818:18:07",
	c = "2016/04/1818:21:33",
	c = "2016/04/1819:09:26",
	c = "2016/04/1819:14:58",
	c = "2016/04/1819:37:45",
	c = "2016/04/1819:39:02",
	c = "2016/04/1819:43:01",
	c = "2016/04/1819:44:42",
	c = "2016/04/1819:47:23",
	c = "2016/04/1910:03:44",
	c = "2016/04/1910:14:24",
	c = "2016/04/1910:23:55",
	c = "2016/04/1910:25:46",
	c = "2016/04/1910:28:16",
	c = "2016/04/1910:29:25",
	c = "2016/04/1910:37:36",
	c = "2016/04/1910:47:00",
	c = "2016/04/1911:00:21",
	c = "2016/04/1911:01:20",
	c = "2016/04/1911:14:55",
	c = "2016/04/1911:23:14",
	c = "2016/04/1911:28:10",
	c = "2016/04/1911:28:49",
	c = "2016/04/1911:29:42",
	c = "2016/04/1911:33:44",
	c = "2016/04/1911:34:50",
	c = "2016/04/1911:35:24",
	c = "2016/04/1911:41:01",
	c = "2016/04/1913:13:17",
	c = "2016/04/1913:16:00",
	c = "2016/04/1913:16:37",
	c = "2016/04/1913:18:27",
	c = "2016/04/1913:24:30",
	c = "2016/04/1913:30:57",
	c = "2016/04/1913:32:47",
	c = "2016/04/1913:39:43",
	c = "2016/04/1913:40:31",
	c = "2016/04/1913:43:25",
	c = "2016/04/1913:56:15",
	c = "2016/04/1913:57:10",
	c = "2016/04/1913:57:36",
	c = "2016/04/1914:00:08",
	c = "2016/04/1914:12:59",
	c = "2016/04/1914:28:56",
	c = "2016/04/1914:29:54",
	c = "2016/04/1914:40:27",
	c = "2016/04/1914:42:16",
	c = "2016/04/1914:43:52",
	c = "2016/04/1914:55:18",
	c = "2016/04/1914:56:18",
	c = "2016/04/1915:10:43",
	c = "2016/04/1915:35:24",
	c = "2016/04/1915:35:50",
	c = "2016/04/1915:40:24",
	c = "2016/04/1915:42:19",
	c = "2016/04/1915:42:37",
	c = "2016/04/1917:20:38",
	c = "2016/04/1917:22:45",
	c = "2016/04/1917:40:56",
	c = "2016/04/1917:53:08",
	c = "2016/04/1917:56:30",
	c = "2016/04/1917:59:18",
	c = "2016/04/1918:00:14",
	c = "2016/04/1918:05:02",
	c = "2016/04/1918:07:14",
	c = "2016/04/1918:08:22",
	c = "2016/04/1918:19:43",
	c = "2016/04/2010:56:01",
	c = "2016/04/2010:56:59",
	c = "2016/04/2015:05:30",
	c = "2016/04/2015:08:13",
	c = "2016/04/2015:11:45",
	c = "2016/04/2015:12:33",
	c = "2016/04/2015:13:14",
	c = "2016/04/2015:18:01",
	c = "2016/04/2015:20:05",
	c = "2016/04/2015:23:15",
	c = "2016/04/2015:25:39",
	c = "2016/04/2015:26:23",
	c = "2016/04/2015:26:54",
	c = "2016/04/2016:00:42",
	c = "2016/04/2016:06:18",
	c = "2016/04/2016:10:48",
	c = "2016/04/2016:14:05",
	c = "2016/04/2016:15:47",
	c = "2016/04/2016:18:25",
	c = "2016/04/2016:23:48",
	c = "2016/04/2016:24:22",
	c = "2016/04/2016:26:00",
	c = "2016/04/2016:29:37",
	c = "2016/04/2016:31:31",
	c = "2016/04/2017:34:49",
	c = "2016/04/2017:36:41",
	c = "2016/04/2017:38:26",
	c = "2016/04/2017:39:14",
	c = "2016/04/2017:53:08",
	c = "2016/04/2017:53:54",
	c = "2016/04/2017:55:09",
	c = "2016/04/2017:56:28",
	c = "2016/04/2017:56:51",
	c = "2016/04/2018:05:19",
	c = "2016/04/2018:06:39",
	c = "2016/04/2018:07:47",
	c = "2016/04/2018:08:18",
	c = "2016/04/2018:08:53",
	c = "2016/04/2018:10:00",
	c = "2016/04/2018:10:55",
	c = "2016/04/2018:11:32",
	c = "2016/04/2018:12:47",
	c = "2016/04/2018:19:25",
	c = "2016/04/2018:22:16",
	c = "2016/04/2109:49:14",
	c = "2016/04/2109:49:36",
	c = "2016/04/2109:56:41",
	c = "2016/04/2110:33:38",
	c = "2016/04/2110:48:02",
	c = "2016/04/2110:50:20",
	c = "2016/04/2111:19:31",
	c = "2016/04/2111:21:02",
	c = "2016/04/2111:29:23",
	c = "2016/04/2111:31:19",
	c = "2016/04/2111:34:12",
	c = "2016/04/2111:36:57",
	c = "2016/04/2111:37:53",
	c = "2016/04/2111:38:52",
	c = "2016/04/2111:39:33",
	c = "2016/04/2111:47:40",
	c = "2016/04/2111:59:12",
	c = "2016/04/2112:00:03",
	c = "2016/04/2112:04:07",
	c = "2016/04/2112:05:29",
	c = "2016/04/2112:06:45",
	c = "2016/04/2113:39:27",
	c = "2016/04/2113:41:16",
	c = "2016/04/2113:57:22",
	c = "2016/04/2113:58:01",
	c = "2016/04/2116:28:30",
	c = "2016/04/2117:56:04",
	c = "2016/04/2211:51:28",
	c = "2016/04/2211:55:46",
	c = "2016/04/2212:04:54",
	c = "2016/04/2215:53:41",
	c = "2016/04/2215:55:05",
	c = "2016/04/2215:55:20",
	c = "2016/04/2215:58:32",
	c = "2016/04/2216:16:37",
	c = "2016/04/2216:19:42",
	c = "2016/04/2216:20:33",
	c = "2016/04/2217:07:21",
	c = "2016/04/2217:07:51",
	c = "2016/04/2217:11:17",
	c = "2016/04/2218:04:45",
	c = "2016/04/2218:09:37",
	c = "2016/04/2218:13:46",
	c = "2016/04/2218:47:12",
	c = "2016/04/2218:48:54",
	c = "2016/04/2218:50:46",
	c = "2016/04/2218:55:54",
	c = "2016/04/2218:57:57",
	c = "2016/04/2219:01:52",
	c = "2016/04/2219:02:47",
	c = "2016/04/2219:10:06",
	c = "2016/04/2219:12:08",
	c = "2016/04/2219:20:03",
	c = "2016/04/2510:03:02",
	c = "2016/04/2510:24:50",
	c = "2016/04/2510:26:43",
	c = "2016/04/2510:35:54",
	c = "2016/04/2510:44:12",
	c = "2016/04/2510:45:19",
	c = "2016/04/2510:48:58",
	c = "2016/04/2510:52:30",
	c = "2016/04/2511:05:55",
	c = "2016/04/2511:14:31",
	c = "2016/04/2511:23:22",
	c = "2016/04/2511:30:35",
	c = "2016/04/2511:43:55",
	c = "2016/04/2511:49:52",
	c = "2016/04/2511:50:13",
	c = "2016/04/2513:14:10",
	c = "2016/04/2513:20:24",
	c = "2016/04/2513:21:16",
	c = "2016/04/2513:22:44",
	c = "2016/04/2513:27:39",
	c = "2016/04/2513:28:42",
	c = "2016/04/2513:39:22",
	c = "2016/04/2513:47:49",
	c = "2016/04/2513:50:39",
	c = "2016/04/2513:54:36",
	c = "2016/04/2513:57:05",
	c = "2016/04/2513:59:20",
	c = "2016/04/2514:03:16",
	c = "2016/04/2514:05:36",
	c = "2016/04/2514:08:49",
	c = "2016/04/2514:09:56",
	c = "2016/04/2514:10:46",
	c = "2016/04/2514:11:09",
	c = "2016/04/2514:11:40",
	c = "2016/04/2514:26:03",
	c = "2016/04/2514:28:27",
	c = "2016/04/2514:33:19",
	c = "2016/04/2515:29:08",
	c = "2016/04/2516:00:59",
	c = "2016/04/2516:04:13",
	c = "2016/04/2516:05:21",
	c = "2016/04/2516:05:56",
	c = "2016/04/2516:13:25",
	c = "2016/04/2516:22:06",
	c = "2016/04/2516:23:44",
	c = "2016/04/2516:24:45",
	c = "2016/04/2516:25:28",
	c = "2016/04/2516:26:42",
	c = "2016/04/2516:27:32",
	c = "2016/04/2517:13:39",
	c = "2016/04/2519:08:44",
	c = "2016/04/2611:03:54",
	c = "2016/04/2611:21:14",
	c = "2016/04/2611:22:04",
	c = "2016/04/2611:32:51",
	c = "2016/04/2611:34:53",
	c = "2016/04/2611:37:31",
	c = "2016/04/2611:37:56",
	c = "2016/04/2611:45:02",
	c = "2016/04/2611:50:08",
	c = "2016/04/2612:04:36",
	c = "2016/04/2612:19:20",
	c = "2016/04/2613:33:23",
	c = "2016/04/2616:43:05",
	c = "2016/04/2616:47:59",
	c = "2016/04/2616:50:34",
	c = "2016/04/2616:57:31",
	c = "2016/04/2617:03:37",
	c = "2016/04/2617:03:56",
	c = "2016/04/2617:06:28",
	c = "2016/04/2617:08:27",
	c = "2016/04/2617:11:57",
	c = "2016/04/2617:14:40",
	c = "2016/04/2617:20:14",
	c = "2016/04/2617:38:10",
	c = "2016/04/2617:39:05",
	c = "2016/04/2617:43:48",
	c = "2016/04/2617:47:14",
	c = "2016/04/2617:50:09",
	c = "2016/04/2617:51:19",
	c = "2016/04/2617:56:25",
	c = "2016/04/2618:04:26",
	c = "2016/04/2618:27:17",
	c = "2016/04/2618:31:04",
	c = "2016/04/2618:31:56",
	c = "2016/04/2618:33:13",
	c = "2016/04/2618:34:50",
	c = "2016/04/2618:35:37",
	c = "2016/04/2618:36:33",
	c = "2016/04/2618:37:43",
	c = "2016/04/2618:38:36",
	c = "2016/04/2618:39:57",
	c = "2016/04/2618:41:04",
	c = "2016/04/2618:41:27",
	c = "2016/04/2618:42:55",
	c = "2016/04/2618:48:41",
	c = "2016/04/2619:00:45",
	c = "2016/04/2619:15:19",
	c = "2016/04/2619:16:43",
	c = "2016/04/2619:26:14",
	c = "2016/04/2619:27:01",
	c = "2016/04/2619:28:36",
	c = "2016/04/2619:30:33",
	c = "2016/04/2619:31:54",
	c = "2016/04/2710:02:06",
	c = "2016/04/2710:15:49",
	c = "2016/04/2710:38:33",
	c = "2016/04/2710:49:30",
	c = "2016/04/2711:02:51",
	c = "2016/04/2711:19:35",
	c = "2016/04/2711:26:17",
	c = "2016/04/2711:30:34",
	c = "2016/04/2711:34:48",
	c = "2016/04/2711:39:39",
	c = "2016/04/2711:40:59",
	c = "2016/04/2711:51:03",
	c = "2016/04/2713:41:26",
	c = "2016/04/2714:13:52",
	c = "2016/04/2717:12:00",
	c = "2016/04/2717:18:26",
	c = "2016/04/2717:41:20",
	c = "2016/04/2717:51:54",
	c = "2016/04/2815:15:40",
	c = "2016/04/2918:08:54",
	c = "2016/04/2918:13:45",
	c = "2016/04/2918:20:35",
	c = "2016/05/0415:01:32",
	c = "2016/05/0416:06:02",
	c = "2016/05/0416:18:57",
	c = "2016/05/0417:12:43",
	c = "2016/05/0417:16:17",
	c = "2016/05/0417:29:04",
	c = "2016/05/0417:32:28",
	c = "2016/05/0418:38:16",
	c = "2016/05/1318:19:37",
	c = "2016/05/1318:32:09",
	c = "2016/05/1318:33:26",
	c = "2016/05/1318:34:17",
	c = "2016/05/1318:35:02",
	c = "2016/05/1318:39:12",
	c = "2016/05/1318:57:48",
	c = "2016/05/1610:10:13",
	c = "2016/05/1610:16:04",
	c = "2016/05/1610:16:55",
	c = "2016/05/1610:18:13",
	c = "2016/05/1610:18:44",
	c = "2016/05/1610:18:54",
	c = "2016/05/1610:19:21",
	c = "2016/05/1610:19:50",
	c = "2016/05/1615:18:57",
	c = "2016/05/1617:26:35",
	c = "2016/05/1617:27:32",
	c = "2016/05/1617:28:42",
	c = "2016/05/1617:29:01",
	c = "2016/05/1617:33:04",
	c = "2016/05/1617:33:31",
	c = "2016/05/1617:34:23",
	c = "2016/05/1617:34:43",
	c = "2016/05/1617:36:15",
	c = "2016/05/1617:37:53",
	c = "2016/05/1617:44:54",
	c = "2016/05/1617:45:29",
	c = "2016/05/1617:45:51",
	c = "2016/05/1617:47:03",
	c = "2016/05/1617:48:44",
	c = "2016/05/1711:03:58",
	c = "2016/05/1711:14:23",
	c = "2016/05/1711:16:42",
	c = "2016/05/1711:19:20",
	c = "2016/05/1711:26:30",
	c = "2016/05/1711:29:30",
	c = "2016/05/1711:38:33",
	c = "2016/05/1711:42:44",
	c = "2016/05/1711:45:17",
	c = "2016/05/1711:57:29",
	c = "2016/05/1711:58:33",
	c = "2016/05/1713:23:28",
	c = "2016/05/1714:30:06",
	c = "2016/05/1715:42:43",
	c = "2016/05/1716:21:12",
	c = "2016/05/1716:29:17",
	c = "2016/05/1716:30:22",
	c = "2016/05/1716:32:46",
	c = "2016/05/1716:43:59",
	c = "2016/05/1716:47:21",
	c = "2016/05/1717:32:13",
	c = "2016/05/1717:33:17",
	c = "2016/05/1810:35:52",
	c = "2016/05/1811:38:16",
	c = "2016/05/1816:04:46",
	c = "2016/05/1816:16:12",
	c = "2016/05/1816:16:34",
	c = "2016/05/1816:22:16",
	c = "2016/05/1817:13:51",
	c = "2016/05/1817:22:30",
	c = "2016/05/1817:35:47",
	c = "2016/05/1817:39:02",
	c = "2016/05/1817:41:20",
	c = "2016/05/1817:42:04",
	c = "2016/05/1817:43:12",
	c = "2016/05/1817:46:09",
	c = "2016/05/1817:53:15",
	c = "2016/05/1817:55:19",
	c = "2016/05/1817:58:10",
	c = "2016/05/1818:22:08",
	c = "2016/05/1818:31:06",
	c = "2016/05/1818:35:07",
	c = "2016/05/1818:40:40",
	c = "2016/05/1818:42:03",
	c = "2016/05/1818:43:01",
	c = "2016/05/1818:45:40",
	c = "2016/05/1911:00:32",
	c = "2016/05/1911:15:06",
	c = "2016/05/1911:16:25",
	c = "2016/05/1911:19:00",
	c = "2016/05/1911:20:10",
	c = "2016/05/1911:21:14",
	c = "2016/05/1911:23:49",
	c = "2016/05/1913:30:58",
	c = "2016/05/1913:32:02",
	c = "2016/05/1913:42:02",
	c = "2016/05/1915:15:22",
	c = "2016/05/1915:18:21",
	c = "2016/05/1915:28:31",
	c = "2016/05/1915:32:13",
	c = "2016/05/1915:50:29",
	c = "2016/05/1917:29:37",
	c = "2016/05/1917:43:26",
	c = "2016/05/2310:46:05",
	c = "2016/05/2310:47:17",
	c = "2016/05/2310:48:39",
	c = "2016/05/2310:49:17",
	c = "2016/05/2310:49:57",
	c = "2016/05/2310:52:16",
	c = "2016/05/2310:52:55",
	c = "2016/05/2311:01:02",
	c = "2016/05/2311:03:08",
	c = "2016/05/2311:03:48",
	c = "2016/05/2311:04:59",
	c = "2016/05/2311:05:40",
	c = "2016/05/2311:08:14",
	c = "2016/05/2311:15:51",
	c = "2016/05/2311:18:11",
	c = "2016/05/2311:23:07",
	c = "2016/05/2311:23:46",
	c = "2016/05/2311:39:58",
	c = "2016/05/2311:46:48",
	c = "2016/05/2311:50:51",
	c = "2016/05/2311:52:40",
	c = "2016/05/2311:54:55",
	c = "2016/05/2311:57:13",
	c = "2016/05/2311:59:18",
	c = "2016/05/2312:07:36",
	c = "2016/05/2312:08:20",
	c = "2016/05/2312:08:58",
	c = "2016/05/2312:10:08",
	c = "2016/05/2312:14:38",
	c = "2016/05/2312:25:33",
	c = "2016/05/2316:13:22",
	c = "2016/05/2414:29:33",
	c = "2016/05/2414:32:29",
	c = "2016/05/2414:33:29",
	c = "2016/05/2414:39:11",
	c = "2016/05/2414:42:32",
	c = "2016/05/2415:02:57",
	c = "2016/05/2415:04:24",
	c = "2016/05/2415:07:31",
	c = "2016/05/2415:11:19",
	c = "2016/05/2415:13:28",
	c = "2016/05/2415:15:03",
	c = "2016/05/2415:15:25",
	c = "2016/05/2415:46:59",
	c = "2016/05/2416:21:15",
	c = "2016/05/2616:46:35",
	c = "2016/05/3117:25:34",
	c = "2016/05/3117:33:19",
	c = "2016/05/3117:55:04",
	c = "2016/06/0118:06:20",
	c = "2016/06/0118:07:30",
	c = "2016/06/0118:09:01",
	c = "2016/06/0118:16:44",
	c = "2016/06/0118:28:23",
	c = "2016/06/0118:31:33",
	c = "2016/06/0118:31:58",
	c = "2016/06/0118:32:16",
	c = "2016/06/0118:44:34",
	c = "2016/06/0118:46:41",
	c = "2016/06/0118:47:17",
	c = "2016/06/0118:48:39",
	c = "2016/06/0118:49:51",
	c = "2016/06/0119:03:54",
	c = "2016/06/0315:42:50",
	c = "2016/06/0715:55:05",
	c = "2016/06/0716:01:26",
	c = "2016/06/0716:10:37",
	c = "2016/06/0716:11:40",
	c = "2016/06/1310:18:23",
	c = "2016/06/1310:21:21",
	c = "2016/06/1310:28:08",
	c = "2016/06/1310:33:52",
	c = "2016/06/1310:35:48",
	c = "2016/06/1310:40:37",
	c = "2016/06/1310:47:56",
	c = "2016/06/1311:00:47",
	c = "2016/06/1311:02:01",
	c = "2016/06/1311:10:01",
	c = "2016/06/1311:14:20",
	c = "2016/06/1311:15:16",
	c = "2016/06/1311:18:38",
	c = "2016/06/1311:43:53",
	c = "2016/06/1311:49:50",
	c = "2016/06/1311:50:24",
	c = "2016/06/1311:50:57",
	c = "2016/06/1311:51:57",
	c = "2016/06/1414:57:29",
	c = "2016/06/1415:19:37",
	c = "2016/06/1415:25:11",
	c = "2016/06/1415:27:41",
	c = "2016/06/1415:29:30",
	c = "2016/06/1415:30:11",
	c = "2016/06/1415:42:29",
	c = "2016/06/1415:48:36",
	c = "2016/06/1416:08:33",
	c = "2016/06/1416:09:34",
	c = "2016/06/1416:14:36",
	c = "2016/06/1416:27:47",
	c = "2016/06/1416:30:17",
	c = "2016/06/1416:30:51",
	c = "2016/06/1416:52:23",
	c = "2016/06/1416:53:55",
	c = "2016/06/1416:56:24",
	c = "2016/06/1417:08:50",
	c = "2016/06/1418:49:25",
	c = "2016/06/1510:26:10",
	c = "2016/06/1510:37:38",
	c = "2016/06/1510:38:15",
	c = "2016/06/1510:38:35",
	c = "2016/06/1510:39:11",
	c = "2016/06/1510:40:31",
	c = "2016/06/1510:41:03",
	c = "2016/06/1510:57:00",
	c = "2016/06/1511:10:50",
	c = "2016/06/1511:13:36",
	c = "2016/06/1511:40:41",
	c = "2016/06/1511:53:48",
	c = "2016/06/1513:46:27",
	c = "2016/06/1513:49:59",
	c = "2016/06/1513:51:00",
	c = "2016/06/1513:54:29",
	c = "2016/06/1513:55:43",
	c = "2016/06/1513:58:32",
	c = "2016/06/1514:00:59",
	c = "2016/06/1514:03:59",
	c = "2016/06/1514:09:34",
	c = "2016/06/1514:16:47",
	c = "2016/06/1514:21:09",
	c = "2016/06/1514:29:59",
	c = "2016/06/1514:31:02",
	c = "2016/06/1514:37:37",
	c = "2016/06/1514:42:16",
	c = "2016/06/1514:43:29",
	c = "2016/06/1514:46:31",
	c = "2016/06/1514:48:18",
	c = "2016/06/1514:49:33",
	c = "2016/06/1514:55:31",
	c = "2016/06/1515:20:49",
	c = "2016/06/1515:27:25",
	c = "2016/06/1515:32:29",
	c = "2016/06/1515:35:25",
	c = "2016/06/1515:37:38",
	c = "2016/06/1515:37:50",
	c = "2016/06/1516:04:55",
	c = "2016/06/1517:56:56",
	c = "2016/06/2015:53:35",
	c = "2016/06/2015:54:07",
	c = "2016/06/2015:55:49",
	c = "2016/06/2015:56:32",
	c = "2016/06/2016:01:43",
	c = "2016/06/2017:28:32",
	c = "2016/06/2114:36:18",
	c = "2016/06/2115:08:20",
	c = "2016/06/2115:12:59",
	c = "2016/06/2211:42:35",
	c = "2016/06/2211:43:47",
	c = "2016/06/2211:45:54",
	c = "2016/06/2213:15:39",
	c = "2016/06/2812:47:00",
	c = "2016/06/2813:30:30",
	c = "2016/06/2813:33:53",
	c = "2016/06/2813:43:47",
	c = "2016/06/2913:29:48",
	c = "2016/06/2913:40:55",
	c = "2016/06/2913:48:10",
	c = "2016/06/3010:19:53",
	c = "2016/06/3010:59:53",
	c = "2016/06/3011:01:38",
	c = "2016/06/3011:02:51",
	c = "2016/07/0114:23:20",
	c = "2016/07/0114:24:55",
	c = "2016/07/0114:31:45",
	c = "2016/07/0114:32:47",
	c = "2016/07/0114:39:24",
	c = "2016/07/0616:32:25",
	c = "2016/07/0616:36:42",
	c = "2016/07/0717:04:52",
	c = "2016/07/0811:16:56",
	c = "2016/07/0811:18:06",
	c = "2016/07/0811:20:43",
	c = "2016/07/1310:49:10",
	c = "2016/07/1310:51:56",
	c = "2016/07/1310:52:58",
	c = "2016/07/1310:55:57",
	c = "2016/07/1310:57:25",
	c = "2016/07/1311:00:49",
	c = "2016/07/1311:12:15",
	c = "2016/07/1311:15:17",
	c = "2016/07/1311:15:33",
	c = "2016/07/1311:16:19",
	c = "2016/07/1311:19:13",
	c = "2016/07/1311:19:38",
	c = "2016/07/1311:27:08",
	c = "2016/07/1311:27:40",
	c = "2016/07/1311:29:00",
	c = "2016/07/1315:53:19",
	c = "2016/07/1315:56:17",
	c = "2016/07/1315:57:12",
	c = "2016/07/1315:59:38",
	c = "2016/07/1316:01:24",
	c = "2016/07/1317:06:29",
	c = "2016/07/1317:07:33",
	c = "2016/07/1317:09:26",
	c = "2016/07/1317:10:18",
	c = "2016/07/1317:12:33",
	c = "2016/07/1317:13:32",
	c = "2016/07/1317:15:56",
	c = "2016/07/1317:18:31",
	c = "2016/07/1317:23:23",
	c = "2016/07/1317:25:21",
	c = "2016/07/1317:29:34",
	c = "2016/07/1317:32:21",
	c = "2016/07/1317:33:20",
	c = "2016/07/1317:33:42",
	c = "2016/07/1510:46:05",
	c = "2016/07/1510:48:40",
	c = "2016/07/1510:50:02",
	c = "2016/07/1511:42:39",
	c = "2016/07/1511:51:04",
	c = "2016/07/1810:21:08",
	c = "2016/08/2516:58:21",
	c = "2016/08/3011:17:04",
	c = "2016/08/3011:18:46",
	c = "2016/08/3011:21:40",
	c = "2016/09/0816:04:12",
	c = "2016/09/0816:06:27",
	c = "2016/09/0816:09:51",
	c = "2016/09/0816:12:10",
	c = "2016/09/1212:08:30",
	c = "2016/09/1212:11:52",
	c = "2016/09/1212:52:22",
	c = "2016/09/1214:08:11",
	c = "2016/09/1214:28:07",
	c = "2016/09/1214:31:09",
	c = "2016/09/1215:07:33",
	c = "2016/09/1215:25:29",
	c = "2016/09/1215:26:25",
	c = "2016/09/1215:27:31",
	c = "2016/09/1215:33:24",
	c = "2016/09/1215:33:52",
	c = "2016/09/1215:34:25",
	c = "2016/09/1215:35:36",
	c = "2016/09/1215:38:05",
	c = "2016/09/1215:38:20",
	c = "2016/09/1215:39:16",
	c = "2016/09/1215:39:42",
	c = "2016/09/1215:41:25",
	c = "2016/09/1215:41:50",
	c = "2016/09/1215:42:19",
	c = "2016/09/1215:43:13",
	c = "2016/09/1215:43:38",
	c = "2016/09/1215:44:19",
	c = "2016/09/1215:45:26",
	c = "2016/09/1215:45:56",
	c = "2016/09/1215:46:14",
	c = "2016/09/1215:46:37",
	c = "2016/09/1215:47:00",
	c = "2016/09/1215:47:28",
	c = "2016/09/1215:48:30",
	c = "2016/09/1215:49:05",
	c = "2016/10/2011:43:51",
	c = "2016/10/2011:47:48",
	c = "2016/10/2015:16:28",
	c = "2016/10/2015:45:31",
	c = "2016/10/2015:46:20",
	c = "2016/10/2015:47:55",
	c = "2016/10/2016:05:50",
	c = "2016/10/2810:43:00",
	c = "2016/10/2815:05:05",
	c = "2016/10/2815:07:24",
	c = "2016/11/0111:23:15",
	c = "2016/11/0115:59:22",
	c = "2016/11/0119:02:11",
	c = "2016/11/0119:04:17",
	c = "2016/11/0119:06:58",
	c = "2016/11/0119:10:59",
	c = "2016/11/0119:16:06",
	c = "2016/11/0119:17:46",
	c = "2016/11/0210:35:24",
	c = "2016/11/0210:41:13",
	c = "2016/11/0213:46:10",
	c = "2016/11/0215:37:34",
	c = "2016/11/1414:04:35",
	c = "2016/11/2110:56:32",
	c = "2016/11/2110:58:06",
	c = "2016/11/2110:59:46",
	c = "2016/11/2111:06:35",
	c = "2016/11/2111:12:24",
	c = "2016/11/2111:13:50",
	c = "2016/11/2111:22:01",
	c = "2016/11/2114:14:12",
	c = "2016/11/2114:18:59",
	c = "2016/11/2114:21:43",
	c = "2016/11/2114:44:23",
	c = "2016/11/2114:47:49",
	c = "2016/11/2114:51:50",
	c = "2016/11/2115:11:54",
	c = "2016/11/2115:13:15",
	c = "2016/11/2115:14:59",
	c = "2016/11/2115:15:47",
	c = "2016/11/2115:16:51",
	c = "2016/11/2115:18:14",
	c = "2016/12/0612:07:23",
	c = "2016/12/0612:09:29",
	c = "2016/12/0612:19:56",
	c = "2016/12/0613:05:30",
	c = "2016/12/0613:20:24",
	c = "2016/12/0613:21:01",
	c = "2016/12/0613:21:29",
	c = "2016/12/0613:25:21",
	c = "2016/12/0613:43:53",
	c = "2016/12/0614:22:48",
	c = "2016/12/0614:28:54",
	c = "2016/12/0614:34:23",
	c = "2016/12/0614:36:03",
	c = "2016/12/0614:36:44",
	c = "2016/12/0615:04:42",
	c = "2016/12/0810:31:16",
	c = "2016/12/0810:36:23",
	c = "2016/12/0810:37:18",
	c = "2016/12/0810:39:46",
	c = "2016/12/0810:41:15",
	c = "2016/12/0810:43:14",
	c = "2016/12/0810:44:44",
	c = "2016/12/0810:47:58",
	c = "2016/12/0810:48:17",
	c = "2016/12/0811:10:25",
	c = "2016/12/0811:12:42",
	c = "2016/12/0811:13:54",
	c = "2016/12/0910:56:39",
	c = "2016/12/0910:59:49",
	c = "2016/12/0911:22:55",
	c = "2016/12/1211:39:44",
	c = "2016/12/1218:33:21",
	c = "2016/12/1218:33:57",
	c = "2016/12/1312:52:20",
	c = "2016/12/1314:33:32",
	c = "2016/12/1314:40:33",
	c = "2016/12/1510:06:05",
	c = "2016/12/1516:01:19",
	c = "2016/12/1516:07:34",
	c = "2016/12/1610:31:26",
	c = "2016/12/1610:32:26",
	c = "2016/12/1610:58:02",
	c = "2016/12/1910:45:53",
	c = "2016/12/1911:32:16",
	c = "2016/12/1913:18:54",
	c = "2016/12/1913:23:11",
	c = "2016/12/1913:24:30",
	c = "2016/12/1913:36:22",
	c = "2016/12/2317:17:49",
	c = "2016/12/2317:18:00",
	c = "2016/12/2317:18:34",
	c = "2016/12/2716:31:52",
	c = "2016/12/2813:57:48",
	c = "2016/12/2813:59:54",
	c = "2016/12/2815:26:37",
	c = "2016/12/2815:37:05",
	c = "2016/12/2815:42:20",
	w = window.console;
	w || (w = {
		log: function() {}
	});
	var g = {
		log: function(b) {
			w.log(b)
		}
	},
	d = {},
	u = {},
	e = {
		playerType: "",
		userCache: {
			a1: "4",
			a2: "1"
		},
		playerState: {
			PLAYER_STATE_INIT: "PLAYER_STATE_INIT",
			PLAYER_STATE_READY: "PLAYER_STATE_READY",
			PLAYER_STATE_AD: "PLAYER_STATE_AD",
			PLAYER_STATE_PLAYING: "PLAYER_STATE_PLAYING",
			PLAYER_STATE_END: "PLAYER_STATE_END",
			PLAYER_STATE_ERROR: "PLAYER_STATE_ERROR"
		},
		playerCurrentState: "PLAYER_STATE_INIT"
	},
	aa = function() {
		this._player = document.getElementById(e.playerId)
	};
	aa.prototype = {
		resize: function(b, f) {
			this._player.style.width = b + "px";
			this._player.style.height = f + "px"
		},
		currentTime: function() {
			var b = this._player.getPlayerState().split("|");
			return 3 <= b.length ? b[2] : -1
		},
		totalTime: function() {
			var b = this._player.getPlayerState().split("|");
			return 4 <= b.length ? b[3] : -1
		},
		playVideo: function() {
			this._player.pauseVideo(!1)
		},
		pauseVideo: function() {
			this._player.pauseVideo(!0)
		},
		seekTo: function(b) {
			this._player.nsseek(b)
		},
		playVideoById: function(b) {
			this._player.playVideoByID(b)
		},
		hideControls: function() {
			this._player.showControlBar(!1)
		},
		showControls: function() {
			this._player.showControlBar(!0)
		}
	};
	var ba = function(b) {
		this._handler = {};
		var f = this;
		y.custom = (new Date).getTime();
		e.sendPlayServiceQuality("custom", 0, 0);
		u.jsonp({
			url: "https://api.youku.com/players/custom.json",
			data: b,
			time: 2E3,
			success: function(b) {
				var d = (new Date).getTime() - y.custom;
				e.sendPlayServiceQuality("custom", 200, d);
				f.parse(b)
			},
			fail: function(b) {
				var d = (new Date).getTime() - y.custom;
				e.sendPlayServiceQuality("custom", "timeout" == b.message ? 408 : 404, d);
				f.dispatch({
					type: "openapitimeoutyouku"
				})
			}
		})
	};
	ba.prototype = {
		addEventListener: function(b, f) {
			this._handler[b] = f
		},
		removeEventListener: function(b) {
			this._handler[b] = null
		},
		dispatch: function(b) {
			b && this._handler[b.type] && (b._target = this, this._handler[b.type](b))
		},
		parse: function(b) {
			null != b.error || 1 != b.status ? this.dispatch({
				type: "openapierror"
			}) : this.dispatch({
				type: "openapiokyouku",
				data: b
			})
		}
	};
	var n = {},
	H = {},
	K = [];
	n.start = function(b, f, d, c) {
		this._callback = c ||
		function() {};
		null != H[b] && null != H[b][d] ? (w.log("Cache Hit vid = " + b), this._callback(H[b][d].v, H[b][d].videoInfo)) : (this._vid = decodeURIComponent(b), this._password = f, this.requestError = !1, this._type = d, this._videoInfo = null, this._url = "", this.request())
	};
	n.cache = function() {
		H[n._vid] = {};
		H[n._vid][n._type] = {
			v: this._v,
			videoInfo: this._videoInfo
		}
	};
	n.error = function() {
		e.sendErrorReport(0);
		e.showError({
			code: "2002",
			message: "\u8be5\u89c6\u9891\u5728H5\u7aef\u6682\u4e0d\u652f\u6301\u64ad\u653e"
		},
		"\u8be5\u89c6\u9891\u6682\u65f6\u4e0d\u80fd\u64ad\u653e,\u8bf7\u4e0b\u8f7dAPP\u6216\u5728PC\u4e0a\u89c2\u770b", 320)
	};
	n.reportPlayListUep = function() {
		var b = (new Date).getTime() - y.get_json;
		K.push({
			type: "getplaylist",
			time: b
		})
	};
	n.response = function(b) {
		var f = b.data,
		c = f.stream; ! this.playlistError && !n.requestError && (this.playlistOK = !0, this.reportPlayListUep(), (d.v = b) && f ? c && ("default" !== c[0].drm_type || "http" !== c[0].transfer_mode) ? this.error(1, b, f, c) : this.init(b) : this.error(1, b, f, c))
	};
	n.request = function() {
		var b = function(b) {
			var b = b.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i),
			f,
			d;
			if (!b) return null;
			f = b[1] && parseFloat(b[1]);
			d = b[2] && parseFloat(b[2]);
			return f && d ? parseFloat(b[1] + "." + b[2]) : f ? f: null
		} (navigator.userAgent),
		f = D({
			vid: decodeURIComponent(this._vid),
			ct: 12
		},
		this.playlistconfig),
		c = navigator.userAgent.toLowerCase();
		"https:" == location.protocol && (f.pro = 1);
		/android|linux|u;/i.test(c) && (!b || 2.3 >= b) && delete f.pro;
		this._password && (f.pwd = encodeURI(this._password));
		this._password && (d.initConfig.client_id && d.config.partner_config && 1 == d.config.partner_config.status && 1 == d.config.partner_config.passless) && (f.cid = d.initConfig.client_id);
		d.config.partner_config && d.config.partner_config.stealsign && (f.r = encodeURIComponent(d.config.partner_config.stealsign));
		f = D(f, d.getUCParam(this._vid));
		y.get_json = (new Date).getTime();
		e.sendPlayServiceQuality("get_json", 0, 0);
		u.jsonp({
			url: "https://play-ali.youku.com/play/get.json",
			data: f,
			time: 1E4,
			success: function(b) {
				var f = (new Date).getTime() - y.get_json;
				e.sendPlayServiceQuality("get_json", 200, f);
				n.response(b)
			},
			fail: function(b) {
				var f = (new Date).getTime() - y.get_json;
				e.sendPlayServiceQuality("get_json", b.message == "timeout" ? 408 : 404, f);
				self.playlistError = true;
				e.sendErrorReport(2003);
				e.showError({
					code: "2003",
					message: "\u89c6\u9891\u4fe1\u606f\u51fa\u9519\uff0c\u8bf7\u5237\u65b0\u91cd\u8bd5"
				},
				"\u89c6\u9891\u4fe1\u606f\u51fa\u9519\uff0c\u8bf7\u5237\u65b0\u91cd\u8bd5")
			}
		})
	};
	n.m3u8src = function(b) {
		d.password = this._password;
		return d.m3u8src_v2(this._vid, b)
	};
	n.total = function(b, f, c) {
		b = b[f][c];
		c = f = 0;
		if (d.v.data.controller && d.v.data.controller.html5_disable) f += d.v.data.video.seconds;
		else for (var i = 0; i < b.length; i++) var h = b[i],
		f = f + h.seconds,
		c = c + parseInt(h.size);
		return {
			totalTime: parseInt(f),
			totalBytes: c
		}
	};
	n.processError = function(b) {
		g.log("playlist errorcode = " + b.error.code);
		var f = b.stream;
		if ( - 301 == b.error.code || -303 == b.error.code || -307 == b.error.code || -308 == b.error.code) {
			for (b = 0; b < f.length; b++) {
				f[b].audio_lang = "default";
				f[b].drm_type = "";
				f[b].logo = "";
				f[b].milliseconds_audio = 0;
				f[b].milliseconds_video = 0;
				f[b].kye = "";
				f[b].size = 0;
				f[b].stream_fileid = "0*0";
				f[b].subtitle_lang = "";
				for (var d = 0; d < f[b].segs.length; d++) f[b].segs[d].kye = "",
				f[b].segs[d].size = 0,
				f[b].segs[d].total_milliseconds_audio = 0,
				f[b].segs[d].total_milliseconds_video = 0
			}
			return ! 1
		}
		this._callback(this._v, {});
		return ! 0
	};
	n.init = function(b) {
		this._v = b;
		var f = b.data,
		c = f.stream;
		if (!f.security || !f.security.encrypt_string || !f.security.ip) e.sendErrorReport(2004),
		e.showError({
			code: "2004",
			message: "\u6570\u636e\u89e3\u6790\u9519\u8bef"
		},
		"\u6570\u636e\u89e3\u6790\u9519\u8bef");
		else if (!c && !f.error) e.showError({
			code: "2999",
			message: "\u6570\u636e\u89e3\u6790\u9519\u8bef"
		},
		'\u8be5\u89c6\u9891\u6682\u4e0d\u80fd\u64ad\u653e <a href="//m.youku.com/webapp/dl?app=youku&amp;source=webqr" title="\u4e0b\u8f7d\u4f18\u9177\u5ba2\u6237\u7aef" target="_blank"><button type="button" class="x-btn" style="background: #3bb4fc;text-align: center;color: #fff;border-radius: 1rem;">\u7528app\u89c2\u770b</button></a>');
		else {
			var i = N(O(d.mk.a3 + "o0b" + e.userCache.a1, [19, 1, 4, 7, 30, 14, 28, 8, 24, 17, 6, 35, 34, 16, 9, 10, 13, 22, 32, 29, 31, 21, 18, 3, 2, 23, 25, 27, 11, 20, 5, 15, 12, 0, 33, 26]).toString(), Ea(f.security.encrypt_string));
			if (2 > i.split("_").length) e.sendErrorReport(2004),
			e.showError({
				code: "2004",
				message: "\u6570\u636e\u89e3\u6790\u9519\u8bef"
			},
			"\u6570\u636e\u89e3\u6790\u9519\u8bef");
			else {
				e.userCache.sid = i.split("_")[0];
				e.userCache.token = i.split("_")[1];
				if (null != f.error) {
					if ( - 202 == f.error.code || -203 == f.error.code) e.sendErrorReport(4E3);
					else {
						if ( - 402 == f.error.code) {
							e.sendErrorReport(2007);
							e.showError({
								code: "2007",
								message: "\u7528\u6237\u6ca1\u6709\u6743\u9650\u89c2\u770b"
							},
							"\u7528\u6237\u6ca1\u6709\u6743\u9650\u89c2\u770b,\u8bf7\u8fd4\u56de\u4e3b\u7ad9\u64ad\u653e");
							return
						}
						e.sendErrorReport(1E3)
					}
					if (this.processError(f)) return
				}
				this._videoInfo = new ca(f, c, this._type);
				c = this._videoInfo._videoSegsDic;
				i = "";
				d.defaultLanguage == c.lang ? i = d.defaultLanguage: (i = c.lang, d.defaultLanguage = c.lang);
				var h = n.total(c.streams, i, c.typeArr[i][0]);
				this._videoInfo.totalTime = h ? h.totalTime: f.video.seconds;
				if ("m3u8" == this._type) d.defaultVideoType = "mp4",
				null != j.getItem("defaultVideoType") && (d.defaultVideoType = j.getItem("defaultVideoType")),
				-1 == b.data.stream[0].stream_type.indexOf(d.defaultVideoType) && (d.defaultVideoType = "mp4", -1 == b.data.stream[0].stream_type.indexOf("mp4") && (d.defaultVideoType = "flv")),
				g.log("default = " + d.defaultVideoType),
				this._videoInfo.src = n.m3u8src(d.defaultVideoType),
				this.cache(),
				this._callback(this._v, this._videoInfo);
				else if ("mp4" == this._type) {
					f = ["3gphd", "mp4", "flv"];
					d.defaultVideoType = null;
					for (h = 0; h < f.length; h++) if (c.streams[i][f[h]] && !("3gphd" == f[h] && 7200 < parseInt(b.seconds))) {
						d.defaultVideoType = f[h];
						break
					}
					g.log("mp4 type=" + d.defaultVideoType);
					d.defaultVideoType ? ("flv" == d.defaultVideoType && (d.config.playType = "directsrc"), this.cache(), this._callback(this._v, this._videoInfo)) : this.error(2)
				}
			}
		}
	};
	var ca = function(b, f, d) {
		this._sid = e.userCache.sid;
		this._fileType = d;
		this._videoSegsDic = {};
		new da;
		var d = [],
		c = [];
		c.streams = {};
		c.logos = {};
		c.typeArr = {};
		c.totalTime = {};
		for (var h = 0; h < f.length; h++) {
			for (var s = f[h].audio_lang, g = !1, l = 0; l < d.length; l++) if (d[l] == s) {
				g = !0;
				break
			}
			g || d.push(s)
		}
		for (h = 0; h < d.length; h++) {
			for (var q = d[h], s = {},
			g = {},
			j = [], l = 0; l < f.length; l++) {
				var n = f[l];
				if (q == n.audio_lang && this.isValidType(n.stream_type)) {
					var p = this.convertType(n.stream_type),
					x = 0;
					"none" != n.logo && (x = 1);
					g[p] = x;
					var v = !1,
					t;
					for (t in j) p == j[t] && (v = !0);
					v || j.push(p);
					x = n.segs;
					if (null != x) {
						var r = [];
						v && (r = s[p]);
						for (v = 0; v < x.length; v++) {
							var u = x[v];
							if (null == u) break;
							var w = {};
							w.no = v;
							w.size = u.size;
							w.seconds = Number(u.total_milliseconds_video) / 1E3;
							w.milliseconds_video = Number(n.milliseconds_video) / 1E3;
							w.key = u.key;
							w.fileId = u.fileid;
							w.src = this.getVideoSrc(l, v, b, n.stream_type, w.fileId);
							w.type = p;
							r.push(w)
						}
						s[p] = r
					}
				}
			}
			l = this.langCodeToCN(q).key;
			c.logos[l] = g;
			c.streams[l] = s;
			c.typeArr[l] = j
		}
		this._videoSegsDic = c;
		this._videoSegsDic.lang = this.langCodeToCN(d[0]).key
	},
	da = function(b) {
		this._randomSeed = b;
		this.cg_hun()
	};
	da.prototype = {
		cg_hun: function() {
			this._cgStr = "";
			for (var b = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ/\\:._-1234567890",
			f = b.length,
			d = 0; d < f; d++) {
				var c = parseInt(this.ran() * b.length);
				this._cgStr += b.charAt(c);
				b = b.split(b.charAt(c)).join("")
			}
		},
		cg_fun: function(b) {
			for (var b = b.split("*"), f = "", d = 0; d < b.length - 1; d++) f += this._cgStr.charAt(b[d]);
			return f
		},
		ran: function() {
			this._randomSeed = (211 * this._randomSeed + 30031) % 65536;
			return this._randomSeed / 65536
		}
	};
	ca.prototype = {
		getFileId: function(b, f) {
			if (null == b || "" == b) return "";
			var d = b.slice(0, 8),
			c = f.toString(16);
			1 == c.length && (c = "0" + c);
			var c = c.toUpperCase(),
			h = b.slice(10, b.length);
			return d + c + h
		},
		isValidType: function(b) {
			return "3gphd" == b || "flv" == b || "flvhd" == b || "mp4hd" == b || "mp4hd2" == b || "mp4hd3" == b ? !0 : !1
		},
		convertType: function(b) {
			var f = b;
			switch (b) {
			case "m3u8":
				f = "mp4";
				break;
			case "3gphd":
				f = "3gphd";
				break;
			case "flv":
				f = "flv";
				break;
			case "flvhd":
				f = "flv";
				break;
			case "mp4hd":
				f = "mp4";
				break;
			case "mp4hd2":
				f = "hd2";
				break;
			case "mp4hd3":
				f = "hd3"
			}
			return f
		},
		langCodeToCN: function(b) {
			var f = "";
			switch (b) {
			case "default":
				f = {
					key: "guoyu",
					value: "\u56fd\u8bed"
				};
				break;
			case "guoyu":
				f = {
					key: "guoyu",
					value: "\u56fd\u8bed"
				};
				break;
			case "yue":
				f = {
					key: "yue",
					value: "\u7ca4\u8bed"
				};
				break;
			case "chuan":
				f = {
					key: "chuan",
					value: "\u5ddd\u8bdd"
				};
				break;
			case "tai":
				f = {
					key: "tai",
					value: "\u53f0\u6e7e"
				};
				break;
			case "min":
				f = {
					key: "min",
					value: "\u95fd\u5357"
				};
				break;
			case "en":
				f = {
					key: "en",
					value: "\u82f1\u8bed"
				};
				break;
			case "ja":
				f = {
					key: "ja",
					value: "\u65e5\u8bed"
				};
				break;
			case "kr":
				f = {
					key: "kr",
					value: "\u97e9\u8bed"
				};
				break;
			case "in":
				f = {
					key: "in",
					value: "\u5370\u5ea6"
				};
				break;
			case "ru":
				f = {
					key: "ru",
					value: "\u4fc4\u8bed"
				};
				break;
			case "fr":
				f = {
					key: "fr",
					value: "\u6cd5\u8bed"
				};
				break;
			case "de":
				f = {
					key: "de",
					value: "\u5fb7\u8bed"
				};
				break;
			case "it":
				f = {
					key: "it",
					value: "\u610f\u8bed"
				};
				break;
			case "es":
				f = {
					key: "es",
					value: "\u897f\u8bed"
				};
				break;
			case "po":
				f = {
					key: "po",
					value: "\u8461\u8bed"
				};
				break;
			case "th":
				f = {
					key: "th",
					value: "\u6cf0\u8bed"
				};
				break;
			case "man":
				f = {
					key: "man",
					value: "\u6696\u7537"
				};
				break;
			case "baby":
				f = {
					key: "baby",
					value: "\u840c\u7ae5"
				}
			}
			return f
		},
		getVideoSrc: function(b, f, c, i, h, s, g) {
			var l = c.stream[b];
			if (!c.video.encodeid || !i) return "";
			var b = {
				flv: 0,
				flvhd: 0,
				mp4: 1,
				hd2: 2,
				"3gphd": 1,
				"3gp": 0
			} [i],
			i = {
				flv: "flv",
				mp4: "mp4",
				hd2: "flv",
				mp4hd: "mp4",
				mp4hd2: "mp4",
				"3gphd": "mp4",
				"3gp": "flv",
				flvhd: "flv"
			} [i],
			q = f.toString(16);
			1 == q.length && (q = "0" + q);
			var j = l.segs[f].total_milliseconds_video / 1E3,
			f = l.segs[f].key;
			if ("" == f || -1 == f) f = l.key2 + l.key1;
			l = "";
			c.show && (l = c.show.pay ? "&ypremium=1": "&ymovie=1");
			c = "/player/getFlvPath/sid/" + e.userCache.sid + "_" + q + "/st/" + i + "/fileid/" + h + "?K=" + f + "&hd=" + b + "&myp=0&ts=" + j + "&ypp=0" + l;
			h = encodeURIComponent(L(N(O(d.mk.a4 + "poz" + e.userCache.a2, [19, 1, 4, 7, 30, 14, 28, 8, 24, 17, 6, 35, 34, 16, 9, 10, 13, 22, 32, 29, 31, 21, 18, 3, 2, 23, 25, 27, 11, 20, 5, 15, 12, 0, 33, 26]).toString(), e.userCache.sid + "_" + h + "_" + e.userCache.token)));
			c = c + ("&ep=" + h) + "&ctype=12&ev=1" + ("&token=" + e.userCache.token);
			c += "&oip=" + d.v.data.security.ip;
			return "https://k.youku.com" + (c + ((s ? "/password/" + s: "") + (g ? g: "")))
		}
	};
	var ea = function(b) {
		this._player = b.video;
		null == this._player && (this._player = document.getElementById("youku-html5player-video-0"));
		this._oplayer = b
	};
	ea.prototype = {
		resize: function(b, f) {
			this._oplayer.resize(b, f)
		},
		currentTime: function() {
			return this._player.currentTime
		},
		totalTime: function() {
			return this._player.duration
		},
		playVideo: function() {
			this._oplayer.play()
		},
		startPlayVideo: function() {
			if (e.isNeedFrontAd) this._oplayer.controls.onVideoBtnTouchEnd();
			else this._oplayer.controls.onVideoBtnClick()
		},
		pauseVideo: function() {
			this._player.pause()
		},
		seekTo: function(b) {
			try {
				this._player.currentTime = b
			} catch(f) {}
		},
		playVideoById: function(b, f) {
			g.log("YKH5Player playVideoByid");
			var c = this._oplayer;
			d.config.autoplay = !0;
			d.config.vid = b;
			n.start(b, f, d.config.content,
			function(b, f) {
				c.startPlay(b, f)
			})
		},
		hideControls: function() {
			this._player.removeAttribute("controls")
		},
		showControls: function() {
			this._player.setAttribute("controls", !0)
		},
		switchFullScreen: function() {
			this._oplayer.controls.fullscreenPanel.switchFullScreen({})
		}
	};
	e.Log = function(b, f) {
		var d = document.createElement("img");
		f && d.addEventListener("error", f, !1);
		d.src = b + "&r_=" + Math.floor(1E4 * Math.random());
		d.id = "youku-uniplayer-stat"
	};
	e.isNeedAdrTrick = function() {
		return e.isAndroid && !e.adrPlayTrick && !e.isHTC && e.isNeedFrontAd && !e.isVIVO
	};
	e.getParentUrl = function() {
		var b = null;
		if (parent !== window) try {
			b = parent.location.href
		} catch(f) {
			b = document.referrer
		}
		return b
	};
	e.adrInvalidPauseCheck = function(b) {
		var f = b.currentTime,
		d = 0,
		c = !1;
		e.adrPlayTrick = !0;
		b.pause();
		b.play();
		setInterval(function() {
			b.currentTime == f && !c ? (d++, b.play(), 0 == d % 10 && (b.load(), b.play())) : c = !0
		},
		1E3)
	};
	e.sendPlayServiceQuality = function(b, f, c) {
		b = {
			n: b,
			vid: d.initConfig.vid,
			u: encodeURIComponent(e.getParentUrl() ? e.getParentUrl() : window.location.href),
			c: f,
			t: c / 1E3,
			p: "hvp"
		};
		e.Log("//v.l.youku.com/h_player_service?" + t(b))
	};
	e.sendErrorReport = function(b) {
		var f = {},
		c = "",
		c = e.isIPAD ? "xplayer_ipad": e.isIPHONE ? "xplayer_iphone": "xplayer_android";
		f.m = c;
		f.ec = b;
		c = "";
		1E3 == b && (c = d.v.data.error.code);
		f.gc = c;
		f.u = encodeURIComponent(window.location.href);
		f.v = d.videoInfo ? d.videoInfo._sid: "";
		f.ct = d.v ? d.v.data ? d.v.data.video ? d.v.data.video.category_id: "": "": "";
		f.hd = e.hd ? e.hd: 0;
		d.v && d.v.data.network && (f.a = d.v ? d.v.data.network.area_code + "|" + d.v.data.network.dma_code: "");
		b = "";
		d.initConfig.vvlogconfig && d.initConfig.vvlogconfig.pvid && (b = d.initConfig.vvlogconfig.pvid);
		f.pid = b;
		e.Log("//v.l.youku.com/perror?" + t(f))
	};
	e.Load = function(b, f) {
		if ("js" == f) {
			var d = document.createElement("script");
			d.setAttribute("type", "text/javascript");
			d.setAttribute("src", b)
		} else "css" == f && (d = document.createElement("link"), d.setAttribute("rel", "stylesheet"), d.setAttribute("type", "text/css"), d.setAttribute("href", b));
		"undefined" != typeof d && document.getElementsByTagName("head")[0].appendChild(d)
	};
	e.showError = function(b, f) {
		var c = d.get("#x-player");
		c.innerHTML = f ? f: "\u8be5\u89c6\u9891\u683c\u5f0f\u7279\u6b8a\uff0c\u8bf7\u5728PC\u4e0a\u89c2\u770b";
		c.style.textAlign = "center";
		c.style.color = "white";
		c.style.lineHeight = c.offsetHeight + "px";
		e.onError(b, f)
	};
	e.onError = function(b, f) {
		b = b || {
			code: "1000",
			message: "\u672a\u5b9a\u4e49\u9519\u8bef"
		};
		if (d.playerEvents && d.playerEvents.onPlayError) d.playerEvents.onPlayError(f ? f: "\u8be5\u89c6\u9891\u683c\u5f0f\u7279\u6b8a\uff0c\u8bf7\u5728PC\u4e0a\u89c2\u770b", b)
	}; (function() {
		var b = document.createElement("video"),
		f = {
			MP4: "video/mp4",
			OGG: "video/ogg",
			WEBM: "video/webm"
		},
		d = {
			isWin: "Win",
			isMac: "Mac",
			isSafari: "Safari",
			isChrome: "Chrome",
			isIPAD: "iPad",
			isIPAD7: "iPad; CPU OS 7",
			isIPHONE: "iPhone",
			isIPOD: "iPod",
			isLEPAD: "lepad_hls",
			isMIUI: "MI-ONE",
			isAndroid: "Android",
			isAndroid4: "Android 4.",
			isAndroid41: "Android 4.1",
			isSonyDTV: "SonyDTV",
			isBlackBerry: "BlackBerry",
			isMQQBrowser: "MQQBrowser",
			isMobile: "Mobile",
			isSamSung: "SAMSUNG",
			isHTC: "HTC",
			isLumia: "Lumia",
			isVIVO: "vivo",
			isWeixin: "MicroMessenger"
		};
		e.supportHTML5Video = !1;
		e.isIOS = !1;
		e.os = "";
		if (b.canPlayType) {
			e.supportHTML5Video = !0;
			for (var c in f) e["canPlay" + c] = b.canPlayType(f[c]) ? !0 : !1
		}
		for (var h in d) if ( - 1 !== navigator.userAgent.indexOf(d[h]) ? (e[h] = !0, e.os += d[h] + " ") : e[h] = !1, -1 !== navigator.userAgent.indexOf("Android")) b = navigator.userAgent.indexOf("Android"),
		b = navigator.userAgent.substr(b, 10),
		b > d.isAndroid4 && (e.isAndroid4 = !0, e.os += b + " ");
		e.isMobileIOS = e.isIPAD || e.isIPHONE || e.isIPOD;
		e.isIOS = e.isMobileIOS || e.isMac;
		e.isSupportH5M3U8 = e.isMobileIOS || e.isMac && e.isSafari && !e.isChrome || e.isLEPAD || e.isSonyDTV;
		e.isSupportH5MP4 = (e.isChrome || e.isIE10 || e.isAndroid41 || e.isAndroid4 || e.isLumia) && e.canPlayMP4;
		h = d = 0;
		try {
			if (document.all) {
				var s = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
				if (s) {
					var d = 1,
					g = s.GetVariable("$version");
					parseInt(g.split(" ")[1].split(",")[0])
				}
			} else if (navigator.plugins && 0 < navigator.plugins.length && (s = navigator.plugins["Shockwave Flash"])) for (var d = 1,
			l = s.description.split(" "), s = 0; s < l.length; ++s) isNaN(parseInt(l[s])) || parseInt(l[s])
		} catch(q) {
			h = d = 1
		}
		e.isSupportFlash = d && !h;
		e.isMQQBrowser && (e.isSupportFlash = !1);
		e.isLumia && (e.isSupportFlash = !1);
		e.isPhone = e.isIPHONE || e.isIPOD || e.isAndroid && e.isMobile;
		e.isAndroidPad = e.isAndroid && !e.isMobile;
		e.isPad = e.isIPAD || e.isAndroidPad;
		e.isMobile = e.isIPAD || e.isIPHONE || e.isIPOD || e.isLEPAD || e.isMIUI || e.isAndroid4 || e.isSonyDTV || e.isLumia
	})();
	var S = function(b) {
		g.log("canplay mp4 = " + e.canPlayMP4);
		d.initConfig = b;
		this._vid = b.vid;
		this._target = b.target;
		this._partnerId = b.partnerId;
		b.client_id && (this._partnerId = b.client_id); ! b.pkid && (!this._vid || !this._target || !this._partnerId) ? alert("[Fail]The params of {vid,target,client_id} are necessary !") : (this._events = b.events, d.playerEvents = b.events, e._target = this._target, this._paid = 0, null != b.paid && (this._paid = b.paid), this._id = b.id, null == this._id && (this._id = "youku-player"), e.playerId = this._id, this._width = b.width, this._height = b.height, this._expand = b.expand, null == b.width || null == b.height ? null == b.expand && (this._expand = 0) : null == b.expand && (this._expand = 1), this._prefer = b.prefer ? b.prefer.toLowerCase() : "flash", this._starttime = b.starttime, this._password = b.password, this._poster = b.poster, this._autoplay = !!b.autoplay, this._canWide = b.canWide, "undefined" != typeof b.show_related && (this._showRelated = !!b.show_related), this._winType = b.wintype, this._pkid = b.pkid, this._pkpid = b.pkpid, this._pkurl = b.pkurl, this._playlistconfig = b.playlistconfig, this._isMobile = e.isMobile, this._isMobileIOS = e.isMobileIOS, d.isWeixin = e.isWeixin, "undefined" != typeof b.weixin && (d.isWeixin = !!b.weixin), this._loop = !!b.loop || !1, this._playerType = "", d.mk = {},
		d.mk.a3 = "b4et", d.mk.a4 = "boa4")
	};
	S.prototype = {
		isSupportH5MP4: function() {
			return e.isSupportH5MP4
		},
		isSupportH5M3U8: function() {
			return e.isSupportH5M3U8
		},
		isSupportFlash: function() {
			return e.isSupportFlash
		},
		playerType: function() {
			if ("" != this._playerType) return this._playerType;
			this._playerType = "h5" == this._prefer ? this.isSupportH5M3U8() ? "h5m3u8": this.isSupportH5MP4() ? "h5mp4": this.isSupportFlash() ? "flash": "error": "flash" == this._prefer ? this.isSupportFlash() ? "flash": this.isSupportH5M3U8() ? "h5m3u8": this.isSupportH5MP4() ? "h5mp4": "error": "error";
			if (("h5m3u8" == this._playerType || "h5mp4" == this._playerType) && void 0 != this._pkid) this._playerType = "h5pk";
			return this._playerType
		},
		select: function() {
			g.log("playerType = " + this.playerType());
			if (this.isThirdParty()) {
				var b = this;
				this.processThirdParty(function() {
					b.selectHandler()
				})
			} else this.selectHandler()
		},
		selectHandler: function() {
			"h5m3u8" == this.playerType() ? this.selectH5M3U8() : "h5mp4" == this.playerType() ? this.selectH5MP4() : "h5pk" == this.playerType() ? this.selectH5PK() : "flash" == this.playerType() ? this.selectFlash() : this.selectDirectUrl();
			if (this._events && this._events.onPlayerReady) {
				var b = this._events.onPlayerReady;
				if ("h5" == e.playerType) var f = setInterval(function() {
					if (r(e.playerId)) {
						e.playerCurrentState = e.playerState.PLAYER_STATE_READY;
						g.log(e.playerCurrentState);
						clearInterval(f);
						try {
							j.appendItem("phase", "playerready"),
							b()
						} catch(d) {}
					}
				},
				500);
				else "flash" == e.playerType && (f = setInterval(function() {
					if (1 == u.swfLoaded) {
						e.playerCurrentState = e.playerState.PLAYER_STATE_READY;
						g.log(e.playerCurrentState);
						clearInterval(f);
						try {
							j.appendItem("phase", "playerready"),
							b()
						} catch(d) {}
					}
				},
				500))
			}
		},
		selectH5MP4: function() {
			e.playerType = "h5";
			var b = this._h5player = new YoukuHTML5Player({
				id: this._id,
				vid: this._vid,
				partnerId: this._partnerId,
				parentBox: this._target,
				events: this._events,
				width: this._width,
				height: this._height,
				poster: this._poster,
				autoplay: this._autoplay,
				isMobile: this._isMobile,
				isMobileIOS: this._isMobileIOS,
				content: "mp4",
				loop: this._loop,
				wintype: this._winType,
				expand: this._expand,
				partner_config: this.partner_config,
				canWide: this._canWide ? this._canWide: 0
			},
			d.initConfig);
			n.playlistconfig = this._playlistconfig;
			n.start(this._vid, this._password, "mp4",
			function(f, c) {
				j.appendItem("phase", "vinfo_mp4");
				b.startPlay(f, c);
				if (d.initConfig.events && d.initConfig.events.onMediaSrcOK) d.initConfig.events.onMediaSrcOK(d.defaultVideoType, c._videoSegsDic.streams[c._videoSegsDic.lang][d.defaultVideoType][0].src)
			})
		},
		selectH5M3U8: function() {
			e.playerType = "h5";
			var b = {
				id: this._id,
				vid: this._vid,
				partnerId: this._partnerId,
				parentBox: this._target,
				events: this._events,
				width: this._width,
				height: this._height,
				poster: this._poster,
				autoplay: this._autoplay,
				isMobile: this._isMobile,
				isMobileIOS: this._isMobileIOS,
				content: "m3u8",
				loop: this._loop,
				wintype: this._winType,
				expand: this._expand,
				partner_config: this.partner_config,
				canWide: this._canWide ? this._canWide: 0
			};
			if (e.isIPHONE || e.isIPOD) b.playType = "directsrc";
			var f = new YoukuHTML5Player(b, d.initConfig);
			this._h5player = f;
			n.playlistconfig = this._playlistconfig;
			n.start(this._vid, this._password, "m3u8",
			function(b, d) {
				j.appendItem("phase", "vinfo_m3u8");
				f.startPlay(b, d)
			})
		},
		selectH5PK: function() {
			e.playerType = "h5";
			var b = {
				id: this._pkid,
				pid: this._pkpid,
				url: decodeURIComponent(this._pkurl),
				parentBox: this._target
			};
			this._h5player = new fa(b, d.initConfig)
		},
		processThirdParty: function(b) {
			var f = new ba({
				type: "h5",
				client_id: d.initConfig.client_id,
				video_id: d.initConfig.vid,
				embsig: d.initConfig.embsig,
				refer: encodeURIComponent(window.location.href)
			}),
			c = this;
			f.addEventListener("openapiokyouku",
			function(f) {
				g.log("thirdparty res ok");
				c.partner_config = f.data;
				b()
			});
			f.addEventListener("openapierror",
			function() {
				g.log("thirdparty res error");
				b()
			});
			f.addEventListener("openapitimeoutyouku",
			function() {
				g.log("thirdparty res timeout");
				b()
			})
		},
		selectH5VTag: function() {
			e.playerType = "h5";
			var b = "//v.youku.com/player/getM3U8/vid/" + this._vid + "/type/mp4/ts/" + parseInt((new Date).getTime() / 1E3),
			b = b + (this._password ? "/password/" + this._password: ""),
			b = '<video src="' + (b + "/v.m3u8") + '" controls width=' + this._width + " height=" + this._height + " id=" + this._id + " autohide=false " + (this._poster ? "poster=" + this._poster: "") + " " + (!0 == this._autoplay ? "autoplay=true": "") + "></video>";
			r(this._target).innerHTML = b
		},
		isThirdParty: function() {
			if (void 0 != this._pkid) return ! 1;
			var b = d.initConfig.client_id;
			return null != b && 16 == (b + "").length ? !0 : !1
		},
		selectFlash: function() {
			e.playerType = "flash";
			var b = {
				imglogo: this._poster || "",
				paid: this._paid,
				partnerId: d.initConfig.client_id
			};
			this._loop && (b.isLoop = "true");
			null != d.initConfig.firsttime && (b.firsttime = d.initConfig.firsttime);
			null != d.initConfig.embsig && (b.embsig = d.initConfig.embsig);
			null != d.initConfig.password && (b.passwordstr = d.initConfig.password);
			null != d.initConfig.styleid && (b.styleid = d.initConfig.styleid);
			null != d.initConfig.vext && (b.vext = d.initConfig.vext);
			for (var f in d.initConfig.adconfig) b[f] = d.initConfig.adconfig[f];
			for (f in d.initConfig.flashconfig) b[f] = d.initConfig.flashconfig[f];
			var c = {
				sid: this._vid,
				isAutoPlay: this._autoplay,
				isShowRelatedVideo: this._showRelated,
				winType: this._winType,
				newPlayer: d.initConfig.newPlayer
			};
			this.isThirdParty() && !b.delayload && (c.partnerid = this._partnerId);
			null != d.initConfig.pkid && (b.VideoIDS = d.initConfig.pkid);
			null != d.initConfig.pkpid && (b.pkpid = d.initConfig.pkpid);
			null != d.initConfig.pkurl && (b.pkurl = d.initConfig.pkurl);
			var i = ga + "/player.php/",
			h;
			for (h in c) {
				var s = c[h];
				"undefined" != typeof s && "" !== s && (i += h + "/" + s + "/")
			}
			i += "v.swf";
			d.initConfig.flashsrc && (i = d.initConfig.flashsrc);
			null != d.initConfig.pkid && (i = "youkupaike.swf");
			b = {
				allowFullScreen: !0,
				allowScriptAccess: "always",
				movie: i,
				flashvars: b
			};
			d.initConfig.wmode && (b.wmode = d.initConfig.wmode);
			if ((s = d.initConfig.flashparam) && "object" == typeof s) for (h in s) b[h] = s[h];
			h = "";
			for (f in b) s = b[f],
			"object" == typeof s && (s = t(s)),
			h += "<param name=" + f + " value=" + s + ">";
			h += decodeURI(d.initConfig.flashext || "");
			r(this._target).innerHTML = "<object type=application/x-shockwave-flash data= " + i + " width=100% height=100% id=" + this._id + ">" + h + "</object>";
			this._expand && (r(this._target).style.width = this._width + "px", r(this._target).style.height = this._height + "px")
		},
		selectDirectUrl: function(b) {
			b = b || "mp4";
			g.log("select directsrc");
			e.playerType = "directsrc";
			var f = new ha({
				id: this._id,
				vid: this._vid,
				partnerId: this._partnerId,
				parentBox: this._target,
				events: this._events,
				width: this._width,
				height: this._height,
				poster: this._poster,
				autoplay: this._autoplay,
				isMobile: this._isMobile,
				isMobileIOS: this._isMobileIOS,
				content: b,
				playType: "directsrc",
				wintype: this._winType,
				expand: this._expand,
				canWide: this._canWide ? this._canWide: 0
			});
			this._h5player = f;
			n.playlistconfig = this._playlistconfig;
			n.start(this._vid, this._password, b,
			function(b, d) {
				f.startPlay(b, d)
			})
		}
	};
	u.Player = function(b, f) {
		f.target = b;
		this.select = new S(f);
		this.select.select();
		this._player = ""
	};
	u.Player.prototype = {
		player: function() {
			return "" != this._player ? this._player: this._player = "h5" == e.playerType ? new ea(this.select._h5player) : "flash" == e.playerType ? new aa: "error"
		},
		resize: function(b, f) {
			this.player().resize(b, f)
		},
		currentTime: function() {
			return this.player().currentTime()
		},
		totalTime: function() {
			return this.player().totalTime()
		},
		playVideo: function() {
			this.player().playVideo()
		},
		startPlayVideo: function() {
			this.player().startPlayVideo()
		},
		pauseVideo: function() {
			this.player().pauseVideo()
		},
		seekTo: function(b) {
			this.player().seekTo(b)
		},
		hideControls: function() {
			this.player().hideControls()
		},
		showControls: function() {
			this.player().showControls()
		},
		playVideoById: function(b) {
			this.player().playVideoById(b)
		},
		switchFullScreen: function() {
			try {
				this.player().switchFullScreen()
			} catch(b) {}
		}
	};
	var ia = function(b) {
		this.video = b;
		this.bindEvent()
	};
	ia.prototype = {
		onLoadedStartST: function() {
			w.log("onLoadedStartIPH");
			this._load_data = !0
		},
		onLoadedDataST: function() {
			w.log("onLoadedDataST");
			this._load_data = !1
		},
		onLoadedMetaDataST: function() {
			w.log("onLoadedMetaDataST");
			if (this.getM3U8XhrState) {
				var b = (new Date).getTime() - y.m3u8;
				e.sendPlayServiceQuality("m3u8", 200, b);
				this.getM3U8XhrState = !1
			}
		},
		onErrorST: function() {
			if (this.getM3U8XhrState) {
				var b = (new Date).getTime() - y.m3u8;
				e.sendPlayServiceQuality("m3u8", 404, b);
				this.getM3U8XhrState = !1
			}
		},
		onPlayST: function() {
			w.log("onPlayST");
			if (!0 == this._load_data) {
				y.m3u8 = (new Date).getTime();
				e.sendPlayServiceQuality("m3u8", 0, 0);
				this.getM3U8XhrState = !0;
				var b = this;
				setTimeout(function() {
					if (b.getM3U8XhrState) {
						var f = (new Date).getTime() - y.m3u8;
						e.sendPlayServiceQuality("m3u8", 408, f);
						b.getM3U8XhrState = !1
					}
				},
				1E4)
			}
		},
		bindEvent: function() {
			"m3u8" == d.config.content && (d.addEventHandler(this.video, "play", d.bindAsEventListener(this, this.onPlayST)), d.addEventHandler(this.video, "loadstart", d.bindAsEventListener(this, this.onLoadedStartST)), d.addEventHandler(this.video, "loadedmetadata", d.bindAsEventListener(this, this.onLoadedMetaDataST)), d.addEventHandler(this.video, "error", d.bindAsEventListener(this, this.onErrorST)), d.addEventHandler(this.video, "loadeddata", d.bindAsEventListener(this, this.onLoadedDataST)))
		}
	};
	var r = function(b) {
		return document.getElementById(b)
	},
	Ga = function(b) {
		b = parseInt(b);
		return Math.min(Math.max(b, 0), d.videoInfo.totalTime)
	},
	Da = Object.prototype.hasOwnProperty,
	t = function(b) {
		var f = [],
		d;
		for (d in b) f.push(d + "=" + b[d]);
		return f.join("&")
	},
	L = function(b) {
		if (!b) return "";
		var b = b.toString(),
		f,
		d,
		c,
		h,
		e,
		g;
		c = b.length;
		d = 0;
		for (f = ""; d < c;) {
			h = b.charCodeAt(d++) & 255;
			if (d == c) {
				f += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(h >> 2);
				f += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt((h & 3) << 4);
				f += "==";
				break
			}
			e = b.charCodeAt(d++);
			if (d == c) {
				f += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(h >> 2);
				f += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt((h & 3) << 4 | (e & 240) >> 4);
				f += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt((e & 15) << 2);
				f += "=";
				break
			}
			g = b.charCodeAt(d++);
			f += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(h >> 2);
			f += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt((h & 3) << 4 | (e & 240) >> 4);
			f += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt((e & 15) << 2 | (g & 192) >> 6);
			f += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(g & 63)
		}
		return f
	}; (function() {
		this.FX = function(f, d, c, m, e, g) {
			this.el = b.get(f);
			this.attributes = d;
			this.duration = c || 0.7;
			this.transition = m && m in FX.transitions ? m: "easeInOut";
			this.callback = e ||
			function() {};
			this.ctx = g || window;
			this.units = {};
			this.frame = {};
			this.endAttr = {};
			this.startAttr = {}
		};
		this.FX.transitions = {
			linear: function(b, f, d, c) {
				return d * b / c + f
			},
			easeIn: function(b, f, d, c) {
				return - d * Math.cos(b / c * (Math.PI / 2)) + d + f
			},
			easeOut: function(b, f, d, c) {
				return d * Math.sin(b / c * (Math.PI / 2)) + f
			},
			easeInOut: function(b, f, d, c) {
				return - d / 2 * (Math.cos(Math.PI * b / c) - 1) + f
			}
		};
		this.FX.prototype = {
			start: function() {
				var b = this;
				this.getAttributes();
				this.duration *= 1E3;
				this.time = (new Date).getTime();
				this.animating = !0;
				this.timer = setInterval(function() {
					var f = (new Date).getTime();
					f < b.time + b.duration ? (b.elapsed = f - b.time, b.setCurrentFrame()) : (b.frame = b.endAttr, b.complete());
					b.setAttributes()
				},
				10)
			},
			ease: function(b, f) {
				return FX.transitions[this.transition](this.elapsed, b, f - b, this.duration)
			},
			complete: function() {
				clearInterval(this.timer);
				this.timer = null;
				this.animating = !1;
				this.callback.call(this.ctx)
			},
			setCurrentFrame: function() {
				for (var b in this.startAttr) if (this.startAttr[b] instanceof Array) {
					this.frame[b] = [];
					for (var f = 0; f < this.startAttr[b].length; f++) this.frame[b][f] = this.ease(this.startAttr[b][f], this.endAttr[b][f])
				} else this.frame[b] = this.ease(this.startAttr[b], this.endAttr[b])
			},
			getAttributes: function() {
				for (var f in this.attributes) switch (f) {
				case "color":
				case "borderColor":
				case "border-color":
				case "backgroundColor":
				case "background-color":
					this.startAttr[f] = d(this.attributes[f].from || b.getStyle(this.el, f));
					this.endAttr[f] = d(this.attributes[f].to);
					break;
				case "scrollTop":
				case "scrollLeft":
					var c = this.el == document.body ? document.documentElement || document.body: this.el;
					this.startAttr[f] = this.attributes[f].from || c[f];
					this.endAttr[f] = this.attributes[f].to;
					break;
				default:
					var e = this.attributes[f].to,
					g = this.attributes[f].units || "px";
					this.attributes[f].from ? c = this.attributes[f].from: (c = parseFloat(b.getStyle(this.el, f)) || 0, "px" != g && document.defaultView && (b.setStyle(this.el, f, (e || 1) + g), c *= (e || 1) / parseFloat(b.getStyle(this.el, f)), b.setStyle(this.el, f, c + g)));
					this.units[f] = g;
					this.endAttr[f] = e;
					this.startAttr[f] = c
				}
			},
			setAttributes: function() {
				for (var f in this.frame) switch (f) {
				case "opacity":
					b.setStyle(this.el, f, this.frame[f]);
					break;
				case "scrollLeft":
				case "scrollTop":
					(this.el == document.body ? document.documentElement || document.body: this.el)[f] = this.frame[f];
					break;
				case "color":
				case "borderColor":
				case "border-color":
				case "backgroundColor":
				case "background-color":
					b.setStyle(this.el, f, "rgb(" + Math.floor(this.frame[f][0]) + "," + Math.floor(this.frame[f][1]) + "," + Math.floor(this.frame[f][2]) + ")");
					break;
				default:
					b.setStyle(this.el, f, this.frame[f] + this.units[f])
				}
			}
		};
		var b = {
			get: function(b) {
				return "string" == typeof b ? document.getElementById(b) : b
			},
			getStyle: function(b, d) {
				var d = f(d),
				c = document.defaultView;
				return c && c.getComputedStyle ? c.getComputedStyle(b, "")[d] || null: "opacity" == d ? (c = b.filters("alpha").opacity, isNaN(c) ? 1 : c ? c / 100 : 0) : b.currentStyle[d] || null
			},
			setStyle: function(b, d, c) {
				"opacity" == d ? (b.style.filter = "alpha(opacity=" + 100 * c + ")", b.style.opacity = c) : (d = f(d), b.style[d] = c)
			}
		},
		f = function() {
			var b = {};
			return function(f) {
				if (b[f]) return b[f];
				var d = f.split("-"),
				c = d[0];
				if (1 < d.length) for (var m = 1,
				e = d.length; m < e; m++) c += d[m].charAt(0).toUpperCase() + d[m].substring(1);
				return b[f] = c
			}
		} (),
		d = function() {
			var b = /^#?(\w{2})(\w{2})(\w{2})$/,
			f = /^#?(\w{1})(\w{1})(\w{1})$/,
			d = /^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/;
			return function(c) {
				var m = c.match(b);
				if (m && 4 == m.length) return [parseInt(m[1], 16), parseInt(m[2], 16), parseInt(m[3], 16)];
				if ((m = c.match(d)) && 4 == m.length) return [parseInt(m[1], 10), parseInt(m[2], 10), parseInt(m[3], 10)];
				if ((m = c.match(f)) && 4 == m.length) return [parseInt(m[1] + m[1], 16), parseInt(m[2] + m[2], 16), parseInt(m[3] + m[3], 16)]
			}
		} ()
	})();
	FX.transitions.quadIn = function(b, f, d, c) {
		return d * (b /= c) * b + f
	};
	FX.transitions.quadOut = function(b, f, d, c) {
		return - d * (b /= c) * (b - 2) + f
	};
	FX.transitions.quadInOut = function(b, f, d, c) {
		return 1 > (b /= c / 2) ? d / 2 * b * b + f: -d / 2 * (--b * (b - 2) - 1) + f
	};
	FX.transitions.cubicIn = function(b, f, d, c) {
		return d * (b /= c) * b * b + f
	};
	FX.transitions.cubicOut = function(b, f, d, c) {
		return d * ((b = b / c - 1) * b * b + 1) + f
	};
	FX.transitions.cubicInOut = function(b, f, d, c) {
		return 1 > (b /= c / 2) ? d / 2 * b * b * b + f: d / 2 * ((b -= 2) * b * b + 2) + f
	};
	FX.transitions.quartIn = function(b, f, d, c) {
		return d * (b /= c) * b * b * b + f
	};
	FX.transitions.quartOut = function(b, f, d, c) {
		return - d * ((b = b / c - 1) * b * b * b - 1) + f
	};
	FX.transitions.quartInOut = function(b, f, d, c) {
		return 1 > (b /= c / 2) ? d / 2 * b * b * b * b + f: -d / 2 * ((b -= 2) * b * b * b - 2) + f
	};
	FX.transitions.quintIn = function(b, f, d, c) {
		return d * (b /= c) * b * b * b * b + f
	};
	FX.transitions.quintOut = function(b, f, d, c) {
		return d * ((b = b / c - 1) * b * b * b * b + 1) + f
	};
	FX.transitions.quintInOut = function(b, f, d, c) {
		return 1 > (b /= c / 2) ? d / 2 * b * b * b * b * b + f: d / 2 * ((b -= 2) * b * b * b * b + 2) + f
	};
	FX.transitions.expoIn = function(b, f, d, c) {
		return 0 == b ? f: d * Math.pow(2, 10 * (b / c - 1)) + f - 0.001 * d
	};
	FX.transitions.expoOut = function(b, f, d, c) {
		return b == c ? f + d: 1.001 * d * ( - Math.pow(2, -10 * b / c) + 1) + f
	};
	FX.transitions.expoInOut = function(b, f, d, c) {
		return 0 == b ? f: b == c ? f + d: 1 > (b /= c / 2) ? d / 2 * Math.pow(2, 10 * (b - 1)) + f - 5.0E-4 * d: 1.0005 * (d / 2) * ( - Math.pow(2, -10 * --b) + 2) + f
	};
	FX.transitions.circIn = function(b, f, d, c) {
		return - d * (Math.sqrt(1 - (b /= c) * b) - 1) + f
	};
	FX.transitions.circOut = function(b, f, d, c) {
		return d * Math.sqrt(1 - (b = b / c - 1) * b) + f
	};
	FX.transitions.circInOut = function(b, f, d, c) {
		return 1 > (b /= c / 2) ? -d / 2 * (Math.sqrt(1 - b * b) - 1) + f: d / 2 * (Math.sqrt(1 - (b -= 2) * b) + 1) + f
	};
	FX.transitions.backIn = function(b, f, d, c, h) {
		h = h || 1.70158;
		return d * (b /= c) * b * ((h + 1) * b - h) + f
	};
	FX.transitions.backOut = function(b, f, d, c, h) {
		h = h || 1.70158;
		return d * ((b = b / c - 1) * b * ((h + 1) * b + h) + 1) + f
	};
	FX.transitions.backBoth = function(b, f, d, c, h) {
		h = h || 1.70158;
		return 1 > (b /= c / 2) ? d / 2 * b * b * (((h *= 1.525) + 1) * b - h) + f: d / 2 * ((b -= 2) * b * (((h *= 1.525) + 1) * b + h) + 2) + f
	};
	FX.transitions.elasticIn = function(b, f, d, c, h, e) {
		if (0 == b) return f;
		if (1 == (b /= c)) return f + d;
		e || (e = 0.3 * c); ! h || h < Math.abs(d) ? (h = d, d = e / 4) : d = e / (2 * Math.PI) * Math.asin(d / h);
		return - (h * Math.pow(2, 10 * (b -= 1)) * Math.sin((b * c - d) * 2 * Math.PI / e)) + f
	};
	FX.transitions.elasticOut = function(b, f, d, c, h, e) {
		if (0 == b) return f;
		if (1 == (b /= c)) return f + d;
		e || (e = 0.3 * c);
		if (!h || h < Math.abs(d)) var h = d,
		g = e / 4;
		else g = e / (2 * Math.PI) * Math.asin(d / h);
		return h * Math.pow(2, -10 * b) * Math.sin((b * c - g) * 2 * Math.PI / e) + d + f
	};
	FX.transitions.elasticBoth = function(b, f, d, c, h, e) {
		if (0 == b) return f;
		if (2 == (b /= c / 2)) return f + d;
		e || (e = c * 0.3 * 1.5);
		if (!h || h < Math.abs(d)) var h = d,
		g = e / 4;
		else g = e / (2 * Math.PI) * Math.asin(d / h);
		return 1 > b ? -0.5 * h * Math.pow(2, 10 * (b -= 1)) * Math.sin((b * c - g) * 2 * Math.PI / e) + f: 0.5 * h * Math.pow(2, -10 * (b -= 1)) * Math.sin((b * c - g) * 2 * Math.PI / e) + d + f
	};
	FX.transitions.backIn = function(b, f, d, c, h) {
		"undefined" == typeof h && (h = 1.70158);
		return d * (b /= c) * b * ((h + 1) * b - h) + f
	};
	FX.transitions.backOut = function(b, f, d, c, h) {
		"undefined" == typeof h && (h = 1.70158);
		return d * ((b = b / c - 1) * b * ((h + 1) * b + h) + 1) + f
	};
	FX.transitions.backBoth = function(b, f, d, c, h) {
		"undefined" == typeof h && (h = 1.70158);
		return 1 > (b /= c / 2) ? d / 2 * b * b * (((h *= 1.525) + 1) * b - h) + f: d / 2 * ((b -= 2) * b * (((h *= 1.525) + 1) * b + h) + 2) + f
	};
	FX.transitions.bounceIn = function(b, f, d, c) {
		return d - FX.transitions.bounceOut(c - b, 0, d, c) + f
	};
	FX.transitions.bounceOut = function(b, f, d, c) {
		return (b /= c) < 1 / 2.75 ? d * 7.5625 * b * b + f: b < 2 / 2.75 ? d * (7.5625 * (b -= 1.5 / 2.75) * b + 0.75) + f: b < 2.5 / 2.75 ? d * (7.5625 * (b -= 2.25 / 2.75) * b + 0.9375) + f: d * (7.5625 * (b -= 2.625 / 2.75) * b + 0.984375) + f
	};
	FX.transitions.bounceBoth = function(b, f, d, c) {
		return b < c / 2 ? 0.5 * FX.transitions.bounceIn(2 * b, 0, d, c) + f: 0.5 * FX.transitions.bounceOut(2 * b - c, 0, d, c) + 0.5 * d + f
	}; (function(b) {
		function f(b, f) {
			b.timer && clearTimeout(b.timer);
			b.clearAttributes ? b.clearAttributes() : b.onload = b.onreadystatechange = b.onerror = null;
			delete d[f];
			b.parentNode.removeChild(b)
		}
		var d = u.callback = u.callback || {};
		b.jsonp = function(b) {
			b = b || {};
			if (!b.url) throw new TypeError("Param Error");
			var c = b.callback || "callback",
			e = b.data || {},
			o = parseInt(b.time) || 1E4,
			l = "cb_" + Y(6);
			e[c] = "YKU.callback." + l;
			var c = t(e),
			e = b.url,
			e = -1 === e.indexOf("?") ? e + ("?" + c) : e + ("&" + c),
			q = document.createElement("script");
			d[l] = function(f) {
				try {
					"timeout" != q.jsonp && (q.jsonp = "success", b.success && b.success(f))
				} catch(d) {
					g.log("-- JSONP --"),
					g.log(d)
				}
			};
			o && (q.timer = setTimeout(function() {
				q.jsonp = "timeout";
				b.fail && b.fail({
					message: "timeout"
				})
			},
			o));
			q.onreadystatechange = q.onload = function() {
				if (!this.readyState || this.readyState == "loaded" || this.readyState == "complete") {
					q.jsonp !== "timeout" && q.jsonp != "success" && b.fail && b.fail({
						message: "fail"
					});
					f(q, l)
				}
			};
			q.onerror = function() {
				q.jsonp = "error";
				f(q, l);
				b.fail && b.fail({
					message: "error"
				})
			};
			q.src = e;
			document.getElementsByTagName("head")[0].appendChild(q)
		}
	})(u);
	var ja = function() {};
	ja.prototype = {
		cookie: function(b, f, d, c) {
			"string" == typeof b && (c = d, d = f, f = b, b = window);
			if (void 0 !== d) {
				var c = c || {},
				h;
				h = "";
				c.expires && (c.expires.constructor == Date ? h = c.expires: (h = new Date, h.setTime(h.getTime() + 864E5 * c.expires)), h = "; expires=" + h.toGMTString());
				var e = c.path ? "; path=" + c.path: "",
				g = c.domain ? "; domain=" + c.domain: "",
				c = c.secure ? "; secure": "";
				b.document.cookie = [f, "=", encodeURIComponent(d), h, e, g, c].join("")
			} else return (d = b.document.cookie.match(RegExp("(?:\\s|^)" + f + "\\=([^;]*)"))) ? decodeURIComponent(d[1]) : null
		},
		pvid: function() {
			return this.rand(this.cookie("u_id"))
		},
		Mash: function() {
			var b = 4022871197,
			f = function(f) {
				for (var f = f.toString(), d = 0; d < f.length; d++) {
					b += f.charCodeAt(d);
					var c = 0.02519603282416938 * b;
					b = c >>> 0;
					c -= b;
					c *= b;
					b = c >>> 0;
					c -= b;
					b += 4294967296 * c
				}
				return 2.3283064365386963E-10 * (b >>> 0)
			};
			f.version = "Mash 0.9";
			return f
		},
		MRG32k3a: function() {
			var b = this;
			return function(f) {
				var d = 12345,
				c = 12345,
				h = 123,
				e = 12345,
				g = 12345,
				l = 123;
				0 === f.length && (f = [ + new Date]);
				for (var q = b.Mash(), j = 0; j < f.length; j++) d += 4294967296 * q(f[j]),
				c += 4294967296 * q(f[j]),
				h += 4294967296 * q(f[j]),
				e += 4294967296 * q(f[j]),
				g += 4294967296 * q(f[j]),
				l += 4294967296 * q(f[j]);
				var d = d % 4294967087,
				c = c % 4294967087,
				h = h % 4294967087,
				e = e % 4294944443,
				g = g % 4294944443,
				l = l % 4294944443,
				q = null,
				n = function() {
					var b, f;
					b = 1403580 * c - 810728 * d;
					b -= 4294967087 * (b / 4294967087 | 0);
					0 > b && (b += 4294967087);
					d = c;
					c = h;
					h = b;
					f = 527612 * l - 1370589 * e;
					f -= 4294944443 * (f / 4294944443 | 0);
					0 > f && (f += 4294944443);
					e = g;
					g = l;
					l = f;
					return b <= f ? b - f + 4294967087 : b - f
				},
				p = function() {
					return 2.3283064365386963E-10 * n()
				};
				p.uint32 = n;
				p.fract53 = function() {
					return p() + 1.1102230246251565E-16 * (n() & 2097151)
				};
				p.version = "MRG32k3a 0.9";
				p.args = f;
				return p
			} (Array.prototype.slice.call(arguments))
		},
		rand: function(b, f) {
			var f = "undefined" == typeof f ? "": f,
			d = this.MRG32k3a(b || 0, location.href, Date.now());
			return f + ( + new Date).toString(32) + parseInt(1E5 * d()).toString(32)
		},
		seid: function() {
			var b = this.cookie("seid");
			if (!b || +new Date > (parseInt(this.cookie("seidtimeout")) || 0)) b = this.rand(this.cookie("u_id"), "0"),
			this.cookie("seid", b, {
				domain: "youku.com",
				path: "/"
			}),
			b = this.cookie("seid") || 1;
			var f = this.cookie("referhost");
			if (!f || +new Date > (parseInt(this.cookie("seidtimeout")) || 0)) f = (f = /^https?:\/\/[^\/]+/.exec(document.referrer || "")) ? f[0] : "",
			this.cookie("referhost", f, {
				domain: "youku.com",
				path: "/"
			});
			this.cookie("seidtimeout", Date.now() + 18E5, {
				domain: "youku.com",
				path: "/"
			});
			return b
		},
		juid: function() {
			var b = this.cookie("juid");
			b || (b = this.rand(this.cookie("u_id"), "0"), this.cookie("juid", b, {
				expires: 36500,
				domain: "youku.com",
				path: "/"
			}), b = this.cookie("juid") || 1);
			return window.juidStr = b
		}
	};
	var M = {
		"-100": "\u8be5\u89c6\u9891\u6b63\u5728\u8f6c\u7801\u4e2d... , \u8bf7\u7a0d\u5019",
		"-101": "\u8be5\u89c6\u9891\u6b63\u5728\u5ba1\u6838\u4e2d... , \u8bf7\u7a0d\u5019",
		"-102": "\u8be5\u89c6\u9891\u5df2\u88ab\u5c4f\u853d",
		"-103": "\u8be5\u89c6\u9891\u8f6c\u7801\u5931\u8d25",
		"-201": "\u8be5\u89c6\u9891\u88ab\u8bbe\u4e3a\u79c1\u5bc6",
		"-202": "\u8be5\u89c6\u9891\u5df2\u7ecf\u52a0\u5bc6",
		"-203": "\u5bf9\u4e0d\u8d77\uff0c\u60a8\u8f93\u5165\u7684\u5bc6\u7801\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165",
		"-204": "\u7c89\u4e1d\u89c2\u770b\u89c6\u9891",
		"-301": "",
		"-302": "\u4ed8\u8d39\u89c6\u9891\u8d85\u8fc7\u89c2\u770b\u4e0a\u9650\u6b21\u6570",
		"-303": "\u4ed8\u8d39\u89c6\u9891\u4e0b\u7ebf",
		"-306": "\u8d26\u53f7\u5206\u4eab\u4e0d\u5408\u6cd5, IP\u4e0a\u9650",
		"-307": "\u4ed8\u8d39\u89c6\u9891, \u672a\u767b\u5f55",
		"-401": "\u96c6\u56e2\u64ad\u63a7\u7cfb\u7edf\u9650\u5236",
		"-402": "\u7528\u6237\u6ca1\u6709\u6743\u9650\u89c2\u770b(\u9632\u76d7\u94fenonce)",
		"-501": "\u670d\u52a1\u5668\u53d1\u751f\u9519\u8bef",
		"-601": "\u53c2\u6570\u9519\u8bef"
	},
	T = function(b, f) {
		this.player = b;
		this._handle = {};
		this._feedback = d.get(".x-feedback");
		this._message = this._feedback.getElementsByClassName("x-message")[0];
		this._messagetxt = this._message.getElementsByClassName("x-message-txt")[0];
		this._messagebtn = this._message.getElementsByClassName("x-message-btn")[0];
		this._errorcode = this._error = null;
		this.init(f);
		this.bindEvent()
	};
	T.prototype = {
		init: function(b) {
			if (b && (b.data && b.data && b.data.error) && (d.hide(d.get(".x-video-button")), d.hide(d.get(".x-console")), this._vid = b.data.id, this._title = b.data.video.title, this._userid = b.data.video.userid, this._error = b.data.error, this._errorcode = parseInt(b.data.error.code), !( - 301 == this._errorcode || -307 == this._errorcode || -308 == this._errorcode))) {
				switch (this._errorcode) {
				case - 100 : this.setMessage(M["-100"]);
					e.onError({
						code: "1000",
						message: "\u89c6\u9891\u8f6c\u7801\u4e2d"
					},
					"\u89c6\u9891\u8f6c\u7801\u4e2d");
					break;
				case - 101 : this.setMessage(M["-101"]);
					e.onError({
						code: "1000",
						message: "\u89c6\u9891\u5ba1\u6838\u4e2d"
					},
					"\u89c6\u9891\u5ba1\u6838\u4e2d");
					break;
				case - 102 : this.setMessage(M["-102"]);
					this.setButton("\u641c\u7d22", this.search);
					e.onError({
						code: "2999",
						message: "\u89c6\u9891\u5df2\u88ab\u5c4f\u853d"
					},
					"\u89c6\u9891\u5df2\u88ab\u5c4f\u853d");
					break;
				case - 103 : this.setMessage(M["-103"]);
					this.bind_feedback = d.bindAsEventListener(this, this.feedback);
					this.setButton("\u5728\u7ebf\u53cd\u9988", this.bind_feedback);
					e.onError({
						code: "2999",
						message: "\u89c6\u9891\u8f6c\u7801\u5931\u8d25"
					},
					"\u89c6\u9891\u8f6c\u7801\u5931\u8d25");
					break;
				case - 201 : this.setMessage(M["-201"]);
					this.bind_contact = d.bindAsEventListener(this, this.contactOwner);
					this.setButton("\u8054\u7cfb\u4e0a\u4f20\u8005", this.bind_contact);
					e.onError({
						code: "1000",
						message: "\u79c1\u5bc6\u89c6\u9891\uff0c\u7528\u6237\u6ca1\u6709\u6743\u9650\u89c2\u770b"
					},
					"\u79c1\u5bc6\u89c6\u9891\uff0c\u7528\u6237\u6ca1\u6709\u6743\u9650\u89c2\u770b");
					break;
				case - 202 : this._messagetxt.innerHTML = "<input type=password placeholder=\u8f93\u5165\u5bc6\u7801\u89c2\u770b\u89c6\u9891 class=x-message-input>";
					this.bind_inputpassword = d.bindAsEventListener(this, this.inputPassword);
					this.setButton("\u786e\u5b9a", this.bind_inputpassword);
					break;
				case - 203 : this._messagetxt.innerHTML = '<input type=password placeholder="\u5bf9\u4e0d\u8d77,\u60a8\u8f93\u5165\u7684\u5bc6\u7801\u9519\u8bef,\u8bf7\u91cd\u65b0\u8f93\u5165" class=x-message-input>';
					this.bind_inputpassword = d.bindAsEventListener(this, this.inputPassword);
					this.setButton("\u786e\u5b9a", this.bind_inputpassword);
					break;
				case - 306 : this._messagetxt.innerHTML = '<a style="color:#3399e0;text-decoration:underline;position:relative;top:3px;" href="' + b.data.error.link + '" target="_blank">' + b.data.error.note + "</a>";
					e.onError({
						code: "2008",
						message: "\u8d26\u53f7\u7591\u4f3c\u88ab\u5206\u4eab"
					},
					"\u5e10\u53f7\u5206\u4eab\u4e0d\u5408\u6cd5");
					break;
				default:
					this.setMessage(b.data.error.note),
					e.onError({
						code: "1000",
						message: b.data.error.note
					},
					b.data.error.note)
				}
				this.show();
				this.showMessage()
			}
		},
		bindEvent: function() {},
		show: function() {
			d.show(this._feedback)
		},
		hide: function() {
			d.hide(this._feedback)
		},
		showMessage: function() {
			d.show(this._message)
		},
		hideMessage: function() {
			d.hide(this._message)
		},
		setMessage: function(b) {
			this._messagetxt.innerHTML = "<p>" + b + "</p>"
		},
		setButton: function(b, f) {
			this._messagebtn.innerHTML = "<button type=button class=x-btn>" + b + "</button>";
			var c = this._message.getElementsByClassName("x-btn")[0];
			d.addEventHandler(c, "click", f)
		},
		search: function() {
			window.location.href = "https://www.soku.com/search_video/q_" + this._title
		},
		feedback: function() {
			window.location.href = "https://www.youku.com/service/feed/subtype/4/"
		},
		contactOwner: function() {
			window.location.href = "https://i.youku.com/u/id_" + this._userid
		},
		onPasswordConfirm: function() {},
		inputPassword: function() {
			var b = this._messagetxt.getElementsByClassName("x-message-input")[0],
			f = b.value;
			if (null == f || 0 == f.replace(/\s/g, "").length) b.value = "",
			b.placeholder = "\u5bc6\u7801\u4e3a\u7a7a\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165";
			else {
				var c = this.player;
				d.password = f;
				n.start(this._vid, f, d.config.content,
				function(b, e) {
					d.hide(d.get(".x-feedback"));
					d.password = f;
					d.show(d.get(".x-video-button"));
					d.hide(d.get(".x-message"));
					c.startPlay(b, e)
				})
			}
		}
	};
	var ka = function(b) {
		this._handler = {};
		this.player = b;
		this._fullflag = null;
		this.init();
		this._fullscreen = d.get(".x-fullscreen");
		this._btn = this._fullscreen.getElementsByTagName("button")[0];
		this._btnb = this._btn.getElementsByTagName("b")[0];
		this.bindEvent()
	};
	ka.prototype = {
		addEventListener: function(b, f) {
			this._handler[b] = f
		},
		removeEventListener: function(b) {
			this._handler[b] = null
		},
		dispatch: function(b) {
			b && this._handler[b.type] && (b._target = this, this._handler[b.type](b))
		},
		init: function() {},
		bindEvent: function() {
			this.bind_switch = d.bindAsEventListener(this, this.switchFullScreen);
			d.addEventHandler(this._fullscreen, "click", this.bind_switch, !0)
		},
		removeEvent: function() {
			d.removeEventHandler(this._fullscreen, "click", this.bind_switch, !0)
		},
		zoomStatus: function() {
			return this._btnb.className
		},
		fullFlag: function() {
			if (null !== this._fullflag) return this._fullflag;
			var b = this.player.video.fullscreenchange;
			return this._fullflag = "undefined" != typeof b ? b: !1
		},
		switchFullScreen: function(b) {
			var f = b.method || "c",
			c = this._btnb.className;
			d.config.events && d.config.events.onSwitchFullScreen ? ( - 1 === c.indexOf("in") ? (this._fullflag = !1, this._btnb.className = c.replace(/out/g, "in"), this.player.controls.hideShowListBtn(), this.player._reporter.sendUserActionReport("xexfs", f), this.player.adjustVideoRatio(1), this.dispatch({
				type: "exitfullscreen"
			})) : (this._fullflag = !0, this._btnb.className = c.replace(/in/g, "out"), this.player.controls.showShowListBtn(), this.player._reporter.sendUserActionReport("xenfs", f), this.player.adjustVideoRatio(), this.dispatch({
				type: "enterfullscreen"
			})), f = d.config.events.onSwitchFullScreen, f(b, c)) : (b = document.getElementById("x-player"), -1 === c.indexOf("in") ? (this.player._reporter.sendUserActionReport("xexfs", f), document.webkitCancelFullScreen && (this._btnb.className = c.replace(/out/g, "in"), this._fullflag = !1, document.webkitCancelFullScreen())) : (this.player._reporter.sendUserActionReport("xenfs", f), b.webkitRequestFullScreen ? (this._btnb.className = c.replace(/in/g, "out"), this._fullflag = !0, b.webkitRequestFullScreen()) : this.player.video.webkitSupportsFullscreen && 1 <= this.player.video.readyState && this.player.video.webkitEnterFullscreen()))
		}
	};
	var la = function(b, f) {
		this.handler = {};
		this.player = b;
		this.information = d.get(".x-video-info");
		this.title = this.information.getElementsByClassName("x-title")[0];
		this.videoState = this.information.getElementsByClassName("x-video-state")[0];
		d.hide(this.videoState);
		this.init(f)
	};
	la.prototype = {
		init: function(b) {
			this.title.innerHTML = b.data.show && b.data.show.title ? b.data.show.title.substr(0, 20) : b.data.video.title.substr(0, 20);
			if (b.data.trial || b.data.error) if ("episodes" == d.v.data.trial.type) this.show();
			else return;
			this.videoState.innerHTML = "<span>\u65f6\u957f: " + d.getTime(parseInt(b.data.video.seconds)) + "</span>";
			this.show()
		},
		show: function() {
			if (d.v.data.trial) if ("episodes" == d.v.data.trial.type) d.show(this.information);
			else return;
			d.show(this.information)
		},
		hide: function() {
			d.hide(this.information)
		},
		bindEvent: function() {}
	};
	var ma = function(b) {
		this.player = b;
		this._tip = d.get(".x-prompt");
		this.init()
	};
	ma.prototype = {
		init: function() {
			this._tip.innerHTML = '<div class=x-prompt-mode><div class=x-prompt-time></div><div class=x-prompt-forward>\u5feb\u8fdb</div><div class=x-prompt-back>\u5feb\u9000</div><div class=x-mask></div></div><div class=x-prompt-status style="display:none"><div class=x-prompt-txt></div><div class=x-mask></div></div>';
			this._mode = this._tip.getElementsByClassName("x-prompt-mode")[0];
			this._time = this._tip.getElementsByClassName("x-prompt-time")[0];
			this._back = this._tip.getElementsByClassName("x-prompt-back")[0];
			this._forward = this._tip.getElementsByClassName("x-prompt-forward")[0];
			this._status = this._tip.getElementsByClassName("x-prompt-status")[0];
			this._statusTxt = this._tip.getElementsByClassName("x-prompt-txt")[0]
		},
		setProgress_: function(b) { ! 0 != this._progressFlag && (this._time.innerHTML = d.getTime(parseInt(b)))
		},
		setStatus: function(b) {
			this._statusTxt.innerHTML = b;
			this.showStatus()
		},
		hideStatus: function() {
			d.hide(this._status);
			d.hide(this._tip)
		},
		showStatus: function() {
			d.hide(this._mode);
			d.show(this._status);
			d.show(this._tip)
		},
		setTip: function(b, f) {
			this._progressFlag = !0;
			this._time.innerHTML = d.getTime(Ga(b + f));
			0 >= f ? (d.show(this._back), d.hide(this._forward)) : (d.show(this._forward), d.hide(this._back));
			var c = this;
			setTimeout(function() {
				c._progressFlag = false
			},
			1E3)
		},
		isVisible: function() {
			return "none" != this._tip.style.display
		},
		hide: function() {
			d.hide(this._tip)
		},
		show: function() {
			d.show(this._mode);
			d.hide(this._status);
			d.show(this._tip)
		},
		autoHide: function(b) {
			var f = this;
			setTimeout(function() {
				f.hide()
			},
			b || 1E3)
		}
	};
	var na = function(b, f) {
		var c = !0;
		this._handler = {};
		if (d.isWeixin) d.get(".x-localization").style.display = "none";
		else if (!f || !f.data || !f.data || !f.data.dvd || !f.data.dvd.audiolang) d.get(".x-localization").style.display = "none";
		else {
			if (d.videoInfo._videoSegsDic) {
				var i = d.videoInfo._videoSegsDic.streams,
				e = !1,
				g;
				for (g in i) {
					c = "";
					for (k in i[g]) c += k + ","; (c = -1 < c.indexOf("3gphd") || -1 < c.indexOf("mp4") ? !1 : !0) && (e = !0)
				}
				if (c && e) {
					d.get(".x-localization").style.display = "none";
					return
				}
			}
			this.player = b;
			this._language = d.get(".x-localization");
			this.init(f);
			this.bindEvent();
			this._button = this._language.getElementsByTagName("button")[0];
			this._panel = this._language.getElementsByTagName("div")[0];
			this._nodes = this._language.getElementsByTagName("li")
		}
	};
	na.prototype = {
		addEventListener: function(b, f) {
			this._handler[b] = f
		},
		removeEventListener: function(b) {
			this._handler[b] = null
		},
		dispatch: function(b) {
			b && this._handler[b.type] && (b._target = this, this._handler[b.type](b))
		},
		init: function(b) {
			for (var b = b.data,
			f = b.dvd.audiolang,
			d = ["<button class=x-control-btn>", "", "</button>"], c = ["<div class=x-panel><ul>", "", "</ul><div class=x-mask></div>", "</div>"], e = [], g = 0; g < f.length; g++) {
				var o = "",
				o = o + ("<li data-vid=" + f[g].vid),
				o = o + (" data-language=" + f[g].lang),
				o = o + (" data-language-code=" + f[g].langcode);
				f[g].vid == b.video.encodeid ? (d[1] = f[g].lang, o += " class=selected>") : o += ">";
				o += f[g].lang + "</li>";
				e[g] = o
			}
			c[1] = e.join("");
			this._language.innerHTML = d.join("") + c.join("")
		},
		bindEvent: function() {
			var b = this._language.getElementsByTagName("li");
			if (0 != b.length) {
				this.bind_toggle = d.bindAsEventListener(this, this.toggleLanguagePanel);
				d.addEventHandler(this._language, "click", this.bind_toggle);
				for (var f = 0; f < b.length; f++) d.addEventHandler(b[f], "click", d.bindAsEventListener(this, this.switchLanguage))
			}
		},
		removeEvent: function() {
			null != this._language && d.removeEventHandler(this._language, "click", this.bind_toggle)
		},
		hide: function(b) {
			if (this._language) {
				var f = this._panel;
				this._language.className = this._language.className.replace(/[\s]*pressed/g, "");
				f.style.display = "none";
				b || this.dispatch({
					type: "settinghide"
				})
			}
		},
		toggleLanguagePanel: function(b) {
			var f = this._panel; - 1 === this._language.className.indexOf("pressed") ? (this._language.className += " pressed", f.style.display = "block", this.dispatch({
				type: "settingshow"
			}), this.player._reporter.sendUserActionReport("xcl", "c")) : (this.hide(), this.player._reporter.sendUserActionReport("xhl", "c"));
			this.dispatch(b)
		},
		switchLanguage: function(b) {
			this.player._reporter.sendUserActionReport("xsl", "c");
			b.stopPropagation();
			var b = b.target,
			f = null;
			b.getAttribute ? (f = b.getAttribute("data-vid"), b.getAttribute("data-language"), b = b.getAttribute("data-language-code")) : (f = b.parentNode.getAttribute("data-vid"), b.parentNode.getAttribute("data-language"), b = b.parentNode.getAttribute("data-language-code"));
			for (var c = this._nodes,
			i = 0; i < c.length; i++) if (c[i].getAttribute("data-vid") == f) {
				if ( - 1 !== c[i].className.indexOf("selected")) {
					this.toggleLanguagePanel();
					return
				}
				c[i].innerHTML = c[i].getAttribute("data-language");
				c[i].className += " selected";
				this._button.innerHTML = c[i].getAttribute("data-language")
			} else c[i].innerHTML = c[i].getAttribute("data-language"),
			c[i].className = c[i].className.replace(/[\s]*selected/g, "");
			this.toggleLanguagePanel();
			this.dispatch({
				type: "settingdone"
			});
			var e = this.player,
			g = this.player.currentTime;
			w.log("switchLanguage vid = " + f);
			d.config.nextAutoPlay = 1;
			if (null != d.videoInfo._videoSegsDic && null != d.videoInfo._videoSegsDic.streams[b]) {
				if ("m3u8" == d.config.content) d.defaultLanguage = b,
				e.video.src = d.m3u8src_v2(f, d.defaultVideoType);
				else {
					f = d.videoInfo._videoSegsDic.streams[b];
					if (f[d.defaultVideoType]) d.defaultLanguage = b;
					else {
						c = ["3gphd", "mp4"];
						for (i = 0; i < c.length; i++) if (f[c[i]]) {
							d.defaultVideoType = c[i];
							d.defaultLanguage = b;
							break
						}
					}
					e.video.src = d.videoInfo._videoSegsDic.streams[d.defaultLanguage][d.defaultVideoType][0].src
				}
				e.video.load();
				e.video.play()
			}
			var o = 0;
			e.video.addEventListener("canplay",
			function() {
				if (o !== 1) {
					o = 1;
					e.seek(g)
				}
			})
		}
	};
	var j = {
		setItem: function(b, f) {
			try {
				window.localStorage.setItem(b, f)
			} catch(d) {}
		},
		appendItem: function(b, f) {
			"phase" == b && !this.phaseTag && (this.phaseTag = !0, j.removeItem("phase"));
			try {
				var d = j.getItem(b);
				null !== d && (f = d + "-" + f);
				window.localStorage.setItem(b, f)
			} catch(c) {}
		},
		getItem: function(b) {
			try {
				return window.localStorage.getItem(b)
			} catch(f) {
				return null
			}
		},
		removeItem: function(b) {
			try {
				window.localStorage.removeItem(b)
			} catch(f) {}
		}
	},
	oa = function(b) {
		this.player = b;
		this._progress = d.get(".x-progress-mini");
		this._track = this._progress.getElementsByClassName("x-progress-track-mini")[0];
		this._play = this._progress.getElementsByClassName("x-progress-play-mini")[0];
		this._load = this._progress.getElementsByClassName("x-progress-load-mini")[0];
		this._handler = {};
		this.bindEvent();
		this.resetProgress();
		this.hide()
	};
	oa.prototype = {
		addEventListener: function(b, f) {
			this._handler[b] = f
		},
		removeEventListener: function(b) {
			this._handler[b] = null
		},
		bindEvent: function() {},
		removeEvent: function() {},
		dispatch: function(b) {
			if (b && this._handler[b.type]) this._handler[b.type]()
		},
		setProgress: function(b, f) {
			var c = Math.min(b, d.videoInfo.totalTime);
			this.playTime = c;
			var i = c / d.videoInfo.totalTime;
			this._play.style.width = 100 * i + "%"; ! 0 !== f && (this.loadTime = c += Math.max(this.player.bufferedEnd() - b, 0), i = c / d.videoInfo.totalTime + 0.05, this._load.style.width = 100 * Math.min(Math.max(i, 0), 1) + "%")
		},
		resetProgress: function() {
			this._play.style.width = "0%";
			this._load.style.width = "0%"
		},
		show: function() {
			this._progress.style.display = "block"
		},
		hide: function() {
			this._progress.style.display = "none"
		}
	};
	var pa = function(b, f) {
		this._handler = {};
		this._hasPayInfo = !1;
		this._payInfo = d.get(".x-pay", b.root);
		this._text = d.get(".x-pay-txt", this._payInfo);
		this._title = this._text.getElementsByTagName("h1")[0];
		this._vip = this._text.getElementsByTagName("em")[0];
		this._tip = d.get(".x-pay-tips", this._payInfo);
		this._button = d.get(".x-pay-btn", this._payInfo);
		this._tryBtn = d.get(".x-btn-try", this._button);
		this._payBtn = d.get(".x-btn-pay", this._button);
		this._panel = d.get(".x-pay-panel", b.root);
		this._panelTitle = d.get(".x-pay-txt", this._panel);
		this._panelTip = d.get(".x-pay-title", this._panel);
		this._panelTry = d.get(".x-try", this._panel);
		this._panelPay = d.get(".x-buy", this._panel);
		this.player = b;
		this.init(f)
	};
	pa.prototype = {
		addEventListener: function(b, f) {
			this._handler[b] = f
		},
		removeEventListener: function(b) {
			this._handler[b] = null
		},
		dispatch: function(b) {
			b && this._handler[b.type] && (b._target = this, this._handler[b.type](b))
		},
		bindEvent: function() {
			this.bind_try = d.bindAsEventListener(this, this.play);
			this.bind_pay = d.bindAsEventListener(this, this.pay);
			d.addEventHandler(this._tryBtn, "touchend", this.bind_try);
			d.addEventHandler(this._payBtn, "touchend", this.bind_pay);
			d.addEventHandler(this._panelTry, "touchend", this.bind_try);
			d.addEventHandler(this._panelPay, "touchend", this.bind_pay)
		},
		removeEvent: function() {
			d.removeEventHandler(this._tryBtn, "touchend", this.bind_try);
			d.removeEventHandler(this._payBtn, "touchend", this.bind_pay);
			d.addEventHandler(this._panelTry, "touchend", this.bind_try);
			d.addEventHandler(this._panelPay, "touchend", this.bind_pay)
		},
		init: function(b) {
			var f = this,
			d = {},
			c = !0,
			e = b.data.video;
			if (b.data.trial && e.type && "episodes" != b.data.trial.type) {
				e = e.type.join(",") + ",";
				if (! (0 <= e.indexOf("fee,"))) if (0 <= e.indexOf("channel_vip,")) c = !1;
				else return;
				"vod" == this._type ? (d.product_desc = "<\u4ed8\u8d39\u5f71\u7247>", d.buy_desc = "\u7acb\u5373\u8d2d\u4e70") : (d.product_desc = "<\u4ed8\u8d39\u5305\u6708\u5f71\u7247>", d.buy_desc = "\u5f00\u901a\u4f1a\u5458");
				this._type = b.data.show.pay_type;
				if (!c && b.data.error) switch (parseInt(b.data.error.code)) {
				case - 301 : break;
				case - 307 : d.product_desc = "<\u4ed8\u8d39\u8282\u76ee\uff0c\u8bf7\u5148\u767b\u5f55\uff01>";
					d.buy_desc = "";
					break;
				default:
					d.product_desc = "<\u81ea\u9891\u9053\u4f1a\u5458\u89c6\u9891>",
					d.buy_desc = ""
				}
				f._hasPayInfo = !0;
				this._tryDuration = parseInt(b.data.trial.time || 0);
				this.player.tryDuration = this._tryDuration;
				g.log("try = " + this._tryDuration);
				this.processData(d, b);
				this.bindEvent();
				this._payData = d;
				c && f.getData({
					vid: b.data.id
				},
				function(d) {
					f._payData = d;
					f.processData(d, b);
					b.data.error && f.showTip()
				},
				function() {
					b.data.error && f.showTip()
				});
				0 >= this._tryDuration ? this.showTip() : this.show()
			}
		},
		processData: function(b, f) {
			var c = b.product_desc || "",
			i = f.data.video.title;
			12 < i.length && (i = i.substr(0, 12) + "...");
			c = " " + c.replace(/<[^(<||>)]{0,}>/g,
			function(b) {
				var d = b.indexOf("<"),
				f = b.indexOf(">");
				return b.substring(0, d) + " <span class=x-vip>" + b.substring(d + 1, f) + "</span> " + b.substring(f + 1) + " "
			});
			this._title.innerHTML = i + c;
			this._payBtn.innerHTML = b.buy_desc;
			this._panelTitle.innerHTML = "<h1>" + f.data.video.title + "</h1>";
			this._panelTip.innerHTML = '<i class="x-icon-prompt"></i>' + c; (this._panelPay.innerHTML = b.buy_desc) ? (this._payBtn.style.cssText = "", this._panelPay.style.cssText = "") : (d.hide(this._payBtn), d.hide(this._panelPay))
		},
		getData: function(b, d, c) {
			u.jsonp({
				url: "https://vip.youku.com/",
				data: {
					c: "xhr",
					a: "h5_player_get_pay_info",
					video_id: b.vid
				},
				success: function(b) {
					b.code && b.result ? d(b.result) : c(b)
				},
				fail: function(b) {
					c(b)
				}
			})
		},
		play: function() {
			if ((e.isIPHONE || e.isIPOD) && null != d.v.data.trial) this.player.video.style.display = "block";
			0 === this.activeTime || this.player.currentTime >= this._tryDuration ? (this.player.replay(), this.activeTime = -1) : this.player.video.load();
			this.player._reporter.sendUserActionReport("xtry", "c");
			d.hide(this._panel)
		},
		pay: function() {
			this.player.video.pause();
			this._payData.buy_link ? window.open(this._payData.buy_link, "", "", !1) : (d.v.data.pay && d.v.data.pay.h5_caseurl && window.open(d.v.data.pay.h5_caseurl, "", "", !1), this.player._reporter.sendUserActionReport("xbuy", "c"))
		},
		hide: function() {
			this._payInfo && (this._payInfo.style.display = "none")
		},
		show: function() { ! 1 != this._hasPayInfo && (this._payInfo.style.display = "block", 0 >= this._tryDuration && d.hide(this._tryBtn))
		},
		isBlock: function() {
			return "block" == this._payInfo.style.display
		},
		showTip: function() {
			this._hasPayInfo && (this._panel.style.display = "block", 0 >= this._tryDuration && d.hide(this._panelTry))
		},
		hideTip: function() {
			this._hasPayInfo && d.hide(this._panel)
		},
		clearTip: function() {
			this._tip.innerHTML = ""
		},
		hasPayInfo: function() {
			return this._hasPayInfo
		},
		tryDuration: function() {
			return this._tryDuration
		}
	};
	var qa = function(b, f, c) {
		this.player = b;
		this._videoInfo = f;
		this.hasPausead = !1;
		this._limitTime = 1E5;
		this._html5_disable = !1;
		b = this._videoInfo.data;
		this.cateId = b.video.category_id;
		this.statCommon = new ja;
		this._limitVip = !0 == b.user.vip || (b.pay && !0 == b.pay.can_play ? !0 : !1);
		this.needOpen = this._isLimit = !1;
		var f = parseInt(d.videoInfo.totalTime, 10),
		i = b.show && b.show.showkind;
		if (e.isIPAD) {
			if (i && i.length && -1 != i.indexOf("PGC") || b.controller && !0 == b.controller.app_disable) {
				this._isLimit = !1;
				return
			}
			this._isLimit = !0;
			b.trial && "h5" == b.trial.type ? (this.needOpen = !0, this._limitTime = b.trial.time || 600) : (this.needOpen = !1, this._limitTime = f);
			if (!this._limitVip) {
				if (600 <= f) switch (this.cateId) {
				case 100:
				case 103:
				case 176:
				case 95:
				case 90:
					this.needOpen = !0,
					this._limitTime = 600
				}
				99 == this.cateId && 300 <= f && (this.needOpen = !0, this._limitTime = 300)
			}
			try {
				w.log(playPageUrl)
			} catch(h) {
				c && (this._isLimit = !1),
				this.needOpen = !1,
				this._limitTime = f
			}
		}
		this._isLimitNormal = b.controller && !0 == b.controller.html5_disable;
		this._isEpisodes = b.trial && "episodes" == b.trial.type;
		this._isCreated = !1;
		this.xplayer = d.get("#x-player");
		d.videoInfo.totalTime = f > this._limitTime ? this._limitTime: f;
		if (this._isLimit || this._isLimitNormal) this._html5_disable = !0;
		this._html5_disable && (this.player.tryDuration = this._limitTime)
	};
	qa.prototype = {
		create: function() {
			var b = this;
			if (!this._isCreated) {
				var f;
				f = 99 == this.cateId && this.needOpen ? "x-app-guide-5min": 600 == d.videoInfo.totalTime ? "x-app-guide": "x-app-guide-other";
				this._isLimit && (this.xplayer.appendChild(this._createTemplate("x-app-bg", "&nbsp;")), this.xplayer.appendChild(this._createTemplate(f, '<div class="x-app-guide-par"><p class="x-btn-closep">&nbsp;</p><div class="x-app-openapp"></div></div>')), this._content = d.get("." + f), this._bg = document.querySelectorAll(".x-app-bg")[0], this._closeBtn = this._content.getElementsByClassName("x-btn-closep")[0], this._downloadBtn = this._content.getElementsByClassName("x-app-openapp")[0], this._closeBtn.addEventListener("touchend",
				function() {
					b.limitAppHide()
				},
				!1), this._downloadBtn.addEventListener("touchend",
				function() {
					b.openApp()
				},
				!1), this._isCreated = !0)
			}
		},
		_createTemplate: function(b, d) {
			var c = document.createElement("div");
			c.className = b;
			c.innerHTML = d;
			return c
		},
		limitAppShow: function() {
			this._isLimit && (this.player.video.pause(), this._isCreated ? (this._content.style.display = "block", this._bg.style.display = "block") : this.create())
		},
		limitAppEnd: function() {
			if (this._isLimit && this._content) {
				this.player.video.pause();
				for (var b = "x-video-logo x-video-loading x-video-info x-video-button x-feedback x-pay x-pay-panel x-advert x-ad-pause x-prompt x-dashboard x-showlist x-tips x-trigger".split(" "), d = 0, c = b.length; d < c; d++) {
					var e = document.querySelectorAll("." + b[d]);
					e && this.xplayer.removeChild(e[0])
				}
				this._content.style.display = "block";
				this._bg.style.display = "block";
				this.needOpen && this.openApp()
			}
		},
		limitAppHide: function() {
			this._isLimit && (this._content.style.display = "none", this._bg.style.display = "none")
		},
		onDownloadClick: function() {
			e.isAndroid ? window.open("https://dl.m.cc.youku.com/android/phone/Youku_Android_xianbobofangqi.apk") : window.location.href = "//hz.youku.com/red/click.php?tp=1&cp=4007554&cpp=1000673&url=https://itunes.apple.com/cn/app/id394075284?l=cn&mt=8"
		},
		toReload: function() {
			e.Log("https://hz.youku.com/red/click.php?tp=1&cp=4009216&cpp=1000752&url=");
			setTimeout(function() {
				window.location.reload()
			},
			500)
		},
		getYoukuAppSchema: function(b, d) {
			var c, e = [];
			d ? c = "https://iosport.youku.com/ipad/ulink?": (c = "youku://", "ipad" == b.client ? c = "youkuhd://": "isAndroidChrome" == b.client && (c = "intent://"), c += "play?");
			e.push("vid=" + b.id);
			e.push("pid=" + b.pid);
			e.push("guid=" + b.guid);
			e.push("idfa=" + b.idfa);
			e.push("ouid=" + b.ouid);
			e.push("source=" + b.source);
			e.push("ua=" + b.ua);
			e.push("ver=" + b.ver);
			e.push("datetime=" + b.datetime);
			e.push("from=" + encodeURIComponent(window.location.href));
			e.push("pagetype=1");
			e.push("cookieid=" + b.cookieid);
			e.push("tuid=" + b.tuid);
			e.push("refer=" + (b.refer || "87c959fb273378eb"));
			e.push("special=" + b.special);
			e.push("sender=" + b.sender);
			c += e.join("&");
			"isAndroidChrome" == b.client && (c += "#Intent;scheme=youku;package=com.youku.phone;end;");
			return c
		},
		openApp: function() {
			var b = navigator.userAgent,
			d = b.toLowerCase();
			/iPhone/.test(b) || /iPod/.test(b) || /iPad/.test(b);
			var c = function() {
				if (b) {
					var d = /OS (\d+_\d(_\d)?)/.exec(b);
					if (!d) return null;
					d = d[1].split("_").map(function(b) {
						return parseInt(b, 10)
					});
					return {
						major: d[0],
						minor: d[1],
						patch: d[2] || 0
					}
				}
			} (),
			d = b.toLowerCase(),
			d = -1 < d.indexOf("micromessenger") ? "wechat": -1 < d.indexOf("ucbrowser") ? "uc": -1 < d.indexOf("weibo") ? "weibo": "other",
			i = !1;
			8 < c.major && -1 == b.toLowerCase().indexOf("youku") && (i = !0);
			this.YoukuAppSchema = this.getYoukuAppSchema({
				id: this._videoInfo.data.video.encodeid,
				client: e.isIPAD && "ipad" || -1 != b.indexOf("Android") && -1 < b.indexOf("Chrome") && null == b.match(/Chrome\/\d+\.0\.0\.0/i) && "androidChrome",
				pid: "87c959fb273378eb",
				guid: this.statCommon.seid(),
				idfa: "",
				ouid: "",
				source: "mplaypage4",
				ua: d,
				ver: "",
				datetime: Math.floor( + new Date / 1E3),
				refer: "pad-play",
				cookieid: this.statCommon.juid(),
				tuid: 0,
				special: 0,
				sender: 1
			},
			i);
			8 >= c.major ? (d = document.createElement("iframe"), d.height = 0, d.width = 0, d.frameBorder = "no", d.src = this.YoukuAppSchema, document.getElementsByTagName("body")[0].appendChild(d)) : window.location.href = this.YoukuAppSchema
		},
		isLimit: function() {
			return this._isLimit
		},
		limitTime: function() {
			return this._limitTime
		}
	};
	var I = {
		2 : "2\u500d",
		"1.5": "1.5\u500d",
		1 : "\u5e38\u901f",
		"0.8": "0.8\u500d"
	},
	ra = function(b, f) {
		this._handler = {}; ! d.isWeixin && e.isIPAD7 && (this.player = b, this.playRate = d.get(".x-playspeed"), this.init(f), this.bindEvent(), this.button = this.playRate.getElementsByTagName("button")[0], this.panel = this.playRate.getElementsByTagName("div")[0], this.nodes = this.playRate.getElementsByTagName("li"), d.show(this.playRate))
	};
	ra.prototype = {
		addEventListener: function(b, d) {
			this._handler[b] = d
		},
		removeEventListener: function(b) {
			this._handler[b] = null
		},
		dispatch: function(b) {
			b && this._handler[b.type] && (b._target = this, this._handler[b.type](b))
		},
		init: function() {
			for (var b = ["<button class=x-control-btn>", "", "</button>"], d = ['<div class=x-panel style="display:none"><ul>', "", "</ul><div class=x-mask></div>", "</div>"], c = "", e = [], h = ["2", "1.5", "1", "0.8"], g = 0; g < h.length; g++) {
				var o = h[g],
				l = "",
				j = "";
				"1" == o && (l = "", b[1] = I[o], j = " class=selected");
				c += "<li data-vtype=" + o + j + ">" + l + I[o] + "</li>";
				e.push(I[o])
			}
			d[1] = c;
			this.playRate.innerHTML = b.join("") + d.join("")
		},
		bindEvent: function() {
			var b = this.playRate.getElementsByTagName("li");
			if (0 != b.length) {
				this.bind_toggle = d.bindAsEventListener(this, this.toggleRatePanel);
				d.addEventHandler(this.playRate, "click", this.bind_toggle);
				for (var f = 0; f < b.length; f++) d.addEventHandler(b[f], "click", d.bindAsEventListener(this, this.switchRate))
			}
		},
		removeEvent: function() {
			null != this.playRate && d.removeEventHandler(this.playRate, "click", this.bind_toggle)
		},
		hide: function(b) {
			if (this.playRate) {
				var d = this.panel;
				this.playRate.className = this.playRate.className.replace(/[\s]*pressed/g, "");
				d.style.display = "none";
				b || this.dispatch({
					type: "settinghide"
				})
			}
		},
		toggleRatePanel: function(b) {
			var d = this.panel; - 1 === this.playRate.className.indexOf("pressed") ? (this.playRate.className += " pressed", d.style.display = "block", this.player._reporter.sendUserActionReport("xcra", "c"), this.dispatch({
				type: "settingshow"
			})) : (this.hide(), this.player._reporter.sendUserActionReport("xhra", "c"));
			this.dispatch(b)
		},
		switchRate: function(b) {
			b.stopPropagation();
			var d = b.target,
			b = null,
			b = d.getAttribute ? d.getAttribute("data-vtype") : d.parentNode.getAttribute("data-vtype");
			this.player._reporter.sendUserActionReport("xsra", "c", {
				rate: b
			});
			for (var d = this.button,
			c = this.nodes,
			e = 0; e < c.length; e++) if (c[e].getAttribute("data-vtype") == b) {
				if ( - 1 !== c[e].className.indexOf("selected")) {
					this.toggleRatePanel();
					return
				}
				c[e].innerHTML = I[b];
				c[e].className += " selected";
				d.innerHTML = I[b]
			} else {
				var h = c[e].getAttribute("data-vtype");
				c[e].innerHTML = I[h];
				c[e].className = c[e].className.replace(/selected/, "")
			}
			this.toggleRatePanel();
			this.dispatch({
				type: "settingdone"
			});
			this.player.video.pause();
			this.player.video.playbackRate = parseFloat(b);
			this.player.video.play()
		}
	};
	var sa = function(b) {
		this.player = b;
		this.maybeSeek = !1;
		this._progress = d.get(".x-progress");
		this._track = this._progress.getElementsByClassName("x-progress-track")[0];
		this._play = this._progress.getElementsByClassName("x-progress-play")[0];
		this._load = this._progress.getElementsByClassName("x-progress-load")[0];
		this._seek = this._progress.getElementsByClassName("x-progress-seek")[0];
		this._seekHandle = this._seek.getElementsByClassName("x-seek-handle")[0];
		this._handler = {};
		this.bindEvent()
	};
	sa.prototype = {
		addEventListener: function(b, d) {
			this._handler[b] = d
		},
		removeEventListener: function(b) {
			this._handler[b] = null
		},
		bindEvent: function() {
			this.bind_seek = d.bindAsEventListener(this, this.seek);
			this.bind_touchstart = d.bindAsEventListener(this, this.onTouchStart);
			d.addEventHandler(this._track, "click", this.bind_seek, !0);
			d.addEventHandler(this._seek, "touchstart", this.bind_touchstart)
		},
		removeEvent: function() {
			d.removeEventHandler(this._track, "click", this.bind_seek, !0);
			d.removeEventHandler(this._seek, "touchstart", this.bind_touchstart)
		},
		removeClickEvent: function() {
			d.removeEventHandler(this._track, "click", this.bind_seek, !0)
		},
		addClickEvent: function() {
			d.addEventHandler(this._track, "click", this.bind_seek, !0)
		},
		dispatch: function(b) {
			if (b && this._handler[b.type]) this._handler[b.type](b)
		},
		setProgress: function(b, f) {
			var c = Math.min(Math.max(b, 0), d.videoInfo.totalTime);
			this.playTime = c;
			var e = c / d.videoInfo.totalTime,
			h = this._track.offsetWidth,
			g = this._seek.offsetWidth;
			this._play.style.width = Math.min(100 * (e + g / h / 2), 100) + "%";
			this._seek.style.left = e * h > h - g ? h - g + "px": 100 * Math.min(Math.max(e, 0), 1) + "%";
			this.uCurrentTime.innerHTML = d.getTime(c); ! 0 !== f && (this.loadTime = c += Math.max(this.player.bufferedEnd() - b, 0), e = c / d.videoInfo.totalTime, this._load.style.width = 100 * Math.min(Math.max(e + 0.05, 0), 1) + "%")
		},
		resetProgress: function() {
			this._seek.style.left = this._seek.style.width;
			this._load.style.width = "0";
			this._play.style.width = "0"
		},
		getRate: function(b, f) {
			var c = 1,
			e = d.get(".x-fs-console");
			e && (c = parseFloat(d.getCurrentStyle(e).zoom));
			return b / (f * c)
		},
		seek: function(b) {
			var f = (new Date).getTime() - ta;
			if (b.srcElement == this._seek || f < ua) return g.log(f + "," + ua),
			!1;
			this.player._reporter.sendUserActionReport("xcs", "c");
			f = b.offsetX || b.changedTouches[0].clientX - this._track.clientX;
			g.log("x = " + f);
			var f = this.getRate(f, this._track.offsetWidth),
			c = f * d.videoInfo.totalTime;
			g.log("progress bar time = " + c + "rate = " + f + "total = " + d.videoInfo.totalTime);
			this.setProgress(c, !0);
			this.dispatch({
				type: "progressend"
			});
			this.player.seek(c);
			this.dispatch(b)
		},
		handleX: function() {
			return 0
		},
		onTouchStart: function(b) {
			this.maybeSeek = !0;
			if (1 != b.targetTouches.length || this.isTouching) return ! 1;
			this.startX = b.targetTouches[0].clientX;
			b.preventDefault();
			this.isTouching = !0;
			this.startTime = this._currentTime = this.player.currentTime || 0;
			"m3u8" == d.config.content && (this._prepaused = this.player.video.paused, this.player.video.pause(), this.startTime = this.player.currentTime);
			if ("mp4" == d.config.content) {
				this.player.video.pause();
				this.startTime = this.player.video.currentTime;
				for (b = 0; b < z; b++) this.startTime += parseInt(d.videoInfo._videoSegsDic.streams[d.defaultLanguage][d.defaultVideoType][b].seconds)
			}
			this.bind_onTouchMove = d.bindAsEventListener(this, this.onTouchMove);
			this.bind_onTouchEnd = d.bindAsEventListener(this, this.onTouchEnd);
			d.addEventHandler(this._seek, "touchmove", this.bind_onTouchMove);
			d.addEventHandler(this._seek, "touchend", this.bind_onTouchEnd)
		},
		onTouchMove: function(b) {
			this.maybeSeek = !0;
			if (1 != b.targetTouches.length) return ! 1;
			b.preventDefault();
			b.stopPropagation();
			b = this.startTime + this.getRate(b.targetTouches[0].clientX - this.startX, this._track.offsetWidth) * d.videoInfo.totalTime;
			this.dispatch({
				type: "progressing",
				st: this._currentTime,
				dt: b - this._currentTime
			});
			this._currentTime = b;
			this.setProgress(Math.min(Math.max(this._currentTime, 0), d.videoInfo.totalTime), !0);
			return ! 1
		},
		onTouchEnd: function(b) {
			this.dispatch({
				type: "progressend"
			});
			this.isTouching = !1;
			if (1 < b.changedTouches.length) return ! 1;
			var f = {
				tb: parseInt(100 * this.startTime) / 100,
				to: parseInt(100 * this._currentTime) / 100
			};
			g.log("tb=" + f.tb);
			this.player._reporter.sendUserActionReport("xds", "d", f);
			b.preventDefault();
			b.stopPropagation();
			d.removeEventHandler(this._seek, "touchmove", this.bind_onTouchMove);
			d.removeEventHandler(this._seek, "touchend", this.bind_onTouchEnd);
			b = Math.min(Math.max(this._currentTime, 0), d.videoInfo.totalTime - 5);
			this.player.controls.onPlay();
			var c = this.player;
			this.player.seek(b,
			function() {
				c.video.play()
			});
			return this.maybeSeek = !1
		}
	};
	var va = function(b, c) {
		this._handler = {};
		d.isWeixin && (d.get(".x-quality").style.display = "none");
		"m3u8" != d.config.content ? d.get(".x-quality").style.display = "none": !c || !c.data || !c.data.stream[0] || !c.data.stream[0].stream_type ? d.get(".x-quality").style.display = "none": (this.player = b, this._quality = d.get(".x-quality"), this.init(c), this.bindEvent(), this._button = this._quality.getElementsByTagName("button")[0], this._panel = this._quality.getElementsByTagName("div")[0], this._nodes = this._quality.getElementsByTagName("li"))
	};
	va.prototype = {
		addEventListener: function(b, d) {
			this._handler[b] = d
		},
		removeEventListener: function(b) {
			this._handler[b] = null
		},
		dispatch: function(b) {
			b && this._handler[b.type] && (b._target = this, this._handler[b.type](b))
		},
		init: function() {
			var b = d.videoInfo._videoSegsDic.typeArr,
			c = ["<button class=x-control-btn title=\u753b\u8d28\u8bbe\u7f6e>", "", "</button>"],
			e = ['<div class=x-panel style="display:none"><ul>', "", "</ul><div class=x-mask></div>", "</div>"],
			i = "",
			h = [],
			g;
			for (g in C) if ( - 1 !== b[d.defaultLanguage].indexOf(g) && -1 === h.indexOf(C[g])) {
				var o = "",
				l = "";
				g == d.defaultVideoType && (o = "", c[1] = C[g], l = " class=selected");
				i += "<li data-vtype=" + g + l + ">" + o + C[g] + "</li>";
				h.push(C[g])
			}
			"" == c[1] && (c[1] = h[0]);
			e[1] = i;
			this._quality.innerHTML = c.join("") + e.join("")
		},
		bindEvent: function() {
			var b = this._quality.getElementsByTagName("li");
			if (0 != b.length) {
				this.bind_toggle = d.bindAsEventListener(this, this.toggleQualityPanel);
				d.addEventHandler(this._quality, "click", this.bind_toggle);
				for (var c = 0; c < b.length; c++) d.addEventHandler(b[c], "click", d.bindAsEventListener(this, this.switchQuality))
			}
		},
		removeEvent: function() {
			null != this._quality && d.removeEventHandler(this._quality, "click", this.bind_toggle)
		},
		hide: function(b) {
			if (this._quality) {
				var d = this._panel;
				this._quality.className = this._quality.className.replace(/[\s]*pressed/g, "");
				d.style.display = "none";
				b || this.dispatch({
					type: "settinghide"
				})
			}
		},
		toggleQualityPanel: function(b) {
			var d = this._panel; - 1 === this._quality.className.indexOf("pressed") ? (this._quality.className += " pressed", d.style.display = "block", this.player._reporter.sendUserActionReport("xcq", "c"), this.dispatch({
				type: "settingshow"
			})) : (this.hide(), this.player._reporter.sendUserActionReport("xhq", "c"));
			this.dispatch(b)
		},
		switchQuality: function(b) {
			this.player._reporter.sendUserActionReport("xsq", "c");
			b.stopPropagation();
			for (var c = b.target,
			b = null,
			b = c.getAttribute ? c.getAttribute("data-vtype") : c.parentNode.getAttribute("data-vtype"), c = this._button, e = this._nodes, i = 0; i < e.length; i++) if (e[i].getAttribute("data-vtype") == b) {
				if ( - 1 !== e[i].className.indexOf("selected")) {
					this.toggleQualityPanel();
					return
				}
				e[i].innerHTML = C[b];
				e[i].className += " selected";
				c.innerHTML = C[b];
				j.setItem("defaultVideoType", b);
				d.defaultVideoType = b
			} else {
				var h = e[i].getAttribute("data-vtype");
				e[i].innerHTML = C[h];
				e[i].className = e[i].className.replace(/selected/, "")
			}
			g.log("q1");
			this.toggleQualityPanel();
			this.dispatch({
				type: "settingdone"
			});
			var s = this.player.currentTime,
			o = d.m3u8src_v2(d.v.data.id, b);
			d.unitedTag = null;
			this.player.video.src = o;
			var l = this,
			q = 0;
			this.player.video.addEventListener("canplay",
			function() {
				1 === q ? g.log("XXXXXXXXXXXXXXXXXXXXX") : (q = 1, g.log("q2 nsrc=" + o), l.player.seek(s), g.log("q3"))
			});
			this.player.video.load();
			this.player.video.play()
		}
	};
	var wa = function(b, c) {
		this._handler = {};
		this.player = b;
		this._panel = document.createElement("div");
		this._panel.className = "x-recommend";
		this.init(c);
		this.request(c);
		window.relatedpanel = this;
		d.get("#x-player").appendChild(this._panel);
		this._panel.style.display = "box"
	};
	wa.prototype = {
		bindDynamicEvent: function() {
			var b = this._listinner.getElementsByClassName("x-item");
			this.bind_itemclick = d.bindAsEventListener(this, this.onItemClick);
			for (var c = 0; c < b.length; c++) d.addEventHandler(b[c], "click", this.bind_itemclick, !0)
		},
		onItemClick: function(b) {
			b = b.currentTarget.getAttribute("data-i");
			"x" == b ? this.replay() : this.player._reporter.sendRecommendLog(this.getReportParam(b))
		},
		init: function() {
			this._panel.innerHTML = "<div class=x-pages></div>";
			this._listinner = this._panel.getElementsByClassName("x-pages")[0]
		},
		request: function(b) {
			var c = {};
			c.vid = b.data.id;
			c.uid = b.data.video.userid;
			b.data.show && b.data.show.id && (c.sid = b.data.show.id);
			c.cate = b.data.video.category_id;
			c.site = "1";
			c.module = "2";
			b = b.data.controller.play_mode;
			c.pg = "1";
			c.pg = {
				normal: 1,
				show: 3,
				folder: 4
			} [b];
			"interior" == d.config.winType ? c.apptype = 12 : (c.apptype = 12, c.pg = 1);
			c.pl = 36;
			for (var e in d.initConfig.playlistconfig) c[e] = d.initConfig.playlistconfig[e];
			var i = this;
			u.jsonp({
				url: "https://ykrec.youku.com/video/packed/list.json?",
				data: c,
				success: function(b) {
					i.parseResponse(b)
				},
				fail: function() {}
			});
			this._apt = c.apptype;
			this._pg = c.pg;
			this._md = c.module
		},
		parseResponse: function(b) {
			this._info = b;
			this.buildPanel(this._info)
		},
		buildPanel: function(b) {
			var b = b.data,
			c = b.length;
			g.log("realted len = " + c);
			var e = [];
			e.push('<ul class="x-item" data-i="x"><li class="x-item-img"><img src="https://player.youku.com/h5player/img/replay.png"></li></ul>');
			for (var i = Math.floor((this._panel.offsetWidth - 60 + 16) / 166) * Math.floor((this._panel.offsetHeight - 120 + 12) / 97), i = (i > c ? c: i) - 1, i = 0 > i ? 0 : i, c = 0; c < i; c++) {
				var h = b[c].picUrl,
				s = b[c].title.substr(0, 20),
				o = "https://v.youku.com/v_show/id_" + b[c].codeId + ".html?from=",
				l = "y7",
				l = "interior" == d.config.winType ? l + ".2-1-": l + ".7-1-",
				l = l + d.v.data.video.category_id,
				l = l + ".4",
				l = l + ("." + (c + 1) + "-1"),
				l = l + ("." + this._apt + "-" + this._pg + "-" + this._md + "-" + c),
				o = o + l;
				g.log(o);
				"myoukucom" == d.initConfig.client_id && (o = "https://m.youku.com/smartphone/detail?vid=" + b[c].codeId);
				e.push('<ul class="x-item" data-i=' + c + '><li class="x-item-img"><img src=' + h + '></li><li class="x-item-info"><div class="x-item-title">' + s + '</div><div class="x-item-bg"></div></li><li class="x-item-url"><a href=' + o + ' target="_blank"></a></li><li class="x-item-loading"><div class="x-play-loading"></div></li></ul>')
			}
			this._listinner.innerHTML = e.join("");
			this.bindDynamicEvent();
			this.buildImgEvent()
		},
		getReportParam: function(b) {
			var c = {};
			c.pos = "" + b;
			c.sct = d.v.data.video.category_id;
			c.dct = this._info.data[b].dct;
			c.ord = this._info.ord;
			c.req_id = this._info.req_id;
			c.abver = this._info.ver;
			c.dma = this._info.data[b].dma;
			c.algInfo = this._info.data[b].algInfo;
			c.apt = this._apt;
			c.md = this._md;
			c.pg = this._pg;
			c.r = (new Date).getTime();
			c.vid = d.v.data.video.encodeid;
			c.uid = d.v.data.video.userid;
			1 == this._info.data[b].type ? c.dvid = this._info.data[b].id: c.dsid = this._info.data[b].id;
			c.sid = "";
			d.v.data.show && d.v.data.show.id && (c.sid = d.v.data.show.id);
			return c
		},
		buildImgEvent: function() {
			for (var b = this._listinner.getElementsByClassName("x-item-img"), c = 0; c < b.length; c++) d.addEventHandler(b[c], "error", d.bindAsEventListener(this, this.onLoadImgError)),
			d.addEventHandler(b[c], "abort", d.bindAsEventListener(this, this.onLoadImgError))
		},
		onLoadImgError: function(b) {
			g.log("img error");
			b = b.target;
			d.addClass(b.parentNode.parentNode, "x-no-pic");
			b.src = "https://player.youku.com/h5player/img/no_pic.png"
		},
		replay: function(b) {
			this.player.controls.rePlay(b)
		},
		onResize: function() {
			var b = this;
			setTimeout(function() {
				b.buildPanel(b._info)
			},
			500)
		}
	};
	var xa = function(b, c) {
		this._handler = {};
		this.player = b;
		this._showbtn = d.get(".x-playshow");
		this._showlist = d.get(".x-showlist");
		this.init(c);
		this._inner = this._showlist.getElementsByClassName("x-showlist-inner");
		this._bullet = this._showlist.getElementsByClassName("x-showlist-bullet");
		this.bindEvent()
	};
	xa.prototype = {
		init: function(b) {
			this._showlist.innerHTML = '<div class=x-showlist-inner><div class=x-showlist-hd></div><div class=x-showlist-bd></div><div class=x-showlist-ft style="display:none"></div><div class=x-mask></div></div>';
			this._slhd = this._showlist.getElementsByClassName("x-showlist-hd")[0];
			this._slbd = this._showlist.getElementsByClassName("x-showlist-bd")[0];
			this._slft = this._showlist.getElementsByClassName("x-showlist-ft")[0];
			this._slhd.innerHTML = "<label>\u9009\u96c6</label><div class=x-showlist-close></div>";
			this._closeHandle = this._slhd.getElementsByClassName("x-showlist-close")[0];
			if (b.data.videos) {
				for (var c = b.data.videos.list,
				e = ["<ul class=x-showlist-bullet>", "", "</ul>"], i = [], h = 0; h < c.length; h++) {
					var g = c[h],
					o = "https://v.youku.com/v_show/id_" + g.encodevid + ".html";
					d.v.folder && (o = o + "?f=" + d.v.folder.folderId);
					var l = "";
					g.encodevid == d.v.data.video.encodeid && (l = " class=selected");
					g = "<li" + l + "><a touchstart=\"this.parentNode.className='selected'\" href=" + o + ">" + g.title.substr(0, 20) + "</a></li>";
					i.push(g)
				}
				e[1] = i.join("");
				this._slbd.innerHTML = e.join("");
				e = "<div class=x-showlist-pages>;<span class=x-showlist-pre></span>;<ul>;;</ul>;<span class=x-showlist-next></span>".split(";");
				i = [];
				l = b.data.videos.previous ? parseInt(b.data.videos.previous.seq / 60) : 0;
				for (h = 0; h < (c.length - 1) / 60 + 1; h++) b = "",
				h == l && (b = " class=current"),
				g = "<li" + b + "><em>" + (h + 1) + "</em></li>",
				i.push(g);
				e[3] = i.join("");
				this._slft.innerHTML = e.join("")
			}
		},
		addEventListener: function(b, d) {
			this._handler[b] = d
		},
		removeEventListener: function(b) {
			this._handler[b] = null
		},
		dispatch: function(b) {
			b && this._handler[b.type] && (b._target = this, this._handler[b.type](b))
		},
		bindEvent: function() {
			this.bind_close = d.bindAsEventListener(this, this.hide);
			d.addEventHandler(this._closeHandle, "click", this.bind_close);
			this.bind_toggle = d.bindAsEventListener(this, this.toggle);
			d.addEventHandler(this._showbtn, "click", this.bind_toggle)
		},
		removeEvent: function() {
			d.removeEventHandler(this._closeHandle, "click", this.bind_close)
		},
		hide: function() {
			this._showbtn.className = this._showbtn.className.replace(/[\s]*pressed/g, "");
			d.hide(this._showlist)
		},
		show: function() {
			this._showbtn.className += " pressed";
			d.show(this._showlist)
		},
		showListBtn: function() {
			if (d.v.data.videos) {
				var b = d.v.data.videos.list;
				null == b || 1 >= b.length || d.show(this._showbtn)
			} else d.hide(this._showbtn)
		},
		hideListBtn: function() {
			if (d.v.data.videos) {
				var b = d.v.data.videos.list;
				null == b || 0 == b.length || (d.hide(this._showbtn), this.hide())
			}
		},
		toggle: function(b) {
			"block" != this._showlist.style.display ? (this.show(), this.player._reporter.sendUserActionReport("xshl", "c")) : this.hide();
			this.dispatch(b)
		},
		touchStart: function(b) {
			this._sx = b.targetTouches[0].clientX;
			this._sy = b.targetTouches[0].clientY;
			this._ex = this._sx;
			this._ey = this._ey
		},
		touchEnd: function() {},
		touchMove: function(b) {
			this._ex = b.targetTouches[0].clientX;
			this._ey = b.targetTouches[0].clientY;
			this._dx = this._ex - this._sx;
			this._dy = this._ey - this._sy;
			Math.abs(this._dx) > Math.abs(this._dy) || b.preventDefault()
		}
	};
	var ya = function(b) {
		this.player = b;
		this._handle = {};
		this._tips = d.get(".x-tips");
		d.hide(this._tips);
		this._tips.innerHTML = "<div class=x-tips-txt></div><div class=x-tips-close><a href=#><em>\u5173\u95ed</em></a></div><div class=x-tips-mask></div>";
		this._ptip = this._tips.getElementsByClassName("x-tips-txt")[0];
		this._ctip = this._tips.getElementsByClassName("x-tips-close")[0];
		null == j.getItem("youku_conf_skip") && j.setItem("youku_conf_skip", !0);
		this.bindEvent()
	};
	ya.prototype = {
		bindEvent: function() {
			d.addEventHandler(this._ctip, "click", d.bindAsEventListener(this, this.closeTip))
		},
		closeTip: function() {
			d.hide(this._tips);
			this.keepLastTime()
		},
		autoHide: function(b) {
			var d = this;
			setTimeout(function() {
				d.closeTip()
			},
			b)
		},
		keepLastTime: function() {},
		ignoreLastTime: function() {},
		isShowTimeTip: function() {
			var b = j.getItem("youku_keep_lasttime"),
			b = parseInt(b),
			d = j.getItem("youku_ignore_lasttime"),
			d = parseInt(d);
			return 3 <= b || 3 <= d ? !1 : !0
		},
		showLastTimeTip: function(b) {
			b = d.getTime(b);
			g.log("last = " + b); ! 1 != this.isShowTimeTip() && (this._ptip.innerHTML = "\u4f18\u9177\u8bb0\u5fc6\u60a8\u4e0a\u6b21\u64ad\u653e\u5230<span class=x-tips-time>" + b + "</span>, <a class=x-tip-timebegin href=#>\u4ece\u5934\u89c2\u770b</a>", this._playBegin = this._ptip.getElementsByClassName("x-tip-timebegin")[0], d.addEventHandler(this._playBegin, "click", d.bindAsEventListener(this, this.seekBegin)), d.show(this._tips), this.autoHide(5E3))
		},
		onSkipTail: function() {
			"true" == j.getItem("youku_conf_skip") ? (this._ptip.innerHTML = "\u5373\u5c06\u4e3a\u60a8\u8df3\u8fc7\u7247\u5c3e, <a class=x-tip-skipnoway href=#>\u4e0d\u518d\u8df3\u8fc7</a>", this._skipnowtail = this._ptip.getElementsByClassName("x-tip-skipnoway")[0], d.addEventHandler(this._skipnowtail, "click", d.bindAsEventListener(this, this.skipNoway))) : (this._ptip.innerHTML = "\u662f\u5426\u8df3\u8fc7\u7247\u5934\u7247\u5c3e? <a class=x-tip-skipalways href=#>\u59cb\u7ec8\u8df3\u8fc7</a>", this._skipalwtail = this._ptip.getElementsByClassName("x-tip-skipalways")[0], d.addEventHandler(this._skipalwtail, "click", d.bindAsEventListener(this, this.skipAlways)));
			d.show(this._tips);
			this.autoHide(1E4)
		},
		onSkipHead: function() {
			"true" == j.getItem("youku_conf_skip") ? (this._ptip.innerHTML = "\u5df2\u7ecf\u4e3a\u60a8\u8df3\u8fc7\u7247\u5934, <a class=x-tip-skipnoway href=#>\u4e0d\u518d\u8df3\u8fc7</a>", this._skipnow = this._ptip.getElementsByClassName("x-tip-skipnoway")[0], d.addEventHandler(this._skipnow, "click", d.bindAsEventListener(this, this.skipNoway))) : (this._ptip.innerHTML = "\u662f\u5426\u8df3\u8fc7\u7247\u5934\u7247\u5c3e? <a class=x-tip-skipalways href=#>\u59cb\u7ec8\u8df3\u8fc7</a>", this._skipalw = this._ptip.getElementsByClassName("x-tip-skipalways")[0], d.addEventHandler(this._skipalw, "click", d.bindAsEventListener(this, this.skipImediately)));
			d.show(this._tips);
			this.autoHide(5E3)
		},
		onUglyAdPlay: function() {
			this._ptip.innerHTML = "\u5c0a\u656c\u7684\u4f1a\u5458\uff0c\u56e0\u7248\u6743\u539f\u56e0\uff0c\u8bf7\u70b9\u51fb\u53f3\u4e0a\u89d2 \u5173\u95ed\u5e7f\u544a ";
			d.show(this._tips);
			var b = this;
			setTimeout(function() {
				d.hide(b._tips)
			},
			15E3)
		},
		closeUglyHint: function() {
			d.hide(this._tips)
		},
		skipImediately: function() {
			g.log("skip imediately");
			this.player._reporter.sendUserActionReport("xskh", "c");
			j.setItem("youku_conf_skip", !0);
			var b = parseInt((d.v.data.dvd || "").head) / 1E3;
			this.onSkipHead();
			this.player.seek(b);
			return ! 1
		},
		skipNoway: function() {
			this.player._reporter.sendUserActionReport("xnsk", "c");
			j.setItem("youku_conf_skip", !1);
			this._ptip.innerHTML = "\u8bbe\u7f6e\u6210\u529f";
			return ! 1
		},
		skipAlways: function() {
			this.player._reporter.sendUserActionReport("xask", "c");
			j.setItem("youku_conf_skip", !0);
			this._ptip.innerHTML = "\u8bbe\u7f6e\u6210\u529f";
			return ! 1
		},
		seekBegin: function() {
			this.player._reporter.sendUserActionReport("xseb", "c");
			d.hide(this._tips);
			this.ignoreLastTime();
			this.player.seek(0);
			return ! 1
		}
	};
	var Z = "1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),
	U = function(b, d, c) {
		this.player = b;
		this.v = d;
		this.sid = c;
		this.isSendedConsumeReport = !1;
		e.hd = this.getHDFlag();
		if (0 < K.length) for (b = 0; b < K.length; b++) this.sendUepReport(K[b].type, K[b].time);
		this.dimension = {
			w: document.getElementById("x-player").offsetWidth,
			h: document.getElementById("x-player").offsetHeight
		};
		this.screenDim = {
			w: screen.availWidth,
			h: screen.availHeight
		}
	};
	U.prototype = {
		sendRecommendLog: function(b) {
			e.Log("https://r.l.youku.com/recclick?" + t(b))
		},
		tsInit: function() {
			this.tsSn = null
		},
		sendTSLog: function(b) {
			null == this.tsSn && (this.tsSn = 0);
			var c = 5,
			c = 24 < this.tsSn ? 20 : 12 < this.tsSn ? 10 : 5,
			m = this;
			this.tstimer = setTimeout(function() {
				m.sendTSLog(60)
			},
			1E3 * c);
			if (61 == b) clearTimeout(this.tstimer),
			this.tstimer = null;
			else if (m.player.video.paused) return;
			if (0 == this.tsSn) this.tsSn++;
			else {
				var i = d.v.data;
				i.sid = d.videoInfo._sid;
				d.initConfig.tslogconfig = d.initConfig.tslogconfig || {};
				var h = {};
				this.rs && (h.rs = 1, this.rs = 0);
				h.vvid = i.sid;
				h.vid = i.id;
				h.cf = this.getHDFlag();
				h.cpt = this.player.currentTime ? Math.floor(this.player.currentTime) : 0;
				h.full = this.player.controls.fullscreenPanel.fullFlag() ? 1 : 0;
				h.lang = this.getLanguage();
				h.pc = 60 == b ? 0 : 1;
				h.clb = 0;
				h.iku = "m";
				h.pt = this.getPlayTime();
				h.sn = this.tsSn++;
				h.hi = c;
				h.uid = d.v.data.user.uid;
				h.r = this.signTS(h.vvid + h.vid + h.cpt + h.pt + h.sn);
				e.Log("https://p-log.ykimg.com/tslog?" + t(h));
				e.Log("https://yt.mmstat.com/yt/vp.vtslog?" + t(h))
			}
		},
		signTS: function(b) {
			if (null == b) return 0;
			for (var d = 0,
			c = b.length,
			e = 0; e < c; e++) d = 43 * d + b.charCodeAt(e),
			d %= 1E10;
			return d
		},
		getPlayTime: function() {
			var b = 0;
			return b = 24 < this.tsSn ? 180 + 20 * (this.tsSn - 24) : 12 < this.tsSn ? 60 + 10 * (this.tsSn - 12) : 5 * this.tsSn
		},
		tslogparse: function() {},
		sendTSErrorLog: function() {},
		getSubCategories: function(b) {
			for (var d = "",
			c = 0; c < b.length; c++) d += b[c].id + "|";
			return d.substring(0, d.length - 1)
		},
		getLanguage: function() {
			null == this.langMap && (this.langMap = {
				"default": 1,
				guoyu: 1,
				yue: 2,
				chuan: 3,
				tai: 4,
				min: 5,
				en: 6,
				ja: 7,
				kr: 8,
				"in": 9,
				ru: 10,
				fr: 11,
				de: 12,
				it: 13,
				es: 14,
				th: 15,
				po: 16,
				man: 17,
				baby: 18
			});
			return this.langMap[d.defaultLanguage || "default"]
		},
		getExtString: function(b) {
			var c = {
				iku: "m"
			};
			c.full = this.player.controls.fullscreenPanel.fullFlag();
			c.lang = this.getLanguage();
			c.num = b;
			c.ctp = 0;
			c.pc = 60 == b ? 0 : 1;
			c.clb = 0;
			c.ctype = "12";
			c.ev = "1";
			c.tk = e.userCache.token;
			c.oip = d.v.data.security.ip;
			c.isvip = d.v.data.user.vip ? "1": "0";
			c.paystate = this.getPayState();
			c.playstate = null == d.v.data.trial ? "1": "2";
			return encodeURI(t(c))
		},
		getPlayByType_: function(b) {
			var c = 0;
			62 == b && (c = 2);
			d.initConfig.vvlogconfig && d.initConfig.vvlogconfig.pb && (c = d.initConfig.vvlogconfig.pb);
			return c
		},
		getMaxFileType: function() {
			var b = n._videoInfo._videoSegsDic;
			return b.hd2 ? 2 : b.mp4 ? 1 : 0
		},
		getHDFlag: function() {
			if (null == this.player) return 0;
			var b = null,
			c = this.player.video.src; - 1 != c.indexOf("m3u8") ? (b = {
				flv: 0,
				flvhd: 0,
				mp4: 1,
				hd2: 2,
				hd3: 3
			},
			c = d.defaultVideoType) : b = {
				"030020": 4,
				"030004": 0,
				"030008": 1,
				"030080": 3
			};
			for (var e in b) if ( - 1 !== c.indexOf(e)) return b[e];
			return 0
		},
		getParentUrl: function() {
			var b = null;
			if (parent !== window) try {
				b = parent.location.href
			} catch(c) {
				b = document.referrer
			}
			return b
		},
		addClientDurationReport: function(b) {
			null == this.tsSn && (this.tsSn = 0);
			var c = 5,
			c = 24 < this.tsSn ? 20 : 12 < this.tsSn ? 10 : 5,
			m = this;
			this.ct_timer = setTimeout(function() {
				m.addClientDurationReport(60)
			},
			1E3 * c);
			if (61 == b) clearTimeout(this.ct_timer),
			this.ct_timer = null;
			else if (m.player.video.paused) return;
			if (0 != this.tsSn) {
				var i = d.v.data;
				i.sid = d.videoInfo._sid;
				d.initConfig.tslogconfig = d.initConfig.tslogconfig || {};
				var h = {};
				h.vvid = i.sid;
				h.vid = i.id;
				h.cf = this.getHDFlag();
				h.ctype = 12;
				h.cpt = this.player.currentTime ? Math.floor(this.player.currentTime) : 0;
				h.full = this.player.controls.fullscreenPanel.fullFlag() || 0;
				h.lang = this.getLanguage();
				h.pc = 60 == b ? 0 : 1;
				h.clb = this.player.currentTime ? Math.floor(this.player.currentTime) : 0;
				h.iku = d.initConfig.client_id || "m";
				h.pt = this.getPlayTime();
				h.sn = this.tsSn;
				h.hi = c;
				h.uid = d.v.data.user.uid;
				h.r = this.signTS(h.vvid + h.vid + h.cpt + h.pt + h.sn);
				e.Log("https://p-log.ykimg.com/acfunts?" + t(h))
			}
		},
		countBuffered: function() {
			var b, c;
			try {
				b = this.player.video.buffered.length,
				c = this.player.video.buffered.end(b - 1),
				alert(c)
			} catch(d) {
				c = this.player.currentTime ? Math.floor(this.player.currentTime) : 0
			}
			return c
		},
		addPlayerDurationReport: function(b) {
			var c = d.videoInfo;
			if (! (null == c || null == c._playListData)) {
				if (null == this.drtimer) {
					var m = this;
					this.drtimer = setInterval(function() {
						m.player.video.paused || m.addPlayerDurationReport(60)
					},
					6E4)
				}
				61 == b && (clearInterval(this.drtimer), this.drtimer = null);
				var i = {
					viewUserId: 0
				};
				i.sid = c._sid;
				i.videoOwnerId = d.v.data.video.userid;
				d.v.data.user.uid && (i.viewUserId = d.v.data.user.uid);
				i.videoid = d.v.data.id;
				i.ct = d.v.data.video.category_letter_id;
				i.cs = this.getSubCategories(d.v.data.video.subcategories);
				i.number = b;
				i.rnd = ((new Date).getTime() - c.abstarttime) / 1E3;
				c._playListData.show ? (i.showid_v2 = c._playListData.show.id, i.showid_v3 = c._playListData.show.encodeid, i.show_videotype = c._playListData.show.video_type, i.stg = c._playListData.show.stage, i.Copyright = c._playListData.show.copyright) : (i.showid_v2 = "", i.Copyright = "");
				i.Tid = "";
				i.hd = 0;
				i.ikuflag = "m";
				i.hd = {
					flv: 0,
					flvhd: 0,
					mp4: 1,
					hd2: 2,
					hd3: 3
				} [d.defaultVideoType];
				i.winType = d.WIN_TYPE;
				i.mtype = $();
				i.totalsec = c.totalTime;
				i.fullflag = this.player.controls.fullscreenPanel.fullFlag();
				i.playComplete = 0;
				61 == b && (i.playComplete = 1);
				59 == b && (i.referUrl = (d.initConfig.vvlogconfig || "").rurl, i.url = encodeURIComponent(window.location.href), i.starttime = 0);
				i.currentPlayTime = parseInt(this.player.currentTime || 0);
				i.continuationPlay = 0;
				i.pid = d.initConfig.client_id;
				i.timestamp = (new Date).getTime();
				i.ctype = "12";
				i.ev = "1";
				i.tk = e.userCache.token;
				i.oip = d.v.data.security.ip;
				i.isvip = d.v.data.user.vip ? "1": "0";
				i.paystate = this.getPayState();
				i.playstate = null == d.v.data.trial ? "1": "2";
				i.pvid = (d.initConfig.vvlogconfig || "").pvid || (window.UrchinAplus && window.UrchinAplus._yVvlogInfo() || "").pvid;
				e.Log("https://stat.youku.com/player/addPlayerDurationReport?" + t(i));
				delete i.pvid;
				if (window.UrchinAplus && window.UrchinAplus._yVvlogInfo) b = window.UrchinAplus._yVvlogInfo();
				else {
					var b = {},
					c = this.cookie("__ysuid"),
					h = this.cookie("_l_lgi"),
					g = this.cookie("__arpvid"),
					o = this.cookie("__arycid"),
					l = this.cookie("__ayft"),
					j = this.cookie("__ayscnt"),
					n = this.cookie("__aysid"),
					r = this.cookie("__ayvstp"),
					p = this.cookie("__ayspstp");
					c && (b.pc_i = c);
					h && (b.pc_u = h);
					g && (b.rvpvid = g);
					o && (b.rycid = o);
					l && (b.yvft = l);
					j && (b.vsidc = j);
					n && (b.seid = n);
					r && (b.vstp = r);
					p && (b.svstp = p)
				}
				e.Log("https://yt.mmstat.com/yt/vp.vdoview?" + t(i) + "&" + t(b))
			}
		},
		addPlayerStaticReport: function() {
			var b = {};
			b.videoid = this.v.data.id;
			this.v.data.token && (b.t = this.v.data.token.vv);
			b.totalsec = parseInt(this.v.data.video.seconds);
			b.ikuflag = "m_" + this.getShowFlag();
			b.url = encodeURIComponent(this.getParentUrl() ? this.getParentUrl() : window.location.href);
			b.fullflag = this.player.controls.fullscreenPanel.fullFlag();
			b.source = "video";
			b.referer = (d.initConfig.vvlogconfig || "").rurl;
			b.sid = this.sid;
			b.uid = this.v.data.user.uid;
			for (var c = b.t,
			m = !1,
			i = ""; ! m;) i = Y(20),
			"00" == Fa(c + i).substring(0, 2) && (m = !0);
			b.h = i;
			b.totalseg = d.pieceLength();
			b = t(b);
			e.Log("https://stat.youku.com/player/addPlayerStaticReport?" + b)
		},
		sendUserActionReport: function(b, c, m) {
			c = {
				t: 1002,
				e: b,
				v: c
			};
			c.d = L($());
			var i = {
				v: "h5player",
				vid: d.v.data.id,
				ssid: d.videoInfo._sid,
				ct: d.v.data.video.category_letter_id,
				cs: d.v.data.video.subcategories,
				uid: 0
			};
			d.v.data.user && (i.uid = d.v.data.user.uid);
			i.sid = "";
			d.v.data.show && (i.sid = d.v.data.show.id);
			i.tc = this.player.currentTime || 0;
			i.w = d.get("#x-player").offsetWidth;
			i.h = d.get("#x-player").offsetHeight;
			i.f = this.player.video.fullscreenchange ? "on": "off";
			i.q = this.player.getQuality();
			i.ver = "1.0.0";
			for (var h in m) i[h] = m[h];
			c.x = L(t(i));
			m = t(c);
			if ("xre" == b) this.checkPlayerResize("https://e.stat.ykimg.com/red/ytes.php?", m);
			else {
				if ("xenfs" == b || "xexfs" == b) {
					this._giveupReTag = !0;
					var g = this;
					setTimeout(function() {
						g._giveupReTag = false
					},
					800)
				}
				c.pc_i = this.cookie("__ysuid") || 0;
				c.cna = this.cookie("cna") || 0;
				c.pc_u = d.v.data.user.uid || 0;
				c.rurl = (d.initConfig.vvlogconfig || "").rurl;
				c.url = encodeURIComponent(window.location.href);
				c.jurl = "";
				e.Log("https://yt.mmstat.com/yt/vp.event?" + t(c));
				e.Log("https://p-log.ykimg.com/event?" + m)
			}
		},
		checkScreenRotate: function(b, c) {
			var d = screen.availWidth,
			i = screen.availHeight;
			g.log("<hr/>rota w,h = " + d + "," + i);
			if (this.screenDim.w != d || this.screenDim.h != i) this.screenDim.w = d,
			this.screenDim.h = i,
			g.log("<b><font color=red>rotate</font></b>"),
			e.Log(b + c)
		},
		checkPlayerResize: function(b, c) {
			if (!0 === this._giveupReTag) g.log("give up xre after enfs or exfs");
			else {
				var d = document.getElementById("x-player");
				this._resizeList = this._resizeList || [];
				this._resizeList.push({
					str: c,
					time: (new Date).getTime(),
					w: d.offsetWidth,
					h: d.offsetHeight
				});
				var i = this;
				setTimeout(function() {
					if (0 != i._resizeList.length) {
						for (var c = i._resizeList[0].time, d = 0; d < i._resizeList.length; d++) {
							var f = i._resizeList[d].w,
							m = i._resizeList[d].h,
							g = i._resizeList[d].time;
							if (f != i.dimension.w || m != i.dimension.h) i.dimension.w = f,
							i.dimension.h = m,
							(800 < g - c || d == i._resizeList.length - 1) && e.Log(b + i._resizeList[d].str)
						}
						i._resizeList = []
					}
				},
				1E3)
			}
		},
		cookie: function(b, c, d, e) {
			"string" == typeof b && (e = d, d = c, c = b, b = window);
			if (void 0 !== d) {
				var e = e || {},
				h;
				h = "";
				e.expires && (e.expires.constructor == Date ? h = e.expires: (h = new Date, h.setTime(h.getTime() + 864E5 * e.expires)), h = "; expires=" + h.toGMTString());
				var g = e.path ? "; path=" + e.path: "",
				j = e.domain ? "; domain=" + e.domain: "",
				e = e.secure ? "; secure": "";
				b.document.cookie = [c, "=", encodeURIComponent(d), h, g, j, e].join("")
			} else return (d = b.document.cookie.match(RegExp("(?:\\s|^)" + c + "\\=([^;]*)"))) ? decodeURIComponent(d[1]) : null
		},
		sendUepReport: function(b, c, m) { ! 1 !== m && 10 < 100 * Math.random() || (m = "", m = e.isIPAD ? "xplayer_ipad": e.isIPHONE ? "xplayer_iphone": "xplayer_android", b = {
				m: m,
				hd: this.getHDFlag(),
				t: b,
				s: c,
				u: encodeURIComponent(this.getParentUrl() ? this.getParentUrl() : window.location.href),
				p: 2,
				v: d.videoInfo._sid,
				ct: d.v.data.video.category_letter_id,
				cs: d.v.data.video.subcategories
			},
			e.Log("https://v.l.youku.com/uep?" + t(b)))
		},
		sendLoadedTime: function(b) {
			g.log("loaded cost = " + b);
			this.sendUepReport("videoload", b)
		},
		sendComScoreReport: function(b) {
			if (!this._hasComScore) {
				for (var c = document.getElementsByTagName("script"), e = 0; e < c.length; e++) if ( - 1 !== c[e].src.indexOf("scorecardresearch.com/beacon.js")) {
					this._hasComScore = !0;
					break
				} ! 0 !== this._hasComScore && (c = document.createElement("script"), e = document.getElementsByTagName("script")[0], c.async = !0, c.src = ("https:" == document.location.protocol ? "https://sb": "//b") + ".scorecardresearch.com/beacon.js", e.parentNode.insertBefore(c, e));
				this._hasComScore = !0
			}
			var i = setInterval(function() {
				if ("undefined" != typeof COMSCORE) {
					clearInterval(i);
					try {
						COMSCORE.beacon({
							c1: 1,
							c2: 7293931,
							c3: b,
							c6: d.v.data.video.category_id
						})
					} catch(c) {
						g.log("beacon exception")
					}
				}
			},
			500)
		},
		sendIResearchReport: function() {},
		sendThirdPartyReport: function(b) {
			"xplayer_h5" == b && (b = e.isAndroid ? "xplayer_h5_android": e.isIPAD ? "xplayer_h5_ipad": "xplayer_h5_other");
			this.sendComScoreReport(b);
			this.sendIResearchReport(b)
		},
		sendClientConsumeReport: function() { ! 0 != this.isSendedConsumeReport && (null != d.config.partner_config && 1 == d.config.partner_config.status && null != d.config.partner_config.token && "" != d.config.partner_config.token) && (this.isSendedConsumeReport = !0, e.Log("https://api.youku.com/players/consume.json?token=" + d.config.partner_config.token))
		},
		getPayState: function() {
			var b = 0;
			d.v.data.show && "vod" == d.v.data.show.pay_type && (b = 1);
			d.v.data.show && "mon" == d.v.data.show.pay_type && (b = 2);
			return b
		},
		getShowFlag: function() {
			var b = "m";
			return b = d.v.data.show ? b + "1": b + "0"
		}
	};
	var za = function(b, c) {
		this._handler = {};
		this.player = b;
		this.controls = b.controls;
		this.adplugin = this.controls._pauseAdPlugin;
		this.info = c.data.info;
		this.adjustIMGWH();
		this.adpause = d.get(".x-ad-pause");
		this.info.VAL[0].VT = parseInt(this.info.VAL[0].VT);
		2 != this.info.VAL[0].VT && (this.init(), this.bindEvent(), this._adreporter = new P(this, c.data));
		this.loadVC()
	};
	za.prototype = {
		addEventListener: function(b, c) {
			this._handler[b] = c
		},
		removeEventListener: function(b) {
			this._handler[b] = null
		},
		dispatch: function(b) {
			b && this._handler[b.type] && (b._target = this, this._handler[b.type](b))
		},
		bindEvent: function() {
			d.addEventHandler(this.adcontent, "click", d.bindAsEventListener(this, this.adClick));
			d.addEventHandler(this.adclose, "click", d.bindAsEventListener(this, this.hide));
			var b = this;
			window.addEventListener("orientationchange",
			function() {
				setTimeout(function() {
					d.isLandScape() || b.hide()
				},
				1E3)
			})
		},
		adjustIMGWH: function() {
			var b = this.info.VAL[0].W,
			c = this.info.VAL[0].H,
			e = (d.get("#x-player").offsetHeight - 110) / c;
			if (1 < e || 0 >= e) e = 1;
			this.info.VAL[0].W = b * e;
			this.info.VAL[0].H = c * e;
			g.log("pause img adjusted w = " + this.info.VAL[0].W + " h = " + this.info.VAL[0].H)
		},
		init: function() {
			this.adpause.innerHTML = "<div class=x-pause-content></div><div class=x-pause-close></div><div class=x-pause-prompt></div>";
			this.adcontent = this.adpause.getElementsByClassName("x-pause-content")[0];
			this.adcontent.innerHTML = " <img class=x-pause-img width=" + this.info.VAL[0].W + " height=" + this.info.VAL[0].H + " src=" + this.info.VAL[0].RS + ">";
			this.adclose = this.adpause.getElementsByClassName("x-pause-close")[0];
			this.adimg = this.adcontent.getElementsByClassName("x-pause-img")[0];
			this.adimg.style.height = this.info.VAL[0].H + "px";
			this.adimg.style.width = this.info.VAL[0].W + "px";
			this.adpause.style.marginLeft = "-" + this.info.VAL[0].W / 2 + "px";
			this.adpause.style.marginTop = "-" + this.info.VAL[0].H / 2 + "px"
		},
		hide: function() {
			d.hide(this.adpause)
		},
		play: function() {
			2 != this.info.VAL[0].VT && (d.show(this.adpause), this._adreporter.sendSUS())
		},
		adClick: function() {
			window.open(this.info.VAL[0].CU, null);
			this._adreporter && this._adreporter.sendCUM()
		},
		loadVC: function() { (2 == this.info.VAL[0].VT || 1 == this.info.VAL[0].VT) && F(this.info.VAL[0].VC, "js")
		}
	};
	var Aa = function(b, c) {
		this._handler = {};
		this._adinfo = b;
		this._info = {
			VAL: []
		};
		for (var d in b)"VAL" != d && (this._info[d] = b[d]);
		this._vt2nodes = c || []
	};
	Aa.prototype = {
		addEventListener: function(b, c) {
			this._handler[b] = c
		},
		removeEventListener: function(b) {
			this._handler[b] = null
		},
		dispatch: function(b) {
			b && this._handler[b.type] && (b._target = this, this._handler[b.type](b))
		},
		buildAdRS: function() {
			for (var b = "https://pl-ali.youku.com/playlist/m3u8?",
			c = {},
			m = {},
			i = this._adinfo.VAL,
			h = 0; h < i.length; h++) {
				var g = i[h];
				m["a" + (h + 1)] = g.VID + "_" + g.VQT
			}
			m.v = d.v.data.id + "_" + d.defaultVideoType;
			var h = encodeURI,
			g = [],
			j;
			for (j in m) g.push('"' + j + '":"' + m[j] + '"');
			m = "{" + g.join(",") + "}";
			c.ids = h(m);
			c.ts = parseInt((new Date).getTime() / 1E3);
			d.password && (c.password = d.password);
			d.password && (d.initConfig.client_id && d.config.partner_config && 1 == d.config.partner_config.status && 1 == d.config.partner_config.passless) && (c.client_id = d.initConfig.client_id);
			m = [];
			for (j = 0; j < i.length; j++) m.push(i[j].VID);
			m.push(d.v.data.id);
			i = encodeURIComponent(L(N(O(d.mk.a4 + "poz" + e.userCache.a2, [19, 1, 4, 7, 30, 14, 28, 8, 24, 17, 6, 35, 34, 16, 9, 10, 13, 22, 32, 29, 31, 21, 18, 3, 2, 23, 25, 27, 11, 20, 5, 15, 12, 0, 33, 26]).toString(), e.userCache.sid + "_" + m.join("") + "_" + e.userCache.token)));
			c.ep = i;
			c.sid = e.userCache.sid;
			c.token = e.userCache.token;
			c.ctype = "12";
			c.ev = "1";
			c.oip = d.v.data.security.ip;
			return b += t(D(c, d.getUCParam(d.v.data.id)))
		},
		run: function() {
			if (! (null == this._adinfo || null == this._adinfo.VAL || 0 == this._adinfo.VAL.length)) {
				for (var b = {
					SUS: [],
					SU: [],
					SUE: [],
					CU: [],
					CUM: [],
					VTVC: []
				},
				c = 0, d = 0; d < this._adinfo.VAL.length; d++) {
					var e = this._adinfo.VAL[d];
					if (! (null == e.VID || null == e.VQT)) {
						null == e.SU && (e.SU = []);
						null == e.SUE && (e.SUE = []);
						if (0 == d) b.SUS = e.SUS || [];
						else for (var h = 0; h < e.SUS.length; h++) b.SU.push({
							T: c,
							U: e.SUS[h].U
						});
						for (h = 0; h < e.SU.length; h++) {
							var g = e.SU[h].T + c;
							b.SU.push({
								T: g,
								U: e.SU[h].U
							})
						}
						if (d == this._adinfo.VAL.length - 1) b.SUE = e.SUE;
						else for (h = 0; h < e.SUE.length; h++) g = c + e.AL,
						b.SU.push({
							T: g,
							U: e.SUE[h].U
						});
						c += e.AL;
						b.CU.push({
							T: c,
							U: e.CU
						});
						b.CUM.push({
							T: c,
							CUM: e.CUM
						});
						1 == parseInt(e.VT) && b.VTVC.push({
							U: e.VC,
							T: c
						});
						if (0 != this._vt2nodes.length) for (h = 0; h < this._vt2nodes.length; h++) e = this._vt2nodes[h].VC,
						g = this._vt2nodes[h].pos_,
						-1 == g && b.VTVC.push({
							U: e,
							T: 0
						}),
						g == d && b.VTVC.push({
							U: e,
							T: c
						})
					}
				}
				b.AL = c;
				b.RS = this.buildAdRS();
				this._info.VAL.push(b);
				this._info.src = b.RS
			}
			this.dispatch({
				type: R,
				data: this._info
			})
		}
	};
	var V = function(b, c) {
		this._handler = {};
		this.player = b;
		this.video = this.player.video;
		this.controls = this.player.controls;
		this._adplugin = this.player._adplugin;
		this._adplugin.adplayer = this;
		this.video.preload = "none";
		this.video.src = c.data.urls[0];
		g.log("ad src=" + this.video.src);
		this.video.style.display = "block";
		this._addata = c.data;
		this._addata.curnum = 0;
		this._playTag = [];
		this.bindAdEvent();
		this._adreporter = new P(this, this._addata)
	};
	V.prototype = {
		addEventListener: function(b, c) {
			this._handler[b] = c
		},
		removeEventListener: function(b) {
			this._handler[b] = null
		},
		dispatch: function(b) {
			b && this._handler[b.type] && (b._target = this, this._handler[b.type](b))
		},
		bindAdEvent: function() {
			this.bind_fadtoplay = d.bindAsEventListener(this, this.onPlayClick);
			this.bind_fadplay = d.bindAsEventListener(this, this.onAdPlay);
			this.bind_fadended = d.bindAsEventListener(this, this.onAdEnded);
			this.bind_faderror = d.bindAsEventListener(this, this.onAdError);
			this.bind_fadpause = d.bindAsEventListener(this, this.onAdPause);
			this.bind_fadsuspend = d.bindAsEventListener(this, this.onAdSuspend);
			this.bind_fadstalled = d.bindAsEventListener(this, this.onAdStalled);
			this.bind_fadwaiting = d.bindAsEventListener(this, this.onAdWaiting);
			this.bind_fadloadedmetadata = d.bindAsEventListener(this, this.onAdLoadedMetaData);
			this.bind_fadtimeupdate = d.bindAsEventListener(this, this.onAdTimeUpdate);
			d.addEventHandler(this.video, "play", this.bind_fadplay);
			d.addEventHandler(this.video, "ended", this.bind_fadended);
			d.addEventHandler(this.video, "error", this.bind_faderror);
			d.addEventHandler(this.video, "pause", this.bind_fadpause);
			d.addEventHandler(this.video, "suspend", this.bind_fadsuspend);
			d.addEventHandler(this.video, "stalled", this.bind_fadstalled);
			d.addEventHandler(this.video, "waiting", this.bind_fadwaiting);
			d.addEventHandler(this.video, "loadedmetadata", this.bind_fadloadedmetadata);
			d.addEventHandler(this.video, "timeupdate", this.bind_fadtimeupdate);
			this.shadow = this.controls.buttons.shadow;
			this.videobtn = this.controls.buttons.videobtn;
			d.addEventHandler(this.videobtn, "click", this.bind_fadtoplay, !0)
		},
		removeAdEvent: function() {
			d.removeEventHandler(this.video, "play", this.bind_fadplay);
			d.removeEventHandler(this.video, "ended", this.bind_fadended);
			d.removeEventHandler(this.video, "error", this.bind_faderror);
			d.removeEventHandler(this.video, "pause", this.bind_fadpause);
			d.removeEventHandler(this.video, "suspend", this.bind_fadsuspend);
			d.removeEventHandler(this.video, "stalled", this.bind_fadstalled);
			d.removeEventHandler(this.video, "waiting", this.bind_fadwaiting);
			d.removeEventHandler(this.video, "timeupdate", this.bind_fadtimeupdate);
			d.removeEventHandler(this.video, "loadedmetadata", this.bind_fadloadedmetadata);
			d.removeEventHandler(this.videobtn, "click", this.bind_fadtoplay, !0)
		},
		onPlayClick: function() {
			this.video.play()
		},
		checkVTVC: function(b) {
			var c = this._addata.vtvc;
			if (! (null == c || 0 === c.length)) for (var d = 0; d < c.length; d++) {
				var e = c[d];
				e.pos_ == b - 1 && F(e.VC, "js")
			}
		},
		play: function() {
			this.checkVTVC(0);
			this.video.load();
			this.video.play()
		},
		leftSecond: function() {
			for (var b = this._addata.curnum,
			c = this._addata.seconds.length,
			d = this._addata.seconds[b] - this.video.currentTime, b = b + 1; b < c; b++) d += this._addata.seconds[b];
			return parseInt(d)
		},
		clearTimer: function() {
			clearInterval(this._checkTimer);
			this._checkTimer = null
		},
		checkPause: function() {
			if (!this._checkTimer) {
				var b = this;
				this._timelist = [];
				this._checkTimer = setInterval(function() {
					if (b.video.paused) b.onAdPause();
					else b._timelist.push(b.video.currentTime),
					3 <= b._timelist.length && (1 > Math.abs(b._timelist[0] - b._timelist[2]) && (g.log("<b>ad unexpected pause</b>"), b.video.play(), 0 == b.leftSecond() && (g.log("<b>exception left = 0 </b>"), b.onAdEnded())), b._timelist = [])
				},
				1E3)
			}
		},
		onAdPlay: function() {
			this.checkPause();
			var b = this.controls.container.poster;
			d.hide(this.controls.buttons.videobtn);
			d.hide(b);
			d.hide(d.get(".x-video-info"));
			this.video.style.display = "block";
			b = this._addata.curnum;
			g.log("left=" + this.leftSecond() + " curtotal=" + this._addata.seconds[b] + " curtime=" + this.video.currentTime);
			this._adplugin.setLeftSecond(this.leftSecond());
			var c = this;
			setTimeout(function() {
				g.log("ad media timeout check begin = " + c._adBegin);
				c._adBegin || (c.removeAdEvent(), c._adplugin.hide(), c._adplugin.reportTime("advideo", -1, !1), c.dispatch({
					type: B,
					data: !0
				}))
			},
			1E4);
			this._playTag[b] || (this._playTag[b] = !0, this._adfirsttu = !1, this._adplugin.recordTime("advideo"), j.appendItem("phase", "adplay"))
		},
		uglyClose: function() {
			this.video.src = "";
			this.video.load();
			this.video.play()
		},
		onAdError: function() {
			this.checkVTVC(this._addata.curnum + 1);
			this.removeAdEvent();
			this._adplugin.hide();
			this._adplugin.reportTime("advideo", -1, !1);
			this.dispatch({
				type: B,
				data: !0
			})
		},
		onAdEnded: function(b) {
			g.log("ad ended");
			this._adreporter.sendSUE();
			this.checkVTVC(this._addata.curnum + 1);
			if (this._addata.curnum < this._addata.urls.length - 1) this.onMiddleAdEnded(b);
			else this.removeAdEvent(),
			this._adplugin.hide(),
			this.clearTimer(),
			this.dispatch({
				type: E,
				data: !0
			}),
			j.appendItem("phase", "adend")
		},
		onMiddleAdEnded: function() {
			g.log("onMiddleAdEnded");
			this._pauseLeftSec = !0;
			var b = this;
			setTimeout(function() {
				b._pauseLeftSec = !1
			},
			1E3);
			this._addata.curnum++;
			this.video.src = this._addata.urls[this._addata.curnum];
			this.video.load();
			this.video.play();
			this._adBegin = !1
		},
		onAdPause: function() {
			this.player.video.ended || (d.show(this.controls.buttons.videobtn), d.hide(this.controls.buttons.shadow))
		},
		onAdSuspend: function() {
			g.log("<font color=red>ad suspend</font>")
		},
		onAdStalled: function() {
			g.log("<font color=red>ad stalled</font>")
		},
		onAdWaiting: function(b) {
			this.controls.onWaiting(b)
		},
		onAdTimeUpdate: function() {
			d.hide(this.controls.buttons.loading);
			this._adBegin = !0;
			d.hide(this.controls.buttons.loading);
			this._pauseLeftSec || this._adplugin.setLeftSecond(this.leftSecond());
			this._adreporter.sendSU(this.video.currentTime);
			0.5 <= this.video.currentTime && this._adplugin.show();
			this._adfirsttu || (this._adfirsttu = !0, this._adreporter.sendSUS(), this._adreporter.sendVC(), this._adplugin.reportTime("advideo"), e.isNeedAdrTrick() && e.adrInvalidPauseCheck(this.video), 0 === this._adplugin.SKIP && this.dispatch({
				type: J
			}))
		},
		onAdLoadedMetaData: function() {
			this._adBegin = !0
		},
		onAdClick: function() {
			this.video.pause();
			this._adreporter.sendCUM();
			var b = this._addata,
			b = b.info.VAL[b.curnum].CU;
			g.log("click cu=" + b);
			window.open(b, "", "", !1)
		}
	};
	E = "adend";
	B = "aderror";
	R = "frontAdinfoadapterok";
	J = void 0;
	var W = function(b, c, e) {
		this._handler = {};
		this.player = b;
		this.sid = e;
		this._advids = [];
		this._adsecs = [];
		this._adsrcs = [];
		this._vid = c.data.video.encodeid;
		this._advert = d.get(".x-advert");
		this._adskip = this._advert.getElementsByClassName("x-advert-skip")[0];
		this._adcount = this._advert.getElementsByClassName("x-advert-countdown")[0];
		this._adknowdet = this._advert.getElementsByClassName("x-advert-detail")[0];
		this.init(c);
		this.bindEvent()
	};
	W.prototype = {
		init: function(b) {
			this.initRequestParam(b);
			this._adskipTxt = this._adskip.getElementsByClassName("x-advert-txt")[0];
			this._adskipTxt.innerHTML = "\u8df3\u8fc7\u5e7f\u544a";
			this._adcountTxt = this._adcount.getElementsByClassName("x-advert-txt")[0];
			this._adcountTxt.innerHTML = "\u5e7f\u544a <span class=x-advert-sec></span> \u79d2";
			this._adsec = this._adcountTxt.getElementsByClassName("x-advert-sec")[0]
		},
		getSubCategories: function(b) {
			for (var c = "",
			d = 0; d < b.length; d++) c += b[d].id + "|";
			return c.substring(0, c.length - 1)
		},
		initRequestParam: function(b) {
			var c = {
				site: 1,
				p: 0,
				vl: parseInt(b.data.video.seconds),
				fu: 0,
				ct: b.data.video.category_letter_id,
				cs: this.getSubCategories(b.data.video.subcategories),
				d: 0,
				paid: b.data.show ? b.data.show.pay: 0,
				s: b.data.show ? b.data.show.id: 0,
				sid: this.sid,
				td: b.data.video.source ? b.data.video.source: 0,
				v: b.data.id,
				vip: b.data.user.vip ? 1 : 0,
				wintype: "xplayer_m3u8",
				u: b.data.video.userid,
				bt: e.isPad ? "pad": "phone",
				os: e.isMobileIOS ? "ios": "Android",
				rst: e.isMobileIOS ? "m3u8": "3gphd",
				tict: 0,
				aw: "w",
				vs: "1.0"
			};
			null != d.config.partner_config && (c.partnerid = d.initConfig.client_id, c.atm = d.config.partner_config.atm);
			for (var g in d.initConfig.adconfig) c[g] = d.initConfig.adconfig[g];
			this._param = c;
			this._ti = encodeURIComponent(b.data.video.title);
			this._k = encodeURIComponent((b.data.video.tags || []).join("|"));
			this.loadPartnerParam()
		},
		loadPartnerParam: function() {},
		partnerParse: function() {},
		initRequestParam_: function(b) {
			var c = {
				ct: b.data.video.category_letter_id,
				cs: b.data.video.subcategories,
				v: b.data.id,
				t: parseInt(b.data.video.seconds),
				u: b.data.video.userid,
				fileid: "todo",
				winType: "xplayer_m3u8",
				partnerid: d.config.partnerId,
				sid: this.sid,
				k: "",
				td: "todo"
			};
			c.s = b.data.show ? b.data.show.id: "";
			b.user && (c.vip = b.data.user.vip ? 1 : 0);
			c.paid = b.data.show ? b.data.show.pay: 0;
			for (var e in d.initConfig.adconfig) c[e] = d.initConfig.adconfig[e];
			this._param = c
		},
		bindEvent: function() {
			var b = this;
			this.fSkipAd = function() {
				b.adplayer.video.pause();
				window.open("https://cps.youku.com/redirect.html?id=000002bf", "", "", !1)
			};
			this._adskip.addEventListener("click", this.fSkipAd, !1);
			this._adknowdet.addEventListener("click",
			function() {
				g.log("detail clicked");
				b.adplayer.onAdClick("")
			},
			!1)
		},
		addEventListener: function(b, c) {
			this._handler[b] = c
		},
		removeEventListener: function(b) {
			this._handler[b] = null
		},
		dispatch: function(b) {
			b && this._handler[b.type] && (b._target = this, this._handler[b.type](b))
		},
		show: function() {
			d.show(this._advert)
		},
		hide: function() {
			d.hide(this._advert)
		},
		setLeftSecond: function(b) {
			g.log(b);
			this._adsec && (this._adsec.innerText = b)
		},
		splitVTVC: function(b) {
			g.log("split adinfo vt vc");
			this._vtvc = [];
			var c = {},
			d;
			for (d in b)"VAL" != d && (c[d] = b[d]);
			c.VAL = [];
			b = b.VAL;
			for (d = 0; d < b.length; d++) 2 === parseInt(b[d].VT) ? (b[d].pos_ = d - 1 - this._vtvc.length, this._vtvc.push(b[d])) : null == b[d].RS || ("" == b[d].RS.trim() || null == b[d].VID || null == b[d].VQT) || c.VAL.push(b[d]);
			return c
		},
		buildTestData: function() {
			return {
				VAL: []
			}
		},
		checkSkip: function(b) {
			b && 0 === parseInt(b.SKIP) && (d.hide(this._adskip), this.SKIP = 0)
		},
		adParseUnited: function(b) {
			this.checkSkip(b);
			j.appendItem("phase", "adinfo");
			this.reportTime("adinfo");
			b && b.VAL && (g.log("<b>before split val length =  " + b.VAL.length + "</b>"), b = this.splitVTVC(b), g.log("<b>after : val length =  " + b.VAL.length + "</b>"));
			if (null == b || null == b.VAL || 0 == b.VAL.length) b = {
				VAL: []
			},
			this.dispatch({
				type: "unitedfrontadinfook",
				data: {
					info: {
						VAL: []
					},
					vtvc: this._vtvc || []
				}
			});
			else {
				var b = new Aa(b, this._vtvc),
				c = this;
				b.addEventListener(R,
				function(b) {
					g.log("ad info adapter ok");
					c.dispatch({
						type: "unitedfrontadinfook",
						data: {
							info: b.data,
							vtvc: c._vtvc || []
						}
					})
				});
				b.run()
			}
		},
		adParse: function(b) {
			this.checkSkip(b);
			j.appendItem("phase", "adinfo");
			this.reportTime("adinfo");
			if (b && b.VAL) for (var b = this.splitVTVC(b), c = b.VAL, d = 0; d < c.length; d++) this._adsrcs.push(c[d].RS),
			this._adsecs.push(parseInt(c[d].AL));
			g.log("frontad len =" + this._adsrcs.length);
			this.dispatch({
				type: "frontAdinfook",
				data: {
					ids: this._advids || [],
					urls: this._adsrcs,
					seconds: this._adsecs,
					info: b,
					vtvc: this._vtvc || []
				}
			})
		},
		buildPauseData: function() {
			return adinfo = {
				P: 10,
				VAL: []
			}
		},
		adParsePause: function(b) {
			g.log("<b> ad parse pause </b>");
			j.appendItem("phase", "pauseadinfo");
			this.reportTime("adinfo");
			null == b || null == b.VAL || 0 == b.VAL.length || 10 != b.P ? this.dispatch({
				type: "pauseAdinfoerror"
			}) : (g.log("<b>pause ad len = " + b.VAL.length + "</b>"), this.dispatch({
				type: "pauseAdinfook",
				data: {
					info: b
				}
			}))
		},
		frontAd: function() {
			this._param.fu = this.player.controls.fullscreenPanel.fullFlag() ? 1 : 0;
			this._param.p = 7;
			var b = this;
			u.jsonp({
				url: "https://mf.atm.youku.com/mf?",
				data: D(this._param, {
					ti: this._ti,
					k: this._k
				}),
				time: 8E3,
				success: function(c) {
					e.isIPAD ? (g.log("<font color=red> new m3u8 api</font>"), d.OLD_M3U8 = !1, b.adParseUnited(c)) : b.adParse(c)
				},
				fail: function() {
					g.log("adinfo timeout");
					b.reportTime("adinfo", -1);
					b.dispatch({
						type: "frontAdinfotimeout",
						data: {
							timeout: 8E3
						}
					})
				}
			});
			this.recordTime("adinfo")
		},
		pauseAd: function() {
			this._param.r_ = parseInt(1E4 * Math.random());
			this._param.p = 10;
			this._param.fu = this.player.controls.fullscreenPanel.fullFlag() ? 1 : 0;
			var b = this;
			u.jsonp({
				url: "https://mp.atm.youku.com/mp?",
				data: D(this._param, {
					ti: this._ti,
					k: this._k
				}),
				callback: "callback",
				time: 1E3,
				success: function(c) {
					b.adParsePause(c)
				},
				fail: function() {
					g.log("pause ad info timeout");
					b.reportTime("adinfo", -1);
					b.dispatch({
						type: "pauseadinfotimeout",
						data: {
							timeout: 8E3
						}
					})
				}
			});
			this.recordTime("adinfo")
		},
		recordTime: function(b) {
			null == this._timearr && (this._timearr = {});
			this._timearr[b] = (new Date).getTime()
		},
		reportTime: function(b, c, d) {
			null == this._timearr && (this._timearr = {});
			c = c || (new Date).getTime() - this._timearr[b];
			this.player._reporter.sendUepReport({
				adinfo: "valfload",
				advideo: "adload"
			} [b], c, d)
		},
		backAd: function() {
			this._param.fu = this.player.controls.fullscreenPanel.fullFlag();
			this._param.p = 9;
			this._param.ctu = 0;
			var b = this;
			u.jsonp({
				url: "https://mb.atm.youku.com/mb?",
				data: D(this._param, {
					ti: this._ti,
					k: this._k
				}),
				time: 5E3,
				success: function(c) {
					b.adParse(c)
				},
				fail: function() {
					g.log("adinfo timeout");
					b.dispatch({
						type: " backAdinfotimeout",
						data: {
							timeout: 5E3
						}
					})
				}
			})
		},
		insertAd: function() {
			this._param.ps = 0;
			this._param.pt = 0
		}
	};
	var P = function(b, c) {
		this.adplayer = b;
		this.addata = c;
		"undefined" == typeof c.curnum && (this.addata.curnum = 0)
	};
	P.prototype = {
		sendSUS: function() {
			var b = this.addata.info.VAL[this.addata.curnum].SUS;
			if ("undefined" != typeof b) for (var c = 0; c < b.length; c++) e.Log(b[c].U)
		},
		sendUnitedVTVC: function(b) {
			var b = b + 2,
			c = this.addata.info.VAL[0].VTVC;
			this._vtccache || (this._vtccache = []);
			for (var d = null,
			e = 1E6,
			h = 1E5,
			j = 0; j < c.length; j++) {
				var o = c[j].U,
				l = parseInt(c[j].T),
				n = b - l;
				0 <= n && n < h && (h = n, d = o, e = l)
			}
			null != d && -1 == this._vtccache.indexOf(e) && (this._vtccache.push(e), g.log("<b> vc = " + d + "</b>"), F(d, "js"))
		},
		sendVC: function() {
			var b = this.addata.info.VAL[this.addata.curnum];
			"undefined" != typeof b.VT && F(b.VC, "js")
		},
		sendSUS_: function() {
			var b = this.addata.info,
			c = this.addata.curnum + 2,
			d = b["A" + c].ATMSU,
			g = b["A" + c].ISOSU;
			e.Log(b["A" + c].SU);
			e.Log(d);
			e.Log(g)
		},
		sendSUE: function() {
			var b = this.addata.info.VAL[this.addata.curnum].SUE;
			if ("undefined" != typeof b) for (var c = 0; c < b.length; c++) e.Log(b[c].U)
		},
		sendSUE_: function() {
			var b = this.addata.info,
			c = this.addata.curnum + 2,
			d = b["A" + c].COU;
			e.Log(b["A" + c].OU);
			e.Log(d)
		},
		sendSU: function(b) {
			var c = this.addata.info.VAL[this.addata.curnum].SU;
			if ("undefined" != typeof c) {
				this._sucache || (this._sucache = []);
				for (var d = 1E4,
				g = 1E6,
				h = 0; h < c.length; h++) {
					var j = parseInt(c[h].T),
					n = b - j;
					0 <= n && n < d && (d = n, g = j)
				}
				if (1E6 != g && -1 == this._sucache.indexOf(g)) {
					this._sucache.push(g);
					for (h = 0; h < c.length; h++) parseInt(c[h].T) == g && e.Log(c[h].U)
				}
			}
		},
		sendSU_: function(b) {
			var c = c + 2,
			d = this.addata.info["A" + c].MT;
			d && b >= parseInt(d) && (b = this.addata.info["A" + c].CMU, e.Log(this.addata.info["A" + c].MU), e.Log(b))
		},
		sendCUM: function() {
			var b = this.addata.info.VAL[this.addata.curnum].CUM;
			if ("undefined" != typeof b) for (var c = 0; c < b.length; c++) e.Log(b[c].U)
		},
		sendUnitedCUM: function(b) {
			var c = this.addata.info.VAL[0].CUM;
			if (! ("undefined" == typeof c || 0 === c.length)) for (var d = 0; d < c.length; d++) if (b < parseInt(c[d].T)) {
				for (b = 0; b < (c[d].CUM || []).length; b++) e.Log(c[d].CUM[b].U);
				break
			}
		},
		sendCUM_: function() {
			var b = this.addata;
			e.Log(b.info["A" + (b.curnum + 2)].VCU)
		}
	};
	var Ba = function(b, c) {
		this._handler = {};
		this.player = b;
		this.video = this.player.video;
		this.controls = this.player.controls;
		this._adplugin = this.player._adplugin;
		this._adplugin.adplayer = this;
		this._addata = c.data.info;
		this.video.preload = "none";
		this.video.src = this._addata.VAL[0].RS;
		g.log("ad src=" + this.video.src);
		this.video.style.display = "block";
		this._playTag = [];
		this.bindAdEvent();
		this._adreporter = new P(this, {
			curnum: 0,
			info: this._addata
		})
	};
	Ba.prototype = {
		addEventListener: function(b, c) {
			this._handler[b] = c
		},
		removeEventListener: function(b) {
			this._handler[b] = null
		},
		dispatch: function(b) {
			b && this._handler[b.type] && (b._target = this, this._handler[b.type](b))
		},
		bindAdEvent: function() {
			this.bind_fadtoplay = d.bindAsEventListener(this, this.onPlayClick);
			this.bind_fadplay = d.bindAsEventListener(this, this.onAdPlay);
			this.bind_fadended = d.bindAsEventListener(this, this.onAdEnded);
			this.bind_faderror = d.bindAsEventListener(this, this.onAdError);
			this.bind_fadpause = d.bindAsEventListener(this, this.onAdPause);
			this.bind_fadsuspend = d.bindAsEventListener(this, this.onAdSuspend);
			this.bind_fadstalled = d.bindAsEventListener(this, this.onAdStalled);
			this.bind_fadwaiting = d.bindAsEventListener(this, this.onAdWaiting);
			this.bind_fadloadedmetadata = d.bindAsEventListener(this, this.onAdLoadedMetaData);
			this.bind_fadtimeupdate = d.bindAsEventListener(this, this.onAdTimeUpdate);
			this.bind_fademptied = d.bindAsEventListener(this, this.onEmptied);
			d.addEventHandler(this.video, "play", this.bind_fadplay);
			d.addEventHandler(this.video, "error", this.bind_faderror);
			d.addEventHandler(this.video, "pause", this.bind_fadpause);
			d.addEventHandler(this.video, "suspend", this.bind_fadsuspend);
			d.addEventHandler(this.video, "stalled", this.bind_fadstalled);
			d.addEventHandler(this.video, "waiting", this.bind_fadwaiting);
			d.addEventHandler(this.video, "loadedmetadata", this.bind_fadloadedmetadata);
			d.addEventHandler(this.video, "timeupdate", this.bind_fadtimeupdate);
			d.addEventHandler(this.video, "emptied", this.bind_fademptied);
			this.shadow = this.controls.buttons.shadow;
			this.videobtn = this.controls.buttons.videobtn;
			d.addEventHandler(this.videobtn, "click", this.bind_fadtoplay, !0)
		},
		removeAdEvent: function() {
			d.removeEventHandler(this.video, "play", this.bind_fadplay);
			d.removeEventHandler(this.video, "ended", this.bind_fadended);
			d.removeEventHandler(this.video, "error", this.bind_faderror);
			d.removeEventHandler(this.video, "pause", this.bind_fadpause);
			d.removeEventHandler(this.video, "suspend", this.bind_fadsuspend);
			d.removeEventHandler(this.video, "stalled", this.bind_fadstalled);
			d.removeEventHandler(this.video, "waiting", this.bind_fadwaiting);
			d.removeEventHandler(this.video, "timeupdate", this.bind_fadtimeupdate);
			d.removeEventHandler(this.video, "loadedmetadata", this.bind_fadloadedmetadata);
			d.removeEventHandler(this.video, "loadedmetadata", this.bind_fademptied);
			d.removeEventHandler(this.videobtn, "click", this.bind_fadtoplay, !0)
		},
		onPlayClick: function() {
			this.video.play()
		},
		play: function() {
			this.video.load();
			this.video.play()
		},
		onEmptied: function() {
			this.checkPause()
		},
		leftSecond: function() {
			return parseInt(Math.max(0, this._addata.VAL[0].AL - this.video.currentTime))
		},
		clearTimer: function() {
			clearInterval(this._checkTimer);
			this._checkTimer = null
		},
		checkPause: function() {
			if (!this._checkTimer) {
				var b = this;
				this._timelist = [];
				this._checkTimer = setInterval(function() {
					if (b.video.paused) b.onAdPause();
					else b._timelist.push(b.video.currentTime),
					3 <= b._timelist.length && (1 > Math.abs(b._timelist[0] - b._timelist[2]) && (g.log("<b>ad unexpected pause</b>"), b.video.play(), 0 == b.leftSecond() && (g.log("<b>exception left = 0 </b>"), b.onAdEnded())), b._timelist = [])
				},
				1E3)
			}
		},
		onAdPlay: function() {
			this.checkPause();
			var b = this.controls.container.poster;
			d.hide(this.controls.buttons.videobtn);
			d.hide(b);
			d.hide(d.get(".x-video-info"));
			this.video.style.display = "block";
			this._adplugin.setLeftSecond(this.leftSecond());
			var c = this;
			setTimeout(function() {
				g.log("ad media timeout check begin = " + c._adBegin);
				c._adBegin || (c.removeAdEvent(), c._adplugin.hide(), c._adplugin.reportTime("advideo", -1, !1), c.dispatch({
					type: B,
					data: !0
				}))
			},
			15E3);
			this._playTag[0] || (this._playTag[0] = !0, this._adfirsttu = !1, this._adplugin.recordTime("advideo"), j.appendItem("phase", "adplay"))
		},
		uglyClose: function() {
			g.log("united ugly close");
			this.onAdError()
		},
		onAdError: function() {
			this.removeAdEvent();
			this._adplugin.hide();
			this._adplugin.reportTime("advideo", -1, !1);
			this.clearTimer();
			this.dispatch({
				type: B,
				data: !0
			})
		},
		onAdEnded: function() {
			g.log("united ad ended");
			this._adreporter.sendSUE();
			this.removeAdEvent();
			this._adplugin.hide();
			this.clearTimer();
			this.dispatch({
				type: E,
				data: !0
			});
			j.appendItem("phase", "adend")
		},
		onAdPause: function() {
			this.player.video.ended || (d.show(this.controls.buttons.videobtn), d.hide(this.controls.buttons.shadow))
		},
		onAdSuspend: function() {
			g.log("<font color=red>ad suspend</font>")
		},
		onAdStalled: function() {
			g.log("<font color=red>ad stalled</font>")
		},
		onAdWaiting: function(b) {
			this.controls.onWaiting(b)
		},
		onAdTimeUpdate: function() {
			if (this.video.currentTime > this._addata.VAL[0].AL) this.onAdEnded();
			else d.hide(this.controls.buttons.loading),
			this._adBegin = !0,
			d.hide(this.controls.buttons.loading),
			this._adplugin.setLeftSecond(this.leftSecond()),
			this._adreporter.sendSU(this.video.currentTime),
			this._adreporter.sendUnitedVTVC(this.video.currentTime),
			this._adfirsttu || (this._adplugin.show(), this._adreporter.sendSUS(), this._adfirsttu = !0, this._adplugin.reportTime("advideo"), 0 === this._adplugin.SKIP && this.dispatch({
				type: J
			}))
		},
		onAdLoadedMetaData: function() {
			this._adBegin = !0
		},
		onAdClick: function() {
			this.video.pause();
			this._adreporter.sendUnitedCUM(this.video.currentTime || 0);
			for (var b = this._addata.VAL[0].CU, c = this.video.currentTime, d = 0; d < b.length; d++) {
				var e = b[d],
				h = e.U;
				if (c <= parseInt(e.T)) {
					window.open(h, "", "", !1);
					break
				}
			}
		}
	};
	var ha = function(b) {
		d.config = b;
		this.parentBox = r(d.config.parentBox);
		null == d.config.width && (d.config.width = this.parentBox.offsetWidth);
		this.buildDirectDom(this.parentBox)
	};
	ha.prototype = {
		buildDirectDom: function(b) {
			b.innerHTML = "<div id=x-player class=" + G(d.config.width) + '><div class="x-video-poster"><img id="x-img"/></div><div class="x-video-button"><div class="x-video-play-ico"></div></div><div class="x-video-info"><h1 class="x-title"></h1><div class="x-video-state" style="display:none"><span class="x-time-span"></span></div><div class="x-showmore"></div><div class="x-mask"></div></div>'
		},
		bindEvent: function() {
			this._videobtn = d.get(".x-video-button", this.parentBox);
			d.addEventHandler(this._videobtn, "click", d.bindAsEventListener(this, this.redirect))
		},
		startPlay: function(b, c) {
			d.v = b;
			d.videoInfo = c;
			d.videoInfo._playListData = b.data;
			this._pimg = d.get("#x-img", this.parentBox);
			this._pimg.src = b.data.video.logo;
			this._title = d.get(".x-title", this.parentBox);
			this._title.innerHTML = b.data.video.title;
			this._timespan = d.get(".x-time-span", this.parentBox);
			this._timespan.innerHTML = d.getTime(b.data.video.seconds);
			d.show(d.get(".x-video-poster", this.parentBox));
			d.show(d.get(".x-video-info", this.parentBox));
			this.adapterForReport();
			this._reporter = new U(this, d.v, d.videoInfo._sid);
			this.bindEvent()
		},
		onPlayStart: function() {
			e.playerCurrentState = e.playerState.PLAYER_STATE_PLAYING;
			d.config.events && d.config.events.onPlayStart && (g.log(e.playerCurrentState), g.log("api:onplaystart"), d.config.events.onPlayStart())
		},
		getSrc: function() {
			if (this.src) return this.src;
			"m3u8" == d.config.content ? this.src = d.videoInfo.src: null != d.videoInfo._videoSegsDic && null != d.videoInfo._videoSegsDic[d.defaultVideoType] && (this.src = d.videoInfo._videoSegsDic[d.defaultVideoType][0].src);
			return this.src
		},
		redirect: function() {
			var b = this.getSrc();
			g.log("redirect play src=" + b);
			e.isMIUI ? window.location.href = b: window.open(b, "", "", !1);
			this.onPlayStart();
			this._reporter.addPlayerStaticReport();
			this._reporter.sendTSLog(60);
			this._reporter.sendUserActionReport("xps", "c");
			this._reporter.sendThirdPartyReport("xplayer_dl");
			this._reporter.sendClientConsumeReport()
		},
		adapterForReport: function() {
			this.controls = {
				fullscreenPanel: {
					fullFlag: function() {
						return 1
					}
				}
			};
			this.video = {
				src: this.getSrc()
			};
			this.getQuality = function() {
				return "m"
			}
		}
	}; (function(b) {
		b.getCurrAbsPath = function() {
			if (document.currentScript) return document.currentScript.src;
			var b;
			try {
				a.b.c()
			} catch(c) {
				b = c.fileName || c.sourceURL || c.stack || c.stacktrace,
				!b && window.opera && (b = (("" + c).match(/of linked script \S+/g) || []).join(" "))
			}
			if (b) return b = b.split(/[@ ]/g).pop(),
			b = "(" == b[0] ? b.slice(1, -1) : b,
			b.replace(/(:\d+)?:\d+$/i, "");
			b = -1 === ("" + document.querySelector).indexOf("[native code]");
			for (var d = document.scripts,
			e = d.length - 1,
			g; g = d[e--];) if ("interactive" === g.readyState) return b ? g.getAttribute("src", 4) : g.src
		}
	})(window);
	var ga = "https://player.youku.com";
	F(ga + "/h5player/play.css?ver=" + c.replace(/[-:]/g, ""), "css");
	var fa = function(b) {
		this._id = b.id;
		this._pid = b.pid || "";
		this._url = b.url;
		this._box = r(b.parentBox);
		this._gotInfo = !1;
		b.width = r(b.parentBox).offsetWidth;
		b.height = r(b.parentBox).offsetHeight;
		d.config = b;
		this.request()
	};
	fa.prototype = {
		request: function() {
			var b = this;
			u.jsonp({
				url: this._url + "/h5/videos/play.json",
				data: {
					vid: this._id,
					pid: this._pid
				},
				time: 5E3,
				success: function(c) {
					b.parse(c)
				},
				fail: function() {
					b.showError()
				}
			})
		},
		parse: function(b) {
			this._gotInfo = !0;
			0 == b.error ? (this.videoSrc = b.results.url, this.imgSrc = b.results.cover, this.buildDom()) : this.showError()
		},
		buildDom: function() {
			this._box.innerHTML = '<div id="x-player class="' + this.cssAdapt(parseInt(d.config.width)) + '><video class="x-video-player" id="youku-html5player-video" style="width: 100%; height: 100%; position: relative; display: none; top: -1000px;" src="' + this.videoSrc + '"></video><div class=x-video-poster><img src="' + this.imgSrc + '"></img></div><div class="x-video-loading"></div><div id="x-video-button" class="x-video-button"><div class="x-video-play-ico"></div></div></div>';
			this.video = d.get(".x-video-player", this._box);
			this.cover = d.get(".x-video-poster", this._box);
			this.videoBtn = d.get(".x-video-button", this._box);
			this.loading = d.get(".x-video-loading", this._box);
			d.addEventHandler(this.videoBtn, "click", d.bindAsEventListener(this, this.onOverBtnClick));
			d.addEventHandler(this.video, "ended", d.bindAsEventListener(this, this.onEnded));
			d.addEventHandler(this.video, "timeupdate", d.bindAsEventListener(this, this.onTimeUpdate));
			d.addEventHandler(this.video, "waiting", d.bindAsEventListener(this, this.onWaiting))
		},
		showError: function() {
			this._box.innerHTML = '<div style="background:#000; color:#FFF; text-align:center; color: white; line-height:' + this._box.offsetHeight + 'px " >\u89c6\u9891\u4fe1\u606f\u51fa\u9519 <a href="https://m.youku.com/webapp/dl?app=youku&amp;source=webqr" title="\u4e0b\u8f7d\u4f18\u9177\u5ba2\u6237\u7aef" target="_blank"><button type="button" class="x-btn" style="background: #3bb4fc;text-align: center;color: #fff;border-radius: 1rem;">\u7528app\u89c2\u770b</button></a></div>'
		},
		onOverBtnClick: function() {
			this.video.play();
			this.loading.style.display = "block";
			this.videoBtn.style.display = "none"
		},
		onEnded: function() {
			this.cover.style.display = "block";
			this.videoBtn.style.display = "block";
			this.loading.style.display = "none";
			this.video.style.display = "none"
		},
		onTimeUpdate: function() {
			"none" != this.loading.style.display && (this.loading.style.display = "none");
			"block" != this.video.style.display && (this.video.style.display = "block");
			"none" != this.cover.style.display && (this.cover.style.display = "none")
		},
		onWaiting: function() {
			this.loading.style.display = "block"
		},
		cssAdapt: function(b) {
			return e.isIPAD && 0 <= window.location.href.indexOf("v.youku.com") ? "x-player": 200 >= b ? "x-player x-player-200": 300 >= b ? "x-player x-player-200-300": 660 >= b ? "x-player x-player-300-660": 800 >= b ? "x-player x-player-660-800": "x-player"
		}
	};
	var Ca = function(b, c) {
		this.setting = {
			debug: !1,
			controls: d.get(".x-console"),
			feedback: d.get(".x-feedback"),
			container: {
				poster: d.get(".x-video-poster"),
				logo: d.get(".x-video-logo")
			},
			buttons: {
				pointVideo: d.get("#point-video"),
				playControl: d.get(".x-play-control"),
				play: d.get("#x-playbtn"),
				loading: d.get(".x-video-loading"),
				videobtn: d.get(".x-video-button"),
				videoinfo: d.get(".x-video-info"),
				shadow: d.get(".x-trigger"),
				currentTime: d.get(".x-time-current"),
				totalTime: d.get(".x-time-duration"),
				fullscreen: d.get(".x-fullscreen")
			},
			classNames: {
				play: "x-playing",
				pause: "x-pause"
			},
			init: function() {}
		};
		d.extend(this.setting, c);
		this.player = b;
		this.dashboard = this.setting.controls;
		this.container = this.setting.container;
		this.progressBar = new sa(b);
		this.progressBar.uCurrentTime = this.setting.buttons.currentTime;
		this.miniProgressBar = new oa(b);
		this.fullscreenPanel = new ka(b);
		this.interactionPanel = new ma(b);
		this.xplayer = d.get("#x-player");
		this.buttons = this.setting.buttons
	};
	Ca.prototype = {
		init: function(b, c) {
			this.playLimit = new qa(this.player, b, this.setting.client_id);
			this.buttons.totalTime.innerHTML = c.totalTime ? d.getTime(c.totalTime) : "00:00";
			this.resetProgress();
			this.buttons.play.className = this.setting.classNames.play;
			var e = this.container.poster.getElementsByTagName("img")[0];
			d.config.poster ? e.src = d.config.poster: b.data.error ? null != b.data.error && -203 == b.data.error.code && (this.container.poster.style.backgroundColor = "black", e.parentNode.removeChild(e), d.show(this.container.poster)) : (e.src = b.data.video.logo, this.container.poster.style.display = "block");
			this._qualityPanel = new va(this.player, b);
			this._languagePanel = new na(this.player, b);
			this._playratePanel = new ra(this.player, b);
			this._payPanel = new pa(this.player, b);
			this._feedbackPanel = new T(this.player, b);
			this._informationPanel = new la(this.player, b);
			this.tipPanel = new ya(this.player, b);
			this.showlistPanel = new xa(this.player, b);
			this.bindDynamicEvent();
			this._isShowLogo = !1;
			d.hide(this.container.logo);
			this.playLimit.limitAppShow();
			b.data.show && (b.data.show.exclusive && "none" == b.data.stream[0].logo) && (this._isShowLogo = !0)
		},
		bindDynamicEvent: function() {
			this.bind_mutualHide = d.bindAsEventListener(this, this.mutualHide);
			d.addEventHandler(this._languagePanel, "click", this.bind_mutualHide);
			d.addEventHandler(this._qualityPanel, "click", this.bind_mutualHide);
			d.addEventHandler(this.showlistPanel, "click", this.bind_mutualHide);
			d.addEventHandler(this._playratePanel, "click", this.bind_mutualHide);
			this.bind_progress = d.bindAsEventListener(this, this.onProgress);
			d.addEventHandler(this.progressBar, "progressing", this.bind_progress);
			d.addEventHandler(this.progressBar, "progressend", d.bindAsEventListener(this, this.onProgressEnd));
			d.addEventHandler(this._languagePanel, "settingdone", d.bindAsEventListener(this, this.onSettingDone));
			d.addEventHandler(this._qualityPanel, "settingdone", d.bindAsEventListener(this, this.onSettingDone));
			d.addEventHandler(this._playratePanel, "settingdone", d.bindAsEventListener(this, this.onSettingDone));
			d.addEventHandler(this._languagePanel, "settingshow", d.bindAsEventListener(this, this.onSettingShow));
			d.addEventHandler(this._qualityPanel, "settingshow", d.bindAsEventListener(this, this.onSettingShow));
			d.addEventHandler(this._playratePanel, "settingshow", d.bindAsEventListener(this, this.onSettingShow));
			d.addEventHandler(this._languagePanel, "settinghide", d.bindAsEventListener(this, this.onSettingHide));
			d.addEventHandler(this._qualityPanel, "settinghide", d.bindAsEventListener(this, this.onSettingHide));
			d.addEventHandler(this._playratePanel, "settinghide", d.bindAsEventListener(this, this.onSettingHide));
			d.addEventHandler(this.fullscreenPanel, "enterfullscreen", d.bindAsEventListener(this, this.onEnterFullScreen));
			d.addEventHandler(this.fullscreenPanel, "exitfullscreen", d.bindAsEventListener(this, this.onExitFullScreen))
		},
		retimer: function() {
			g.log("retimer");
			this.autoHideDashBoard()
		},
		hideDashBoard: function() {
			var b = this._payPanel,
			c = this._informationPanel,
			d = this.miniProgressBar,
			e = this.interactionPanel,
			h = this._languagePanel;
			this.setting.controls.style.display = "none";
			d.show();
			b.hide();
			c.hide();
			e.hideStatus();
			h.hide();
			this._qualityPanel.hide();
			this._playratePanel.hide()
		},
		autoHideDashBoard: function(b) {
			this.dashboardTimer && clearTimeout(this.dashboardTimer);
			var c = this;
			this.dashboardTimer = setTimeout(function() {
				var e = d.get(".x-showlist");
				e && "block" == e.style.display ? c.autoHideDashBoard(b) : c.player.video.paused || c.hideDashBoard()
			},
			b || 2E3)
		},
		onMultiTouch: function() {},
		showUglyHint: function() {},
		closeUglyHint: function() {},
		showBoardInfo: function() {
			d.show(this.setting.controls);
			this.miniProgressBar.hide();
			this._informationPanel.show();
			this._payPanel.hasPayInfo() && this._payPanel.show()
		},
		toggleDashBoard: function(b) {
			if (! ("touchend" == b.type && 1 < b.changedTouches.length)) {
				this._sx = this._sx || 0;
				this._sy = this._sy || 0;
				b.changedTouches = b.changedTouches || [{
					clientX: this._sx,
					clientY: this._sy
				}];
				var c = {
					x: this._sx,
					y: this._sy
				},
				b = {
					x: b.changedTouches[0].clientX,
					y: b.changedTouches[0].clientY
				}; ! this._stmtag && (1 !== this._sactionType && this.isTouchTooShort(c, b, 100)) && (c = this.setting.controls.style.display, "none" == c || "" == c ? (this.player._reporter.sendUserActionReport("xcd", "c"), this.showBoardInfo(), this.autoHideDashBoard(), ta = (new Date).getTime()) : (this.player._reporter.sendUserActionReport("xhd", "c"), clearTimeout(this.dashboardTimer), this.hideDashBoard()))
			}
		},
		bindAdVideoBtnEvent: function() {
			d.addEventHandler(this.buttons.videobtn, "touchstart", d.bindAsEventListener(this, this.onVideoBtnTouchStart));
			d.addEventHandler(this.buttons.videobtn, "touchend", d.bindAsEventListener(this, this.onVideoBtnTouchEnd));
			d.addEventHandler(this.buttons.videobtn, "click", d.bindAsEventListener(this, this.onVideoBtnTouchEnd))
		},
		bindVideoBtnEvent: function() {
			d.addEventHandler(this.buttons.videobtn, "click", d.bindAsEventListener(this, this.onVideoBtnClick), !0)
		},
		startPlay: function() {
			if (this._isShowLogo) {
				var b = this,
				c = function() {
					d.show(b.container.logo);
					b.player.video.removeEventListener("canplay", c)
				};
				b.player.video.addEventListener("canplay", c)
			}
		},
		bindEvent: function() {
			g.log("bind event");
			this.bind_uireinit = d.bindAsEventListener(this, this.uiInit);
			this.bind_play = d.bindAsEventListener(this, this.play);
			this.bind_redirect = d.bindAsEventListener(this, this.redirect);
			this.bind_showTimeTip = d.bindAsEventListener(this, this.showTimeTip);
			this.bind_hideTimeTip = d.bindAsEventListener(this, this.hideTimeTip);
			this.bind_changeVolume = d.bindAsEventListener(this, this.changeVolume);
			this.bind_toggleVolume = d.bindAsEventListener(this, this.toggleVolume);
			this.bind_gestureChange = d.bindAsEventListener(this, this.onGestureChange);
			this.bind_toggleDashBoard = d.bindAsEventListener(this, this.toggleDashBoard);
			this.bind_retimer = d.bindAsEventListener(this, this.retimer);
			d.addEventHandler(this.progressBar, "click", this.bind_uireinit);
			d.addEventHandler(this.setting.controls, "click", this.bind_retimer);
			d.addEventHandler(this.setting.controls, "touchstart", this.bind_retimer);
			d.addEventHandler(this.buttons.playControl, "click", this.bind_play);
			"directsrc" == d.config.playType && (!e.isIPHONE && !e.isIPOD ? d.addEventHandler(this.buttons.videobtn, "click", this.bind_redirect, !0) : d.addEventHandler(this.buttons.videobtn, "click", d.bindAsEventListener(this, this.playIPH), !0));
			d.addEventHandler(this.buttons.shadow, "touchstart", d.bindAsEventListener(this, this.shadowTouchStart));
			d.addEventHandler(this.buttons.shadow, "touchmove", d.bindAsEventListener(this, this.shadowTouchMove));
			d.addEventHandler(this.buttons.shadow, "touchend", d.bindAsEventListener(this, this.shadowTouchEnd));
			d.addEventHandler(this.buttons.shadow, "click", this.bind_toggleDashBoard);
			d.addEventHandler(this.buttons.shadow, "touchend", d.bindAsEventListener(this, this.onMultiTouch));
			d.addEventHandler(this.buttons.shadow, "gesturechange", this.bind_gestureChange)
		},
		removeEvent: function() {
			g.log("remove event begin");
			d.removeEventHandler(this.progressBar, "click", this.bind_uireinit);
			d.removeEventHandler(this.buttons.playControl, "click", this.bind_play);
			d.removeEventHandler(this.buttons.shadow, "click", this.bind_toggleDashBoard);
			d.removeEventHandler(this.progressBar, "touchstart", this.bind_uireinit);
			d.removeEventHandler(this._languagePanel, "click", this.bind_mutualHide);
			d.removeEventHandler(this._qualityPanel, "click", this.bind_mutualHide);
			d.removeEventHandler(this._playratePanel, "click", this.bind_mutualHide);
			this.progressBar.removeEvent();
			this.fullscreenPanel.removeEvent();
			this._languagePanel.removeEvent();
			this._qualityPanel.removeEvent();
			g.log("remove event end")
		},
		onGestureChange: function(b) {
			b.preventDefault();
			var c = -1 !== this.fullscreenPanel.zoomStatus().indexOf("in");
			if (1.1 < b.scale && c || 0.9 > b.scale && !c) b.method = "m",
			this.fullscreenPanel.switchFullScreen(b)
		},
		toggleVolume: function() {},
		changeVolume: function() {},
		rePlay: function() {
			g.log("replay");
			this.player._reporter.sendUserActionReport("xrp", "c");
			A = !1; (this._recommend = d.get(".x-recommend")) && d.get("#x-player").removeChild(this._recommend);
			this.resetProgress();
			this._first = !1;
			this.player.replay();
			g.log("replay func end")
		},
		redirect: function(b) {
			this.player.redirect(b)
		},
		hideFacade: function() {
			var b = this.container.poster;
			d.hide(this.buttons.videobtn);
			d.hide(b);
			d.hide(d.get(".x-feedback"));
			g.log("<font color=blue>hide facade</font>")
		},
		onVideoBtnTouchStart: function(b) {
			this._vtsx = b.targetTouches[0].clientX;
			this._vtsy = b.targetTouches[0].clientY
		},
		onVideoBtnTouchEnd: function(b) {
			this.onceReport || (this.onceReport = 59, this.player._reporter.addPlayerDurationReport(this.onceReport));
			g.log("<font color=red>video btn clicked</font>");
			b = b || {};
			A ? this.rePlay() : b && b.changedTouches && 50 < Math.abs(b.changedTouches[0].clientY - this._vtsy) ? g.log("videobtn too long y") : (this.playLimit.isLimit() && this.playLimit.limitAppHide(), this.player._reporter.sendUserActionReport("xps", "c"), this.hideFacade(), this.container.poster.style.display = "none", !0 === this._hasAdReq ? this.player.video.play() : (this._hasAdReq = !0, this.player.video.load(), g.log("active src=" + this.player.video.src), this.player.requestAd()))
		},
		onVideoBtnClick: function() {
			if ((e.isIPHONE || e.isIPOD) && d.v.data.trial) this.player.video.style.display = "block";
			this.container.poster.style.display = "none";
			this.buttons.videobtn.style.display = "none";
			A ? this.rePlay() : (this.player.video.load(), this.player.video.play())
		},
		playIPH: function() {
			if (!this.iphTag) {
				this.player.video.load();
				var b = this;
				this.player.video.addEventListener("timeupdate",
				function(c) {
					4 == c.target.readyState && (b.iphTag = !0)
				})
			}
			this.player.video.play()
		},
		play: function(b) {
			b = b || {};
			if (A) this.rePlay();
			else {
				var c = this.player.video.paused;
				g.log("m3u8 isPause = " + c + " e = " + b);
				c ? (0 === this._payPanel.activeTime ? (this._payPanel.activeTime = -1, this.player.seek(0)) : this.player.video.play(), this.player._reporter.sendUserActionReport("xpl", "c"), this.interactionPanel.setStatus("\u64ad\u653e")) : (this.player.video.pause(), this.player._reporter.sendUserActionReport("xpa", "c"), this.interactionPanel.setStatus("\u6682\u505c"));
				this.checkPauseAd()
			}
		},
		isProperWH: function(b, c) {
			var e = d.get("#x-player");
			return e.offsetWidth >= b && e.offsetHeight >= c
		},
		isNeedPauseAd: function() {
			return this.player.video.paused && d.isLandScape()
		},
		checkPauseAd: function() {
			this.isNeedPauseAd() ? (this._pauseAdPlugin = new W(this.player, d.v, d.videoInfo._sid), this._pauseAdPlugin.addEventListener("pauseAdinfook", d.bindAsEventListener(this, this.onPauseAdInfoOK)), this._pauseAdPlugin.addEventListener("pauseadinfotimeout", d.bindAsEventListener(this, this.onPauseAdInfoTimeout)), this._pauseAdPlugin.addEventListener("pauseAdinfoerror", d.bindAsEventListener(this, this.onPauseAdInfoERROR)), window.adpluginobject = this._pauseAdPlugin, this._pauseAdPlugin.pauseAd(), g.log("send pause ad request<br/>")) : (g.log("<font color=blue> donot need pause ad </font>"), this.hidePauseAd(), this.playLimit.isLimit() && (this.playLimit.hasPausead = !1))
		},
		hidePauseAd: function() {
			d.hide(d.get(".x-ad-pause"))
		},
		onPauseAdInfoOK: function(b) {
			g.log("pause info ok");
			this._pauseAdStart || (this._pauseAdStart = !0);
			this.playLimit.isLimit() && this.playLimit._content && (this.playLimit.limitAppHide(), this.playLimit.hasPausead = !0);
			this._pauseAdPlayer = new za(this.player, b);
			this._pauseAdPlayer.play()
		},
		onPauseAdInfoTimeout: function(b) {
			g.log("pause info timeout = " + b.data.timeout);
			this._pauseAdStart || (this._pauseAdStart = !0)
		},
		onPauseAdInfoERROR: function() {
			g.log("<font color=blue>pause info error no info</font>");
			this._pauseAdStart || (this._pauseAdStart = !0)
		},
		autoShow: function() {
			this.show();
			var b = this;
			setTimeout(function() {
				b.hide()
			},
			5E3)
		},
		mutualHide: function(b) {
			b._target == this._languagePanel ? (this._qualityPanel.hide(!0), this._playratePanel.hide(!0), this.showlistPanel.hide()) : b._target == this._qualityPanel ? (this._languagePanel.hide(!0), this._playratePanel.hide(!0), this.showlistPanel.hide()) : b._target == this.showlistPanel ? (this._qualityPanel.hide(!0), this._languagePanel.hide(!0), this._playratePanel.hide(!0)) : b._target == this._playratePanel && (this._qualityPanel.hide(!0), this._languagePanel.hide(!0), this.showlistPanel.hide())
		},
		show: function(b) {
			b ? d.show(this.buttons[b]) : d.show(this.setting.controls)
		},
		hide: function(b) {
			b ? d.hide(this.buttons[b]) : d.hide(this.setting.controls)
		},
		backAdPrepare: function() {
			this.dashboard.style.display = "none";
			this.buttons.shadow.display = "none"
		},
		onEnded: function() {
			this.dashboard.style.display = "none";
			this.buttons.shadow.display = "none";
			this.buttons.videobtn.style.display = "block";
			this._isShowLogo && d.hide(this.container.logo);
			this.container.poster.style.display = "block";
			this._informationPanel.show();
			this.miniProgressBar.hide();
			this.interactionPanel.hide();
			null == d.v.data.trial && !1 != d.initConfig.show_related && (this.playLimit.isLimit() && (this.playLimit.needOpen ? this.playLimit.limitAppEnd() : this.playLimit.limitAppHide()), this._relatedPanel = new wa(this.player, d.v))
		},
		onPlay: function() {
			this.playLimit._isLimit && this.playLimit.limitAppHide();
			this.player.video.style.display = "block";
			this.buttons.play.className = this.setting.classNames.pause;
			this.buttons.videobtn.style.display = "none";
			this.container.poster.style.display = "none";
			this.hidePauseAd();
			this.buttons.shadow.style.display = "block"; (this._recommend = d.get(".x-recommend")) && d.get("#x-player").removeChild(this._recommend);
			A = !1;
			this._first || (this._first = !0, this._informationPanel.show(), this.setting.controls.style.display = "block");
			this.autoHideDashBoard()
		},
		onPause: function() { ! this.playLimit.hasPausead && (this.playLimit.isLimit() && (!this.playLimit._content || !this.progressBar.maybeSeek)) && this.playLimit.limitAppShow();
			this.buttons.play.className = this.setting.classNames.play;
			d.hide(this.buttons.loading);
			this.interactionPanel.isVisible() || (this.showBoardInfo(), (!this.playLimit.isLimit() || !allow) && this.interactionPanel.setStatus("\u6682\u505c"))
		},
		onWaiting: function() { ! this.player.video.paused && "none" == this.buttons.videobtn.style.display && (this.buttons.loading.style.display = "block")
		},
		onError: function() {
			this._isShowLogo && d.hide(this.container.logo)
		},
		onTryPlayEnded: function() {
			g.log("try end");
			this.player.video.pause();
			this._payPanel.activeTime = 0;
			A = !0;
			this._payPanel.showTip()
		},
		onTimeUpdate: function(b) {
			this.buttons.loading.style.display = "none";
			if (b.target == this.player.video) {
				var c = this.player.currentTime;
				4 == b.target.readyState && this.setProgress(c);
				this._payPanel.hasPayInfo() && c >= this._payPanel.tryDuration() && (this.onTryPlayEnded(), this.onPlayEnd());
				this.playLimit.isLimit() && c >= this.playLimit.limitTime() && this.playLimit.needOpen && this.playLimit.limitAppEnd()
			}
		},
		onPlayEnd: function() {
			if (e.playerCurrentState != e.playerState.PLAYER_STATE_END && (this.playLimit._limitVip && (this.playLimit._isLimit = !1), e.playerCurrentState = e.playerState.PLAYER_STATE_END, d.config.events && d.config.events.onPlayEnd)) g.log("callback: on play end"),
			d.config.events.onPlayEnd()
		},
		checkPlayLimit: function() {
			return this.playLimit.needOpen
		},
		removeControls: function() {
			this.video.controls = !1
		},
		loadControls: function() {
			this.video.controls = !0
		},
		setProgress: function(b) {
			b = Math.min(Math.max(b, 0), d.videoInfo.totalTime);
			this.progressBar.setProgress(b);
			this.miniProgressBar.setProgress(b);
			this.buttons.currentTime.innerHTML = d.getTime(this.progressBar.playTime)
		},
		resetProgress: function() {
			this.progressBar.resetProgress();
			this.miniProgressBar.resetProgress();
			this.buttons.currentTime.innerHTML = "00:00"
		},
		hideTimeTip: function(b) {
			if (b.srcElement.id == this.buttons.progressHandler.id) return ! 1;
			this.buttons.progressTime.style.display = "none"
		},
		showTimeTip: function(b) {
			if (b.srcElement.id == this.buttons.progressHandler.id || b.srcElement.id == this.buttons.progressTime.id || b.srcElement.id == this.buttons.pointVideo.id) return ! 1;
			b = b.offsetX / this.buttons.progressBar.offsetWidth;
			this.buttons.progressTime.innerHTML = d.getTime(b * d.videoInfo.totalTime);
			this.buttons.progressTime.style.left = 100 * Math.min(Math.max(b, 0.023), 0.977) + "%";
			this.buttons.progressTime.style.display = "block"
		},
		shadowTouchStart: function(b) {
			this.progressBar.maybeSeek = !0;
			1 < b.targetTouches.length ? this.interactionPanel.hide() : (this._sx = b.targetTouches[0].clientX, this._sy = b.targetTouches[0].clientY, this._smx = this._sx, this._smy = this._sy, this._presmx = this._sx, this._presmy = this._sy, this._deltaxs = [], this._ttime = this._stime = this.player.currentTime || 0, this._spretag = this._stmtag = !1, this._presmt = this._sactionTime = (new Date).getTime(), this._stmlrtag = this._sactionType = 0)
		},
		shadowTouchMove: function(b) {
			this.progressBar.maybeSeek = !0;
			if (1 < b.targetTouches.length) this.interactionPanel.hide();
			else {
				this._smx = b.targetTouches[0].clientX;
				this._smy = b.targetTouches[0].clientY;
				this._smt = (new Date).getTime();
				var c = Math.abs(this._smx - this._sx),
				d = Math.abs(this._smy - this._sy),
				e = this._smt - this._sactionTime;
				0 === this._stmlrtag && (this._stmlrtag = c > d ? 1 : -1);
				1 == this._stmlrtag && b.preventDefault();
				if (1 != this._sactionType) if (100 < c && c > d && 500 > e) g.log("quick seek moving"),
				this.player.video.pause(),
				this._sactionType = 1,
				e = this._smx > this._sx ? 30 : -30,
				this.interactionPanel.setTip(this._stime, e),
				this.interactionPanel.show();
				else if (200 > c && (100 > d && 1E3 < e) && (this._spretag = !0), this._spretag && c > d || this._stmtag) g.log("stmtag =" + this._stmtag),
				this._sactionType = 2,
				this._stmtag = !0,
				this.player.video.pause(),
				this.dragging(b)
			}
		},
		shadowTouchEnd: function(b) {
			1 < b.changedTouches.length ? this.interactionPanel.hide() : (this.progressBar.maybeSeek = !1, this.adrAdapt(b), this.isShadowTouchTooShort() && !this._stmtag && 1 != this._sactionType ? g.log("too short or horizontal") : (b = Math.abs(this._smy - this._sy) > Math.abs(this._smx - this._sx) ? "xdud": "xdlr", g.log("shadow action = " + b), this.player._reporter.sendUserActionReport(b, "d"), 2 == this._sactionType ? (g.log("<br/><b>normal seek</b>"), this.player.video.play(), this.player.seek(this._ttime), this.interactionPanel.hide(), this.player._reporter.sendUserActionReport("xtseek", "d")) : 1 == this._sactionType && (b = 0 < this._smx - this._sx ? 30 : -30, g.log("<br/><font color=red>quick seek deltat = " + b + " cur=" + this._stime + "</font>"), this.setProgress(this._stime + b), this.interactionPanel.setTip(this._stime, b), this.interactionPanel.show(), this.interactionPanel.autoHide(), this.player.video.play(), this.player.seek(this._stime + b), this.player._reporter.sendUserActionReport("xqseek", "d"), g.log("<br/>"))))
		},
		dragging_: function(b) {
			var c = this._smx - this._presmx;
			this._deltaxs.push(10 < c ? c / 2 : c);
			for (var e = c = 0; e < this._deltaxs.length; e++) c += this._deltaxs[e];
			b = Math.min(Math.max(c / b.currentTarget.offsetWidth * d.videoInfo.totalTime + this._stime, 0), d.videoInfo.totalTime);
			this.setProgress(b);
			this.interactionPanel.show();
			this._ttime = b;
			this._presmx = this._smx;
			this._presmy = this._smy;
			this._presmt = this._smt
		},
		dragging: function(b) {
			b = Math.min(Math.max(60 * ((this._smx - this._sx) / b.currentTarget.offsetWidth) + this._stime, 0), d.videoInfo.totalTime);
			this.setProgress(b);
			this.interactionPanel.setTip(this._ttime, b - this._ttime);
			this.interactionPanel.show();
			this._ttime = b;
			this._presmx = this._smx;
			this._presmy = this._smy;
			this._presmt = this._smt
		},
		onProgress: function(b) {
			this.interactionPanel.setTip(b.st || 0, b.dt || 0);
			this.interactionPanel.show()
		},
		onProgressEnd: function() {
			this.interactionPanel.hide()
		},
		onSettingDone: function() {
			this.interactionPanel.setStatus("\u8bbe\u7f6e\u6210\u529f")
		},
		onSettingShow: function() {
			g.log("<b>setting show</b>");
			clearTimeout(this.pbarClickTimer);
			this.progressBar.removeClickEvent()
		},
		onSettingHide: function() {
			g.log("<b>setting hide</b>");
			var b = this;
			this.pbarClickTimer = setTimeout(function() {
				b.progressBar.addClickEvent()
			},
			1E3)
		},
		onEnterFullScreen: function() {
			e.isIPAD && d.addClass(this.setting.controls, "x-fs-console")
		},
		onExitFullScreen: function() {
			e.isIPAD && d.removeClass(this.setting.controls, "x-fs-console")
		},
		adrAdapt: function(b) {
			e.isAndroid && (this._smx = b.changedTouches[0].clientX, this._smy = b.changedTouches[0].clientY, g.log("<hr/>adr smy= " + this._smy + " y = " + this._sy))
		},
		isShadowTouchTooShort: function(b) {
			return this.isTouchTooShort({
				x: this._sx,
				y: this._sy
			},
			{
				x: this._smx,
				y: this._smy
			},
			b)
		},
		isTouchTooShort: function(b, c, d) {
			var e = Math.abs(c.x - b.x),
			e = e || 1.0E-6,
			b = (b = Math.abs(c.y - b.y)) || 1.0E-6;
			g.log(e + "," + b);
			d = d || 100;
			return e < d && b < d ? !0 : !1
		},
		showShowListBtn: function() {
			this.showlistPanel.showListBtn()
		},
		hideShowListBtn: function() {
			this.showlistPanel.hideListBtn()
		},
		showLastTimeTip: function(b) {
			0 >= b || this.tipPanel.showLastTimeTip(b)
		},
		uiInit: function() {
			g.log("uiInit");
			A && (A = !1, this.buttons.videobtn.style.display = "block")
		},
		onResize: function(b) {
			var c = r(d.config.parentBox).offsetWidth,
			e = r(d.config.parentBox).offsetHeight;
			if (c && (e && d.resizeTag) && (e = this.xplayer.className, this.xplayer && ( - 1 === e.indexOf("fullscreen") ? this.xplayer.className = G(c) : (c = window.innerWidth, this.xplayer.className = G(c) + " x-player-fullscreen")), this._relatedPanel)) this._relatedPanel.onResize(b)
		}
	};
	var X = function(b) {
		this.video = b;
		this._startPlayTime = -1;
		this.currentTime = this._waitTry = 0
	};
	X.prototype = {
		getVideo: function() {
			return this.video
		},
		show: function() {
			d.show(this.video)
		},
		hide: function() {
			d.hide(this.video)
		},
		play: function() {
			d.v && d.v.data.trial && 0 == d.v.data.trial.time ? g.log("<b> trial time = 0  </b>") : this.video.play()
		},
		pause: function() {
			this.video.pause()
		},
		setupControls: function(b, c) {
			this.controls && this.controls.removeEvent();
			return new Ca(b, c)
		},
		hideControls: function() {
			this.controls.hide()
		},
		showControls: function() {
			this.controls.show()
		},
		removeControls: function() {
			this.controls.removeControls()
		},
		loadControls: function() {
			this.controls.loadControls()
		},
		retry: function() {},
		showError: function(b) {
			this.errorBox || (this.errorBox = document.createElement("div"), this.errorBox.style.cssText = "position:absolute;width:100%;top:50%;display:none;text-align:center;", this.video.parentNode.appendChild(this.errorBox));
			this.errorBox.innerHTML = b;
			this.errorBox.style.marginTop = "-" + this.errorBox.offsetHeight / 2 + "px";
			this.errorBox.style.display = "block"
		},
		onLoadStart: function() {},
		onCanPlay: function() {},
		onLoadedData: function() {},
		onLoadedMetaData: function() {},
		onAbort: function() {},
		onError: function() {
			this._reporter.sendUserActionReport("xve", "e");
			this._reporter.sendUepReport("videoload", -1, !1);
			e.sendErrorReport(2001);
			if (0 <= this._retry--) - 1 !== this.video.src.indexOf("m3u8") && (this.video.src = d.m3u8src_v2(d.v.data.id, d.defaultVideoType)),
			g.log("video onerror retry it ,time=" + this.currentTime + " src=" + this.video.src),
			this.video.load(),
			this.video.play(),
			this.seek(this.currentTime),
			this.controls.onError();
			else if (! (this.isOnePiece() && !0 == this.controls.checkPlayLimit())) if (this._errorTag) this.controls.onError();
			else this._errorTag = !0,
			e.playerCurrentState = e.playerState.PLAYER_STATE_ERROR,
			e.showError({
				code: "2001",
				message: "\u62b1\u6b49\uff0c\u89c6\u9891\u51fa\u9519\uff0c\u8bf7\u5237\u65b0"
			},
			"\u62b1\u6b49\uff0c\u89c6\u9891\u51fa\u9519\uff0c\u8bf7\u5237\u65b0")
		},
		onPause: function() {
			this.controls.onPause()
		},
		onPlayIPH: function() {
			g.log("onplayiph");
			this.onPlayStart();
			this._firstPlayTag ? !0 == this._endedIPH && (this._reporter.tsInit(), this._reporter.sendTSLog(60), this._reporter.addClientDurationReport(60), this._reporter.addPlayerDurationReport(62)) : (this._firstPlayTag = !0, this._reporter.addPlayerStaticReport(), this._reporter.rs = 1, this._reporter.sendTSLog(60), this._reporter.addClientDurationReport(60), this._reporter.sendUserActionReport("xps", "c"), this._reporter.sendLoadedTime(3), this._reporter.sendThirdPartyReport("xplayer_iph"), this._reporter.sendClientConsumeReport())
		},
		onTimeUpdateIPH: function() {
			this.currentTime = this.video.currentTime
		},
		onEndedIPH: function() {
			this.onPlayEnd();
			this._reporter.addPlayerDurationReport(61);
			this._reporter.sendTSLog(61);
			this._reporter.addClientDurationReport(61);
			this._endedIPH = !0
		},
		onPlay: function() {
			g.log("onplay");
			this.controls.onPlay();
			if (this._firstPlayTag) {
				if (e.playerCurrentState == e.playerState.PLAYER_STATE_END || e.playerCurrentState == e.playerState.PLAYER_STATE_ERROR) this.onPlayStart()
			} else this._firstPlayTag = !0,
			this.onPlayStart(),
			d.initConfig.firsttime ? (g.log("starttime = " + d.initConfig.firsttime), this.seek(d.initConfig.firsttime)) : this.seekToLastPoint() || this.skipHead(),
			this._startPlayTime = (new Date).getTime(),
			this._reporter.addPlayerStaticReport(),
			this._reporter.rs = 1,
			this._reporter.sendTSLog(60),
			this._reporter.addClientDurationReport(60),
			this._reporter.sendClientConsumeReport();
			j.appendItem("phase", "videoplay")
		},
		onVolumeChange: function() {},
		onPlaying: function() {},
		onStalled: function(b) {
			g.log("<b>stalled</b>");
			if (this.isOnePiece() || b.target == this.video) this.controls.onWaiting(b)
		},
		onSuspend: function() {},
		onWaiting: function(b) {
			if (this.isOnePiece() || b.target == this.video) this.controls.onWaiting(b)
		},
		onSeeked: function() {
			g.log("onSeeked waitSkip=" + this._waitSeek + " try= " + this._waitTry);
			if (!isNaN(this._waitSeek)) {
				var b = this._waitSeek;
				10 < Math.abs(this.video.currentTime - b) && 5 >= this._waitTry ? (this._waitTry += 1, this.seek(b)) : this._waitSeek = "NaN"
			}
		},
		onSeeking: function(b) {
			g.log("seeking");
			if (this.isOnePiece() || b.target == this.video) {
				var c = this;
				setTimeout(function() {
					c.controls.onWaiting(b)
				},
				100)
			}
		},
		onDurationChange: function() {},
		onProgress: function() {},
		onRateChange: function() {},
		customWaiting: function() {
			var b = this; ! 1 == this.video.paused && this._lastTime === this.currentTime && (g.log("custom waiting!:) networkstate=" + this.video.networkState), this.controls.onWaiting());
			this._lastTime = this.currentTime;
			setTimeout(function() {
				b.customWaiting()
			},
			5E3)
		},
		sendLoadedTime: function() {
			var b = 0,
			b = -1 == this._startPlayTime ? 0 : (new Date).getTime() - this._startPlayTime;
			this._reporter.sendLoadedTime(b)
		},
		onTimeUpdate: function(b) {
			if (this.isOnePiece()) this.currentTime = this.video.currentTime,
			d.unitedTag && (this.currentTime -= d.unitedTag.offset);
			else {
				for (var c = 0,
				g = 0; g < z; g++) c += parseInt(d.videoInfo._videoSegsDic.streams[d.defaultLanguage][d.defaultVideoType][g].seconds);
				this.currentTime = c + this.video.currentTime
			}
			this.controls.onTimeUpdate(b);
			this._firstflag || (this._firstflag = !0, this.customWaiting(), this.recordLocalPlayPoint(), this.sendLoadedTime(), j.appendItem("phase", "videotimeupdate"), e.isNeedAdrTrick() && e.adrInvalidPauseCheck(this.video));
			this._comscoreflag || (this._comscoreflag = !0, this._reporter.sendThirdPartyReport("xplayer_h5"));
			this.skipTail(this.currentTime)
		},
		curVideo: function() {
			return this.video
		},
		getQuality: function() {
			if ("m3u8" == d.config.content) {
				var b = this.video.src;
				if ( - 1 !== b.indexOf("mp4")) return "m";
				if ( - 1 !== b.indexOf("flv")) return "f";
				if ( - 1 !== b.indexOf("hd2")) return "h"
			} else return "m"
		},
		bufferedEnd: function() {
			var b = this.curVideo().buffered;
			return 0 == b.length ? 0 : b.end(b.length - 1)
		},
		loadNextVideo: function() {
			var b = d.v.data.videos.next,
			c = this;
			g.log("loadNextVideo vid = " + b.encodevid);
			if (b.encodevid) {
				var e = {
					isFullScreen: !0,
					vid: b.vid,
					encodevid: b.encodevid,
					Pt: 2 == window.playmode ? b.seq: null
				};
				d.config.nextAutoPlay = !0;
				n.start(b.encodevid, "", d.config.content,
				function(b, d) {
					c.startPlay(b, d);
					try {
						onPlayerStart(e)
					} catch(g) {
						w.log("onPlayerStart error")
					}
				})
			}
		},
		onPlayEnd: function() {
			if (e.playerCurrentState != e.playerState.PLAYER_STATE_END) if (e.playerCurrentState = e.playerState.PLAYER_STATE_END, g.log(e.playerCurrentState), d.config.events && d.config.events.onPlayEnd && d.v.data.videos) g.log("callback: on play end"),
			d.config.events.onPlayEnd(d.v.data.videos.next);
			else if (d.config.loop && this.replay && (w.log("--loop--"), this.replay()), d.config.events && d.config.events.onPlayEnd) g.log("callback: on play end"),
			d.config.events.onPlayEnd()
		},
		onPlayStart: function() {
			e.playerCurrentState = e.playerState.PLAYER_STATE_PLAYING;
			d.config.events && d.config.events.onPlayStart && (g.log(e.playerCurrentState), g.log("callback: on play start"), d.config.events.onPlayStart())
		},
		onMiddleEnded: function() {
			z++;
			this.video.src = d.multiPieceSrc(z);
			this.video.load();
			this.video.play();
			this.video.style.display = "block";
			g.log("middle src = " + this.video.src)
		},
		onEnded: function(b) {
			if (! (this.isOnePiece() && !0 == this.controls.checkPlayLimit())) if (this.isOnePiece() || z == d.videoInfo._videoSegsDic.streams[d.defaultLanguage][d.defaultVideoType].length - 1) A = !0,
			this._reporter.addPlayerDurationReport(61),
			this._reporter.sendTSLog(61),
			this._reporter.addClientDurationReport(61),
			this.clearLocalPlayPoint(),
			this.showEndCard(b),
			j.appendItem("phase", "videoended");
			else this.onMiddleEnded(b)
		},
		showEndCard: function(b) {
			this.video.style.display = "none";
			this.controls.onEnded(b);
			this.onPlayEnd()
		},
		onBeginFullscreen: function() {},
		onEndFullscreen: function() {
			if ((e.isIPHONE || e.isIPOD) && null != d.v.data.trial) this.video.style.display = "none"
		},
		detectIsPlaying: function(b) {
			var c = b || 0,
			d = this;
			clearTimeout(this.timeoutTimer);
			0 === this.video.currentTime && 60 >= c && (this.video.load(), this.play(), this.timeoutTimer = setTimeout(function() {
				d.detectIsPlaying(++c)
			},
			1E3))
		},
		isOnePiece: function() {
			return "m3u8" == d.config.content || "mp4" == d.config.content && 1 == d.videoInfo._videoSegsDic.streams[d.defaultLanguage][d.defaultVideoType].length
		},
		removeEvent: function() {},
		bindEvent: function() {
			if (!d.v.data.error) if ("directsrc" == d.config.playType && !1 == d.isWeixin) d.addEventHandler(this.video, "play", d.bindAsEventListener(this, this.onPlayIPH)),
			d.addEventHandler(this.video, "timeupdate", d.bindAsEventListener(this, this.onTimeUpdateIPH)),
			d.addEventHandler(this.video, "ended", d.bindAsEventListener(this, this.onEndedIPH)),
			d.addEventHandler(this.video, "webkitendfullscreen", d.bindAsEventListener(this, this.onEndFullscreen));
			else {
				var b = {
					loadstart: "onLoadStart",
					canplay: "onCanPlay",
					loadeddata: "onLoadedData",
					loadedmetadata: "onLoadedMetaData",
					abort: "onAbort",
					error: "onError",
					pause: "onPause",
					waiting: "onWaiting",
					stalled: "onStalled",
					suspend: "onSuspend",
					play: "onPlay",
					volumechange: "onVolumeChange",
					playing: "onPlaying",
					seeked: "onSeeked",
					seeking: "onSeeking",
					durationchange: "onDurationChange",
					progress: "onProgress",
					ratechange: "onRateChange",
					timeupdate: "onTimeUpdate",
					ended: "onEnded",
					webkitbeginfullscreen: "onBeginFullscreen",
					webkitendfullscreen: "onEndFullscreen"
				},
				c;
				for (c in b) w.log(c, this[b[c]]),
				d.addEventHandler(this.video, c, d.bindAsEventListener(this, this[b[c]]))
			}
		}
	};
	var z = -1,
	A = !1,
	ta = 0,
	ua = 600,
	y = [],
	C = {
		flvhd: "\u6807\u6e05",
		flv: "\u6807\u6e05",
		mp4: "\u9ad8\u6e05",
		hd2: "\u8d85\u6e05"
	};
	d.WIN_TYPE = 30;
	d.defaultVideoType = null;
	d.defaultLanguage = "guoyu";
	d.resizeTag = !0;
	d.extend = function(b, c) {
		for (var d in c) b[d] = c[d]
	};
	d.inherits = function(b, c) {
		var d = function() {};
		d.prototype = c.prototype;
		b.prototype = new d;
		b.prototype.constructor = b
	};
	d.fire = function(b, c) {
		if (document.createEventObject) {
			var d = document.createEventObject();
			return b.fireEvent("on" + c, d)
		}
		d = document.createEvent("HTMLEvents");
		d.initEvent(c, !0, !0);
		return ! b.dispatchEvent(d)
	};
	d.bind = function(b, c) {
		return function() {
			return c.apply(b, arguments)
		}
	};
	d.bindAsEventListener = function(b, c) {
		var d = Array.prototype.slice.call(arguments).slice(2);
		return function(e) {
			return c.apply(b, [e || window.event].concat(d))
		}
	};
	d.getCurrentStyle = function(b) {
		return b.currentStyle || document.defaultView.getComputedStyle(b, null)
	};
	d.addEventHandler = function(b, c, e, g) {
		d.config.isMobile && ("click" == c && !g) && (c = "touchend");
		b.addEventListener ? b.addEventListener(c, e, !1) : b.attachEvent ? b.attachEvent("on" + c, e) : b["on" + c] = e
	};
	d.removeEventHandler = function(b, c, e, g) {
		d.config.isMobile && ("click" == c && !g) && (c = "touchend");
		b.removeEventListener ? b.removeEventListener(c, e, !1) : b.detachEvent ? b.detachEvent("on" + c, e) : b["on" + c] = null
	};
	d.show = function(b) {
		b.style.display = "video" === b.tagName.toLowerCase() ? "": "block"
	};
	d.hide = function(b) {
		b && (b.style.display = "none")
	};
	d.getLeftPosition = function(b) {
		for (var c = b.offsetLeft; b.offsetParent;) b = b.offsetParent,
		c += b.offsetLeft;
		return c
	};
	d.get = function(b, c) {
		return (c || document).querySelector(b)
	};
	d.pieceLength = function() {
		return "m3u8" == d.config.content ? 1 : d.videoInfo._videoSegsDic.streams[d.defaultLanguage][d.defaultVideoType].length
	};
	d.multiPieceSrc = function(b) {
		return b >= d.videoInfo._videoSegsDic.streams[d.defaultLanguage][d.defaultVideoType].length ? "": d.videoInfo._videoSegsDic.streams[d.defaultLanguage][d.defaultVideoType][b].src
	};
	d.getTime = function(b) {
		if (!b) return "00:00";
		var c = Math.floor(b),
		b = c % 60,
		c = Math.floor(c / 60);
		return (10 > c ? "0" + c: c) + ":" + (10 > b ? "0" + b: b)
	};
	d.addClass = function(b, c) {
		d.hasClass(b, c) || (b.className += " " + c)
	};
	d.hasClass = function(b, c) {
		return RegExp("(^| )" + c + "( |$)").test(b.className)
	};
	d.removeClass = function(b, c) {
		b.className = b.className.replace(RegExp("(^| )" + c + "( |$)"), " ").replace(/^\s+|\s+$/g, "")
	};
	d.m3u8src = function(b, c) {
		var d = "https://v.youku.com/player/getM3U8/vid/" + b + "/type/" + c + "/ts/" + parseInt((new Date).getTime() / 1E3);
		if (e.isIPHONE || e.isIPOD) d += "/useKeyFrame/0";
		return d + "/v.m3u8"
	};
	d.m3u8src_v2 = function(b, c) {
		if (d.OLD_M3U8) return d.m3u8src(b, c);
		var g = {
			vid: b,
			type: c,
			ts: parseInt((new Date).getTime() / 1E3),
			keyframe: e.isIPHONE ? 0 : 1
		};
		d.password && (g.password = d.password);
		d.password && (d.initConfig.client_id && d.config.partner_config && 1 == d.config.partner_config.status && 1 == d.config.partner_config.passless) && (g.client_id = d.initConfig.client_id);
		var i = encodeURIComponent(L(N(O(d.mk.a4 + "poz" + e.userCache.a2, [19, 1, 4, 7, 30, 14, 28, 8, 24, 17, 6, 35, 34, 16, 9, 10, 13, 22, 32, 29, 31, 21, 18, 3, 2, 23, 25, 27, 11, 20, 5, 15, 12, 0, 33, 26]).toString(), e.userCache.sid + "_" + b + "_" + e.userCache.token)));
		g.ep = i;
		g.sid = e.userCache.sid;
		g.token = e.userCache.token;
		g.ctype = "12";
		g.ev = "1";
		g.oip = d.v.data.security.ip;
		return "https://pl-ali.youku.com/playlist/m3u8?" + t(D(g, d.getUCParam(b)))
	};
	d.isLandScape = function() {
		return 90 == window.orientation || -90 == window.orientation
	};
	d.getUCParam = function(b) {
		var c = {};
		"undefined" != typeof getUCSecret ? c.xk = getUCSecret(b) : "undefined" != typeof uckey ? (c.uc_param_str = "xk", c.xk = uckey.getUCKey(b)) : !0 == d.isUCBrowserAndValidVersion() && (c.uc_param_str = "xk");
		return c
	};
	d.isUCBrowserAndValidVersion = function() {
		var b = navigator.userAgent,
		c = b.search(/ucbrowser/i);
		return - 1 != c && 9.8 <= parseFloat(b.substr(c + 10, 4)) ? !0 : !1
	};
	YoukuHTML5Player = function(b, c) {
		null == b.parentBox && (b.parentBox = "parentBox");
		b.expand && 0 < parseInt(b.width) ? (r(b.parentBox).style.width = b.width + "px", r(b.parentBox).style.height = b.height + "px") : (b.width = r(b.parentBox).offsetWidth, b.height = r(b.parentBox).offsetHeight);
		d.config = b;
		this.setting = c || {};
		this.root = r(d.config.parentBox);
		var e = r(d.config.parentBox),
		g = "",
		h = parseInt(d.config.width),
		g = g + " webkit-playsinline";
		if (d.initConfig.iswifi || d.initConfig.autoplay) g += " autoplay";
		g = '<div id="x-player" class="' + G(h) + '"><video class="x-video-player"' + g + '></video><div class="x-video-poster"><img/></div><div class="x-video-logo"><div class="x-icon-exclusive"></div></div><div class="x-video-loading"></div><div class="x-video-info"><h1 class="x-title"></h1><div class="x-video-state"></div><div class="x-showmore"></div><div class="x-mask"></div></div><div id="x-video-button" class="x-video-button"><div class="x-video-play-ico"></div></div><div class="x-feedback"><div class="x-message"><div class="x-message-txt"></div><div class="x-message-btn"></div></div><div class="x-mask"></div></div><div class="x-pay"><div class="x-pay-txt"><h1><em class="vip"></em></h1><p class="x-pay-tips"></p></div><div class="x-pay-btn"><button type="button" class="x-btn x-btn-try">\u514d\u8d39\u8bd5\u770b</button><button type="button" class="x-btn x-btn-pay"></button></div></div><div class="x-pay-panel" style="display: none;"><div class="x-pay-txt"></div><div class="x-pay-content"><div class="x-pay-title"></div><div><button class="x-button x-try">\u514d\u8d39\u8bd5\u770b</button><button class="x-button x-buy"></button></div></div></div><div class="x-advert"><div class="x-advert-info"><div class="x-advert-skip"><div class="x-advert-txt"></div><div class="x-mask"></div></div><div class="x-advert-countdown"><div class="x-advert-txt"></div><div class="x-mask"></div></div></div><div class="x-advert-detail"><div class="x-advert-txt">\u8be6\u7ec6\u4e86\u89e3<span class="x-ico-detail"></span></div><div class="x-mask"></div></div></div><div class="x-ad-pause"></div><div class="x-prompt"></div><div class="x-dashboard"><div class="x-progress-mini"><div class="x-progress-track-mini"></div><div class="x-progress-load-mini"></div><div class="x-progress-play-mini"></div></div><div class="x-console"><div class="x-progress"><div class="x-progress-track"><div class="x-progress-load"></div><div class="x-progress-play"></div><div class="x-progress-seek"><div class="x-seek-handle"></div></div></div></div><div class="x-controls"><div class="x-play-control"><button class="x-control-btn"><b id=x-playbtn class="x-playing"><em>\u64ad\u653e</em></b></button></div><div class="x-time-display"><span class="x-time-current">00:00</span><span class="x-time-splite">/</span><span class="x-time-duration">00:00</span></div><div class="x-settings"><div class="x-playspeed"></div><div class="x-playshow" style="display:none"><button class="x-control-btn" title="\u9009\u96c6">\u9009\u96c6</button></div><div class="x-localization"></div><div class="x-quality"></div><div class="x-fullscreen"><button class="x-control-btn" type="button" title="\u5168\u5c4f\u6a21\u5f0f" rol="button"><b class="x-zoomin"><em>\u5168\u5c4f</em></b></button></div></div></div></div></div><div class="x-showlist"></div><div class="x-tips"></div><div class="x-trigger"></div></div>';
		e.innerHTML = g;
		e = d.get("video", this.root);
		X.apply(this, [e].concat([].slice.call(arguments)));
		this.video.style.width = "100%";
		this.video.style.height = "100%";
		this.video.style.display = "none";
		this.video.style.position = "relative";
		this._firstPlayTag = !1;
		this._retry = 2;
		this.uiAdapter()
	};
	d.inherits(YoukuHTML5Player, X);
	d.extend(YoukuHTML5Player.prototype, {
		startPlay: function(b, c, e) {
			if (b && b.data && (b.data.show = b.data.show || {},
			c.abstarttime = (new Date).getTime(), c._playListData = b.data, c._user = b.user, d.v = b, d.videoInfo = c, d.extend(this.setting, e), !b.data.error || !this.processError(b, c, e))) {
				this._reporter = new U(this, d.v, d.videoInfo._sid);
				this.controls = this.setupControls(this, this.setting);
				this.controls.init(d.v, d.videoInfo);
				this.mpieceReport();
				this.createIdNode();
				if (this.isNeedAdRequest()) this.processAd();
				else if (this.controls.bindVideoBtnEvent(), this.realStartPlay(), 1 == d.initConfig.ucautoplay) this.controls.onVideoBtnClick({});
				"m3u8" == d.config.content && new ia(this.video)
			}
		},
		isNeedAdRequest: function() {
			"undefined" == typeof this._frontAdTag && (this._frontAdTag = !1);
			e.isNeedFrontAd = !this._frontAdTag && "directsrc" != d.config.playType;
			return e.isNeedFrontAd
		},
		processAd: function() {
			if (this.isNeedAdRequest() && (this._frontAdTag = !0, this._adplugin = new W(this, d.v, d.videoInfo._sid), this.bind_frontAd = d.bindAsEventListener(this, this.onFrontAdInfoOK), this.bind_frontAdInfoTimeout = d.bindAsEventListener(this, this.onFrontAdInfoTimeout), this._adplugin.addEventListener("frontAdinfook", this.bind_frontAd, !1), this._adplugin.addEventListener("frontAdinfotimeout", this.bind_frontAdInfoTimeout), this.bind_unitedFrontAd = d.bindAsEventListener(this, this.onUnitedFrontAdInfoOK), this._adplugin.addEventListener("unitedfrontadinfook", this.bind_unitedFrontAd, !1), this.bind_backAdInfoOK = d.bindAsEventListener(this, this.onBackAdInfoOK), this.bind_backAdInfoTimeout = d.bindAsEventListener(this, this.onBackAdInfoTimeout), this._adplugin.addEventListener("backAdinfook", this.bind_backAdInfoOK, !1), this._adplugin.addEventListener(" backAdinfotimeout", this.bind_backAdInfoTimeout), this.bind_uglyCloseAd = d.bindAsEventListener(this, this.onUglyCloseAd), this._adplugin.addEventListener("uglyclosead", this.bind_uglyCloseAd), this.controls.bindAdVideoBtnEvent(), window.adpluginobject = this._adplugin, 1 == d.initConfig.ucautoplay)) this.controls.onVideoBtnTouchEnd({})
		},
		requestAd: function() {
			this._adplugin && this._adplugin.frontAd()
		},
		onUglyCloseHint: function() {
			this.controls.showUglyHint()
		},
		onUglyCloseAd: function() {
			g.log("ugly close");
			this.controls.closeUglyHint();
			this.adplayer.uglyClose()
		},
		onFrontAdInfoTimeout: function() {
			this._hasStartPlay = !0;
			this.realStartPlay(!0)
		},
		onUnitedFrontAdInfoOK: function(b) {
			g.log("<b>on united front adinfo ok</b>");
			var c = b.data.info;
			if (0 == b.data.info.VAL.length) g.log("<b>onUnitedFrontAdInfoOK val length == 0 </b>"),
			this.loadVTVC(b.data.vtvc),
			this.video.src = d.m3u8src_v2(d.v.data.id, d.defaultVideoType),
			this.unitedStartPlay(c, !0);
			else {
				this.adplayer = new Ba(this, b);
				var e = this;
				this.adplayer.addEventListener(E,
				function() {
					e.controls.startPlay();
					g.log("<font color=red>united ad end</font>");
					e._realFlag || (e._realFlag = !0, e.adplayer.clearTimer(), e.unitedStartPlay(c))
				},
				!1);
				this.adplayer.addEventListener(B,
				function() {
					g.log("<font color=red>united ad error</font>");
					e._realFlag || (d.unitedTag = null, e._realFlag = !0, e.adplayer.clearTimer(), e.video.src = d.m3u8src_v2(d.v.data.id, d.defaultVideoType), e.unitedStartPlay(c, !0))
				},
				!1);
				this.adplayer.addEventListener(J,
				function() {
					g.log("<b>ugly hint</b>");
					e.onUglyCloseHint()
				},
				!1);
				this.adplayer.play();
				this.createIdNode()
			}
		},
		loadVTVC: function(b) {
			for (var c = 0; c < b.length; c++) F(b[c].VC, "js")
		},
		onFrontAdInfoOK: function(b) {
			g.log("onFrontAdInfoOK");
			if (!0 !== this._hasStartPlay) if (0 == b.data.urls.length) this.loadVTVC(b.data.vtvc),
			this.realStartPlay(!0);
			else {
				e.playerCurrentState = e.playerState.PLAYER_STATE_AD;
				g.log(e.playerCurrentState);
				this.adplayer = new V(this, b);
				var c = this;
				this.adplayer.addEventListener(E,
				function(b) {
					g.log("ad end");
					c._realFlag || (c._realFlag = !0, c.adplayer.clearTimer(), c.realStartPlay(b.data))
				},
				!1);
				this.adplayer.addEventListener(B,
				function(b) {
					g.log("<font color=red>ad error</font>");
					c._realFlag || (c._realFlag = !0, c.adplayer.clearTimer(), c.realStartPlay(b.data))
				},
				!1);
				this.adplayer.addEventListener(J,
				function() {
					g.log("<b>ugly hint</b>");
					c.onUglyCloseHint()
				},
				!1);
				this.adplayer.play();
				this.createIdNode()
			}
		},
		onBackAdInfoTimeout: function() {
			g.log("onBackAdInfoTimeout");
			this.showEndCard()
		},
		onBackAdInfoOK: function(b) {
			g.log("onBackAdInfoOK");
			if (0 == b.data.urls.length) this.showEndCard();
			else {
				this.adplayer = new V(this, b);
				var c = this;
				this.adplayer.addEventListener(E,
				function() {
					c.showEndCard()
				});
				this.adplayer.addEventListener(B,
				function() {
					c.showEndCard()
				});
				this.adplayer.play()
			}
		},
		prepareVideoTag: function() {
			this.video.preload = "none";
			"m3u8" == d.config.content ? this.video.src = d.videoInfo.src: null != d.videoInfo._videoSegsDic && null != d.videoInfo._videoSegsDic.streams[d.defaultLanguage][d.defaultVideoType] && (this.video.src = d.videoInfo._videoSegsDic.streams[d.defaultLanguage][d.defaultVideoType][0].src);
			d.v.data.trial && ("episodes" != d.v.data.trial.type && 0 == d.v.data.trial.time) && (this.video.src = null);
			this.createIdNode()
		},
		createIdNode: function() {
			if (!r(d.config.id)) {
				var b = document.createElement("div");
				b.id = d.config.id;
				r(d.config.parentBox).appendChild(b)
			}
		},
		redirect: function() {
			var b = "";
			"m3u8" == d.config.content ? b = d.videoInfo.src: null != d.videoInfo._videoSegsDic && null != d.videoInfo._videoSegsDic.streams[d.defaultLanguage][d.defaultVideoType] && (b = d.videoInfo._videoSegsDic.streams[d.defaultLanguage][d.defaultVideoType][0].src);
			g.log("redirect play src=" + b);
			this._reporter.addPlayerStaticReport();
			this._reporter.sendTSLog(60);
			this._reporter.addClientDurationReport(60);
			this._reporter.sendUserActionReport("xps", "c");
			window.open(b, "", "", !1);
			this._reporter.sendClientConsumeReport();
			this.onPlayStart()
		},
		realStartPlay: function(b) {
			g.log("realStartPlay " + b);
			this.controls.bindEvent();
			this.controls.startPlay();
			this.bindEvent();
			this.prepareVideoTag();
			this.playVideos(b)
		},
		unitedStartPlay: function(b, c) {
			g.log("<b>united start play </b>");
			d.unitedTag = {
				offset: b.VAL.length ? b.VAL[0].AL: 0
			};
			this.controls.bindEvent();
			this.bindEvent();
			if (!0 === c) this.video.load(),
			this.video.play(),
			this.controls.startPlay();
			else this.onPlay();
			this.controls.onPlay()
		},
		playVideos: function(b) {
			g.log("playVideos " + b);
			A = !1;
			z = 0;
			this.video.style.display = (e.isIPHONE || e.isIPOD) && null != d.v.data.trial ? "none": "block";
			if (d.config.autoplay || d.config.nextAutoPlay || b) g.log("src= " + this.video.src + " auto = " + b),
			this.video.load(),
			this.video.play()
		},
		processError: function(b) {
			var c = b.data.error.code;
			if ( - 301 == c || -307 == c || -308 == c) return b.data.trial ? b.data.trial.time = 0 : b.data.trial = {
				time: 0
			},
			!1;
			d.hide(d.get(".x-video-poster"), this.root);
			this.feedbackPanel = new T(this, b);
			return ! 0
		},
		mpieceReport: function() {
			"mp4" == d.config.content && (d.videoInfo._videoSegsDic && null != d.videoInfo._videoSegsDic.streams[d.defaultLanguage][d.defaultVideoType] && 1 < d.videoInfo._videoSegsDic.streams[d.defaultLanguage][d.defaultVideoType].length) && g.log("mpiece report")
		},
		resize_: function(b, c, e) {
			g.log("resize=" + d.resizeTag);
			c && (e && d.resizeTag && this.controls) && (b = this.controls.xplayer.className, this.controls && this.controls.xplayer && ( - 1 === b.indexOf("fullscreen") ? this.controls.xplayer.className = G(c) : (c = window.innerWidth, this.controls.xplayer.className = G(c) + " x-player-fullscreen")))
		},
		uiAdapter: function() {
			"index" == d.config.wintype && (d.hide(d.get(".x-localization", this.root)), d.hide(d.get(".x-quality", this.root)));
			d.get("#x-video-button", this.root).className = "x-video-button";
			"m3u8" != d.config.content && d.hide(d.get(".x-quality", this.root));
			var b = this;
			window.addEventListener("resize",
			function(c) {
				g.log("window.resize");
				if (b.controls) b.controls.onResize(c)
			},
			!1)
		},
		isOutTryDuration: function(b) {
			return this.tryDuration ? b >= this.tryDuration: !1
		},
		replay: function() {
			z = 0;
			this._ireflag = this._comscoreflag = !1;
			this._firstflag = e.adrPlayTrick = !1;
			this.video.style.display = "block";
			this.isOnePiece() || (this.video.src = d.multiPieceSrc(z));
			e.isIPAD && (this.video.src = d.m3u8src_v2(d.v.data.id, d.defaultVideoType), d.unitedTag = null);
			this.video.load();
			this.video.play();
			this._reporter.tsInit();
			this._reporter.sendTSLog(60);
			this._reporter.addClientDurationReport(60);
			this._reporter.addPlayerDurationReport(62)
		},
		seekToLastPoint: function() {
			if (e.isAndroid) return ! 1;
			var b = d.v.data.id,
			c = -1;
			d.v.data.playlog && (c = d.v.data.playlog.lastpoint / 1E3);
			var m = parseInt(j.getItem(b + "_playpoint")) || -1,
			b = -1; - 1 != c && -1 != m ? (b = c, 60 > Math.abs(c - m) && (b = m)) : (b = c, -1 == c && (b = m));
			g.log("lastpoint=" + b);
			c = j.getItem("youku_ignore_lasttime");
			c = parseInt(c) || 0;
			return - 1 !== b && 120 <= b && 3 > c && !d.v.data.trial && b < d.videoInfo.totalTime - 120 ? (this.controls.showLastTimeTip(b), e.isAndroid && (this._waitSeek = b), this.seek(b), !0) : !1
		},
		clearLocalPlayPoint: function() {
			var b = d.v.data.id;
			clearTimeout(this._recordLPPTimer);
			j.removeItem(b + "_playpoint")
		},
		recordLocalPlayPoint: function() {
			var b = d.v.data.id + "",
			c = this.currentTime || 0,
			e = this;
			this._recordLPPTimer = setTimeout(function() {
				e.recordLocalPlayPoint()
			},
			1E4);
			j.removeItem(b + "_playpoint");
			if (600 <= d.v.data.video.seconds && (c < d.videoInfo.totalTime - 120 && !d.v.data.trial && 120 <= c) && (j.setItem(b + "_playpoint", c), !this.updatePPVids)) {
				this.updatePPVids = !0;
				c = j.getItem("youku_playpoint_vids") || "";
				if ("" == c) c = b;
				else {
					for (var c = c.split(":"), i = 0; i < c.length; i++) c[i] == b && (c[i] = "");
					c.push(b);
					c = c.join(":");
					for (b = 0;
					":" == c.charAt(b);) b++;
					c = c.substring(b);
					c = c.replace(/:(:)+/g, ":")
				}
				b = c.split(":");
				30 < b.length && (g.log("slice"), j.removeItem(b[0] + "_playpoint"), c = b.slice(1).join(":"));
				g.log("youku_playpoint_vids=" + c);
				j.setItem("youku_playpoint_vids", c)
			}
		},
		skipHead: function() {
			if (!e.isAndroid) {
				var b = parseInt((d.v.data.dvd || {}).head || -1);
				g.log("skiphead = " + b); - 1 != b && (this.controls.tipPanel.onSkipHead(), "true" == j.getItem("youku_conf_skip") && (e.isAndroid && (this._waitSeek = b / 1E3), this.seek(b / 1E3)))
			}
		},
		skipTail: function(b) {
			if (!e.isAndroid) {
				var c = parseInt((d.v.data.dvd || {}).tail || -1); - 1 != c && (b >= c / 1E3 - 10 && !this._tailTip) && (g.log("skiptail(act before 10) =" + c), this._tailTip = !0, this.controls.tipPanel.onSkipTail()); - 1 != c && (b >= c / 1E3 && !this._tailSkipped) && (this._tailSkipped = !0, "true" == j.getItem("youku_conf_skip") && this.seek(parseInt(d.v.data.video.seconds) - 1))
			}
		},
		assistSkipTail: function(b) {
			var c = parseInt((d.v.data.dvd || {}).tail || -1);
			this._tailTip = b >= c / 1E3 ? this._tailSkipped = !0 : this._tailSkipped = !1
		},
		seek: function(b, c) {
			b = b || 0;
			b = Math.max(b, 0);
			d.videoInfo.totalTime && (b = Math.min(b, d.videoInfo.totalTime - 5));
			this.isOutTryDuration(b) && (b = this.tryDuration - 1);
			this.assistSkipTail(b);
			var e = this;
			this.switchTimer && clearTimeout(this.switchTimer);
			this.currentTime = b;
			if (this.isOnePiece()) {
				var i = this.video.seekable,
				h = 1 == i.length ? i.end(0) : 0;
				d.unitedTag && (b += d.unitedTag.offset, h += d.unitedTag.offset);
				1 == i.length && b < h ? (g.log("seek ct = " + b + ",end = " + i.end(0)), this.seekTo(b, c)) : (this.controls.onWaiting(), this.switchTimer = setTimeout(function() {
					e.seek(b, c)
				},
				100))
			} else g.log("multi seek"),
			this.multiSeekTo(b)
		},
		seekTo: function(b, c) {
			if (this.isOnePiece()) {
				g.log("is one piece");
				var d = this;
				try {
					d.video.currentTime = b
				} catch(e) {
					var h = 0;
					this.video.addEventListener("canplay",
					function() {
						1 !== h && (h = 1, g.log("canplay time=" + b), d.video.currentTime = b)
					})
				}
				"function" == typeof c && (g.log("<b>seekto callback(mayby play)</b>"), c())
			}
		},
		multiSeekTo_: function() {
			g.log("YoukuHTML5 ")
		},
		multiSeekTo: function(b) {
			g.log("YoukuHTML5Player multiSeekTo !");
			for (var c = 0,
			e = 0,
			i = 0,
			h = 0; h < d.videoInfo._videoSegsDic.streams[d.defaultLanguage][d.defaultVideoType].length; h++) {
				var j = parseInt(d.videoInfo._videoSegsDic.streams[d.defaultLanguage][d.defaultVideoType][h].seconds),
				c = c + j;
				if (c > b) {
					e = h;
					i = j - (c - b);
					break
				} else if (c == b) {
					e = h + 1;
					i = 0;
					break
				}
			}
			this.video.pause();
			if (e == z) {
				g.log(" piece time = " + i);
				try {
					this.video.currentTime = i
				} catch(n) {}
				this.video.play()
			} else {
				z = e;
				var l = 0,
				q = this;
				this.video.addEventListener("canplay",
				function() {
					1 !== l && (l = 1, g.log("canplay time=" + i), q.video.currentTime = i)
				}); (b = d.multiPieceSrc(z)) ? (this.video.src = b, this.video.load(), this.video.play()) : this.video.pause()
			}
			this.video.style.display = "block"
		},
		adjustVideoRatio: function(b) {
			if (!e.isIOS) {
				if (("onorientationchange" in window || "orientation" in window) && !this._avrTag) {
					this._avrTag = !0;
					var c = this;
					window.addEventListener("orientationchange",
					function() { ! 0 === c.controls.fullscreenPanel.fullFlag() && c.adjustVideoRatio()
					})
				}
				var c = this,
				g = this.video;
				setTimeout(function() {
					if (1 === b) g.style.width = "100%",
					g.style.height = "100%",
					g.style.top = null,
					g.style.left = null;
					else {
						var c = d.get(".x-player", this.root),
						c = c.offsetWidth / c.offsetHeight,
						f = g.videoWidth / g.videoHeight;
						isNaN(f) || isNaN(c) || !isFinite(c) || !isFinite(f) ? (g.style.width = "100%", g.style.height = "100%", g.style.top = null, g.style.left = null) : c < f ? (g.style.width = "100%", g.style.height = 100 * (c / f) + "%", g.style.top = 100 * (1 / c - 1 / f) / 2 * c + "%", g.style.left = null) : (g.style.height = "100%", g.style.width = 100 * (f / c) + "%", g.style.left = 100 * ((c - f) / 2 / c) + "%", g.style.top = null)
					}
				},
				2E3)
			}
		}
	});
	window.YoukuPlayerSelect = S;
	window.BuildVideoInfo = n;
	window.QS = function() {
		var b = {},
		c = window.location.search.match(RegExp("[?&][^?&]+=[^?&]+", "g"));
		if (null != c) for (var d = 0; d < c.length; d++) {
			var e = c[d],
			g = e.indexOf("="),
			j = e.substring(1, g),
			e = e.substring(g + 1);
			try {
				e = decodeURI(e)
			} catch(n) {}
			if ("true" == e) e = !0;
			else if ("false" != e) if (isNaN(e)) {
				if ("string" == typeof e && /{[^{^}]{0,}}/.test(e)) try {
					e = JSON.parse(e)
				} catch(l) {}
			} else e = +e;
			"undefined" == typeof b[j] ? b[j] = e: b[j] instanceof Array ? b[j].push(e) : b[j] = [b[j], e]
		}
		return b
	};
	window.YKP = e;
	window.YKU = u;
	window.YoukuHTML5Player = YoukuHTML5Player;
	for (var c = document.getElementsByTagName("script"), Q = 0; Q < c.length; Q++) if ( - 1 !== c[Q].src.indexOf("player.youku.com/jsapi")) {
		eval(c[Q].innerHTML);
		break
	}
	window.notifyYKU = function() {
		u.swfLoaded = 1
	};
	window.onPlayerReady = function() {
		d.initConfig.events && d.initConfig.events.onPlayerReady && (e.playerCurrentState = e.playerState.PLAYER_STATE_READY, g.log(e.playerCurrentState), g.log("api:flash play ready"), d.initConfig.events.onPlayerReady())
	};
	window.onPlayerStart = function() {
		d.initConfig.events && d.initConfig.events.onPlayStart && (e.playerCurrentState = e.playerState.PLAYER_STATE_PLAYING, g.log(e.playerCurrentState), g.log("api:flash play start"), d.initConfig.events.onPlayStart())
	};
	window.onPlayerComplete = function() {
		d.initConfig.events && d.initConfig.events.onPlayEnd && (e.playerCurrentState = e.playerState.PLAYER_STATE_END, g.log(e.playerCurrentState), g.log("api:flash play end"), d.initConfig.events.onPlayEnd())
	};
	window.onPlayerError = function(b) {
		if (d.initConfig.events && d.initConfig.events.onPlayError && (e.playerCurrentState = e.playerState.PLAYER_STATE_ERROR, g.log(e.playerCurrentState), "4000" != (b.code || "1000"))) g.log("api:flash play error"),
		d.initConfig.events.onPlayError(b.message || "\u64ad\u653e\u51fa\u9519", b)
	}
})();